// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`construct generate complex construct 1`] = `
"// generated by terrastack.io

import * as tst from '@terrastack/core';
import * as cdk from '@aws-cdk/core';


/**
 * undefined
 */
export class AwsFooResource extends tst.ResourceObject {
    arn: string;

    tags?: cdk.TagManager;

    s3Import?: AwsFooResourcePropsS3ImportProps;


    public constructor(scope: cdk.Construct, ns: string, options: AwsFooResourceProps) {
        super(scope, ns, { ...options }, {
            name: \\"aws_foo_resource\\",
            schemaType: tst.TerraformSchemaType.RESOURCE,
            providerVersion: '2.5.2',
            providerName: 'aws',
            rawSchema: \`{\\"name\\":\\"aws_foo_resource\\",\\"version\\":0,\\"block\\":{\\"attributes\\":{\\"arn\\":{\\"type\\":\\"string\\",\\"computed\\":true},\\"tags\\":{\\"type\\":[\\"map\\",\\"string\\"],\\"optional\\":true}},\\"block_types\\":{\\"s3_import\\":{\\"nesting_mode\\":\\"single\\",\\"block\\":{\\"block_types\\":{\\"foo\\":{\\"nesting_mode\\":\\"single\\",\\"block\\":{\\"attributes\\":{\\"bar\\":{\\"type\\":\\"string\\",\\"optional\\":true}}}}},\\"attributes\\":{\\"create\\":{\\"type\\":\\"string\\",\\"optional\\":true}}}}}}}\`
        });
        this.arn = tst.TfReference.for(this, 'arn', null);
        this.tags = new cdk.TagManager(cdk.TagType.MAP, 'aws_foo_resource', options.tags, { tagPropertyName: 'tags' });
        this.s3Import = options.s3Import;
    }
}

export interface AwsFooResourceProps {
    readonly tags?: {[k:string]: string};

    readonly s3Import?: AwsFooResourcePropsS3ImportProps;

}

export interface AwsFooResourcePropsS3ImportProps {
    readonly create?: string;

    readonly foo?: AwsFooResourcePropsS3ImportPropsFooProps;

}

export interface AwsFooResourcePropsS3ImportPropsFooProps {
    readonly bar?: string;

}

"
`;
