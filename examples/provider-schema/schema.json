{
  "format_version": "0.1",
  "provider_schemas": {
    "aws": {
      "provider": {
        "version": 0,
        "block": {
          "attributes": {
            "access_key": {
              "type": "string",
              "description": "The access key for API operations. You can retrieve this\nfrom the 'Security & Credentials' section of the AWS console.",
              "optional": true
            },
            "allowed_account_ids": {
              "type": [
                "set",
                "string"
              ],
              "optional": true
            },
            "forbidden_account_ids": {
              "type": [
                "set",
                "string"
              ],
              "optional": true
            },
            "ignore_tag_prefixes": {
              "type": [
                "set",
                "string"
              ],
              "description": "Resource tag key prefixes to ignore across all resources.",
              "optional": true
            },
            "ignore_tags": {
              "type": [
                "set",
                "string"
              ],
              "description": "Resource tag keys to ignore across all resources.",
              "optional": true
            },
            "insecure": {
              "type": "bool",
              "description": "Explicitly allow the provider to perform \"insecure\" SSL requests. If omitted,default value is `false`",
              "optional": true
            },
            "max_retries": {
              "type": "number",
              "description": "The maximum number of times an AWS API request is\nbeing executed. If the API request still fails, an error is\nthrown.",
              "optional": true
            },
            "profile": {
              "type": "string",
              "description": "The profile for API operations. If not set, the default profile\ncreated with `aws configure` will be used.",
              "optional": true
            },
            "region": {
              "type": "string",
              "description": "The region where AWS operations will take place. Examples\nare us-east-1, us-west-2, etc.",
              "required": true
            },
            "s3_force_path_style": {
              "type": "bool",
              "description": "Set this to true to force the request to use path-style addressing,\ni.e., http://s3.amazonaws.com/BUCKET/KEY. By default, the S3 client will\nuse virtual hosted bucket addressing when possible\n(http://BUCKET.s3.amazonaws.com/KEY). Specific to the Amazon S3 service.",
              "optional": true
            },
            "secret_key": {
              "type": "string",
              "description": "The secret key for API operations. You can retrieve this\nfrom the 'Security & Credentials' section of the AWS console.",
              "optional": true
            },
            "shared_credentials_file": {
              "type": "string",
              "description": "The path to the shared credentials file. If not set\nthis defaults to ~/.aws/credentials.",
              "optional": true
            },
            "skip_credentials_validation": {
              "type": "bool",
              "description": "Skip the credentials validation via STS API. Used for AWS API implementations that do not have STS available/implemented.",
              "optional": true
            },
            "skip_get_ec2_platforms": {
              "type": "bool",
              "description": "Skip getting the supported EC2 platforms. Used by users that don't have ec2:DescribeAccountAttributes permissions.",
              "optional": true
            },
            "skip_metadata_api_check": {
              "type": "bool",
              "optional": true
            },
            "skip_region_validation": {
              "type": "bool",
              "description": "Skip static validation of region name. Used by users of alternative AWS-like APIs or users w/ access to regions that are not public (yet).",
              "optional": true
            },
            "skip_requesting_account_id": {
              "type": "bool",
              "description": "Skip requesting the account ID. Used for AWS API implementations that do not have IAM/STS API and/or metadata API.",
              "optional": true
            },
            "token": {
              "type": "string",
              "description": "session token. A session token is only required if you are\nusing temporary security credentials.",
              "optional": true
            }
          },
          "block_types": {
            "assume_role": {
              "nesting_mode": "set",
              "block": {
                "attributes": {
                  "external_id": {
                    "type": "string",
                    "description": "The external ID to use when assuming the role. If omitted, no external ID is passed to the AssumeRole call.",
                    "optional": true
                  },
                  "policy": {
                    "type": "string",
                    "description": "The permissions applied when assuming a role. You cannot use, this policy to grant further permissions that are in excess to those of the,  role that is being assumed.",
                    "optional": true
                  },
                  "role_arn": {
                    "type": "string",
                    "description": "The ARN of an IAM role to assume prior to making API calls.",
                    "optional": true
                  },
                  "session_name": {
                    "type": "string",
                    "description": "The session name to use when assuming the role. If omitted, no session name is passed to the AssumeRole call.",
                    "optional": true
                  }
                }
              },
              "max_items": 1
            },
            "endpoints": {
              "nesting_mode": "set",
              "block": {
                "attributes": {
                  "accessanalyzer": {
                    "type": "string",
                    "description": "Use this to override the default service endpoint URL",
                    "optional": true
                  },
                  "acm": {
                    "type": "string",
                    "description": "Use this to override the default service endpoint URL",
                    "optional": true
                  },
                  "acmpca": {
                    "type": "string",
                    "description": "Use this to override the default service endpoint URL",
                    "optional": true
                  },
                  "amplify": {
                    "type": "string",
                    "description": "Use this to override the default service endpoint URL",
                    "optional": true
                  },
                  "apigateway": {
                    "type": "string",
                    "description": "Use this to override the default service endpoint URL",
                    "optional": true
                  },
                  "applicationautoscaling": {
                    "type": "string",
                    "description": "Use this to override the default service endpoint URL",
                    "optional": true
                  },
                  "applicationinsights": {
                    "type": "string",
                    "description": "Use this to override the default service endpoint URL",
                    "optional": true
                  },
                  "appmesh": {
                    "type": "string",
                    "description": "Use this to override the default service endpoint URL",
                    "optional": true
                  },
                  "appstream": {
                    "type": "string",
                    "description": "Use this to override the default service endpoint URL",
                    "optional": true
                  },
                  "appsync": {
                    "type": "string",
                    "description": "Use this to override the default service endpoint URL",
                    "optional": true
                  },
                  "athena": {
                    "type": "string",
                    "description": "Use this to override the default service endpoint URL",
                    "optional": true
                  },
                  "autoscaling": {
                    "type": "string",
                    "description": "Use this to override the default service endpoint URL",
                    "optional": true
                  },
                  "autoscalingplans": {
                    "type": "string",
                    "description": "Use this to override the default service endpoint URL",
                    "optional": true
                  },
                  "backup": {
                    "type": "string",
                    "description": "Use this to override the default service endpoint URL",
                    "optional": true
                  },
                  "batch": {
                    "type": "string",
                    "description": "Use this to override the default service endpoint URL",
                    "optional": true
                  },
                  "budgets": {
                    "type": "string",
                    "description": "Use this to override the default service endpoint URL",
                    "optional": true
                  },
                  "cloud9": {
                    "type": "string",
                    "description": "Use this to override the default service endpoint URL",
                    "optional": true
                  },
                  "cloudformation": {
                    "type": "string",
                    "description": "Use this to override the default service endpoint URL",
                    "optional": true
                  },
                  "cloudfront": {
                    "type": "string",
                    "description": "Use this to override the default service endpoint URL",
                    "optional": true
                  },
                  "cloudhsm": {
                    "type": "string",
                    "description": "Use this to override the default service endpoint URL",
                    "optional": true
                  },
                  "cloudsearch": {
                    "type": "string",
                    "description": "Use this to override the default service endpoint URL",
                    "optional": true
                  },
                  "cloudtrail": {
                    "type": "string",
                    "description": "Use this to override the default service endpoint URL",
                    "optional": true
                  },
                  "cloudwatch": {
                    "type": "string",
                    "description": "Use this to override the default service endpoint URL",
                    "optional": true
                  },
                  "cloudwatchevents": {
                    "type": "string",
                    "description": "Use this to override the default service endpoint URL",
                    "optional": true
                  },
                  "cloudwatchlogs": {
                    "type": "string",
                    "description": "Use this to override the default service endpoint URL",
                    "optional": true
                  },
                  "codebuild": {
                    "type": "string",
                    "description": "Use this to override the default service endpoint URL",
                    "optional": true
                  },
                  "codecommit": {
                    "type": "string",
                    "description": "Use this to override the default service endpoint URL",
                    "optional": true
                  },
                  "codedeploy": {
                    "type": "string",
                    "description": "Use this to override the default service endpoint URL",
                    "optional": true
                  },
                  "codepipeline": {
                    "type": "string",
                    "description": "Use this to override the default service endpoint URL",
                    "optional": true
                  },
                  "cognitoidentity": {
                    "type": "string",
                    "description": "Use this to override the default service endpoint URL",
                    "optional": true
                  },
                  "cognitoidp": {
                    "type": "string",
                    "description": "Use this to override the default service endpoint URL",
                    "optional": true
                  },
                  "configservice": {
                    "type": "string",
                    "description": "Use this to override the default service endpoint URL",
                    "optional": true
                  },
                  "cur": {
                    "type": "string",
                    "description": "Use this to override the default service endpoint URL",
                    "optional": true
                  },
                  "dataexchange": {
                    "type": "string",
                    "description": "Use this to override the default service endpoint URL",
                    "optional": true
                  },
                  "datapipeline": {
                    "type": "string",
                    "description": "Use this to override the default service endpoint URL",
                    "optional": true
                  },
                  "datasync": {
                    "type": "string",
                    "description": "Use this to override the default service endpoint URL",
                    "optional": true
                  },
                  "dax": {
                    "type": "string",
                    "description": "Use this to override the default service endpoint URL",
                    "optional": true
                  },
                  "devicefarm": {
                    "type": "string",
                    "description": "Use this to override the default service endpoint URL",
                    "optional": true
                  },
                  "directconnect": {
                    "type": "string",
                    "description": "Use this to override the default service endpoint URL",
                    "optional": true
                  },
                  "dlm": {
                    "type": "string",
                    "description": "Use this to override the default service endpoint URL",
                    "optional": true
                  },
                  "dms": {
                    "type": "string",
                    "description": "Use this to override the default service endpoint URL",
                    "optional": true
                  },
                  "docdb": {
                    "type": "string",
                    "description": "Use this to override the default service endpoint URL",
                    "optional": true
                  },
                  "ds": {
                    "type": "string",
                    "description": "Use this to override the default service endpoint URL",
                    "optional": true
                  },
                  "dynamodb": {
                    "type": "string",
                    "description": "Use this to override the default service endpoint URL",
                    "optional": true
                  },
                  "ec2": {
                    "type": "string",
                    "description": "Use this to override the default service endpoint URL",
                    "optional": true
                  },
                  "ecr": {
                    "type": "string",
                    "description": "Use this to override the default service endpoint URL",
                    "optional": true
                  },
                  "ecs": {
                    "type": "string",
                    "description": "Use this to override the default service endpoint URL",
                    "optional": true
                  },
                  "efs": {
                    "type": "string",
                    "description": "Use this to override the default service endpoint URL",
                    "optional": true
                  },
                  "eks": {
                    "type": "string",
                    "description": "Use this to override the default service endpoint URL",
                    "optional": true
                  },
                  "elasticache": {
                    "type": "string",
                    "description": "Use this to override the default service endpoint URL",
                    "optional": true
                  },
                  "elasticbeanstalk": {
                    "type": "string",
                    "description": "Use this to override the default service endpoint URL",
                    "optional": true
                  },
                  "elastictranscoder": {
                    "type": "string",
                    "description": "Use this to override the default service endpoint URL",
                    "optional": true
                  },
                  "elb": {
                    "type": "string",
                    "description": "Use this to override the default service endpoint URL",
                    "optional": true
                  },
                  "emr": {
                    "type": "string",
                    "description": "Use this to override the default service endpoint URL",
                    "optional": true
                  },
                  "es": {
                    "type": "string",
                    "description": "Use this to override the default service endpoint URL",
                    "optional": true
                  },
                  "firehose": {
                    "type": "string",
                    "description": "Use this to override the default service endpoint URL",
                    "optional": true
                  },
                  "fms": {
                    "type": "string",
                    "description": "Use this to override the default service endpoint URL",
                    "optional": true
                  },
                  "forecast": {
                    "type": "string",
                    "description": "Use this to override the default service endpoint URL",
                    "optional": true
                  },
                  "fsx": {
                    "type": "string",
                    "description": "Use this to override the default service endpoint URL",
                    "optional": true
                  },
                  "gamelift": {
                    "type": "string",
                    "description": "Use this to override the default service endpoint URL",
                    "optional": true
                  },
                  "glacier": {
                    "type": "string",
                    "description": "Use this to override the default service endpoint URL",
                    "optional": true
                  },
                  "globalaccelerator": {
                    "type": "string",
                    "description": "Use this to override the default service endpoint URL",
                    "optional": true
                  },
                  "glue": {
                    "type": "string",
                    "description": "Use this to override the default service endpoint URL",
                    "optional": true
                  },
                  "greengrass": {
                    "type": "string",
                    "description": "Use this to override the default service endpoint URL",
                    "optional": true
                  },
                  "guardduty": {
                    "type": "string",
                    "description": "Use this to override the default service endpoint URL",
                    "optional": true
                  },
                  "iam": {
                    "type": "string",
                    "description": "Use this to override the default service endpoint URL",
                    "optional": true
                  },
                  "imagebuilder": {
                    "type": "string",
                    "description": "Use this to override the default service endpoint URL",
                    "optional": true
                  },
                  "inspector": {
                    "type": "string",
                    "description": "Use this to override the default service endpoint URL",
                    "optional": true
                  },
                  "iot": {
                    "type": "string",
                    "description": "Use this to override the default service endpoint URL",
                    "optional": true
                  },
                  "iotanalytics": {
                    "type": "string",
                    "description": "Use this to override the default service endpoint URL",
                    "optional": true
                  },
                  "iotevents": {
                    "type": "string",
                    "description": "Use this to override the default service endpoint URL",
                    "optional": true
                  },
                  "kafka": {
                    "type": "string",
                    "description": "Use this to override the default service endpoint URL",
                    "optional": true
                  },
                  "kinesis": {
                    "type": "string",
                    "description": "Use this to override the default service endpoint URL",
                    "optional": true
                  },
                  "kinesis_analytics": {
                    "type": "string",
                    "description": "Use this to override the default service endpoint URL",
                    "optional": true
                  },
                  "kinesisanalytics": {
                    "type": "string",
                    "description": "Use this to override the default service endpoint URL",
                    "optional": true
                  },
                  "kinesisvideo": {
                    "type": "string",
                    "description": "Use this to override the default service endpoint URL",
                    "optional": true
                  },
                  "kms": {
                    "type": "string",
                    "description": "Use this to override the default service endpoint URL",
                    "optional": true
                  },
                  "lakeformation": {
                    "type": "string",
                    "description": "Use this to override the default service endpoint URL",
                    "optional": true
                  },
                  "lambda": {
                    "type": "string",
                    "description": "Use this to override the default service endpoint URL",
                    "optional": true
                  },
                  "lexmodels": {
                    "type": "string",
                    "description": "Use this to override the default service endpoint URL",
                    "optional": true
                  },
                  "licensemanager": {
                    "type": "string",
                    "description": "Use this to override the default service endpoint URL",
                    "optional": true
                  },
                  "lightsail": {
                    "type": "string",
                    "description": "Use this to override the default service endpoint URL",
                    "optional": true
                  },
                  "macie": {
                    "type": "string",
                    "description": "Use this to override the default service endpoint URL",
                    "optional": true
                  },
                  "managedblockchain": {
                    "type": "string",
                    "description": "Use this to override the default service endpoint URL",
                    "optional": true
                  },
                  "marketplacecatalog": {
                    "type": "string",
                    "description": "Use this to override the default service endpoint URL",
                    "optional": true
                  },
                  "mediaconnect": {
                    "type": "string",
                    "description": "Use this to override the default service endpoint URL",
                    "optional": true
                  },
                  "mediaconvert": {
                    "type": "string",
                    "description": "Use this to override the default service endpoint URL",
                    "optional": true
                  },
                  "medialive": {
                    "type": "string",
                    "description": "Use this to override the default service endpoint URL",
                    "optional": true
                  },
                  "mediapackage": {
                    "type": "string",
                    "description": "Use this to override the default service endpoint URL",
                    "optional": true
                  },
                  "mediastore": {
                    "type": "string",
                    "description": "Use this to override the default service endpoint URL",
                    "optional": true
                  },
                  "mediastoredata": {
                    "type": "string",
                    "description": "Use this to override the default service endpoint URL",
                    "optional": true
                  },
                  "mq": {
                    "type": "string",
                    "description": "Use this to override the default service endpoint URL",
                    "optional": true
                  },
                  "neptune": {
                    "type": "string",
                    "description": "Use this to override the default service endpoint URL",
                    "optional": true
                  },
                  "opsworks": {
                    "type": "string",
                    "description": "Use this to override the default service endpoint URL",
                    "optional": true
                  },
                  "organizations": {
                    "type": "string",
                    "description": "Use this to override the default service endpoint URL",
                    "optional": true
                  },
                  "personalize": {
                    "type": "string",
                    "description": "Use this to override the default service endpoint URL",
                    "optional": true
                  },
                  "pinpoint": {
                    "type": "string",
                    "description": "Use this to override the default service endpoint URL",
                    "optional": true
                  },
                  "pricing": {
                    "type": "string",
                    "description": "Use this to override the default service endpoint URL",
                    "optional": true
                  },
                  "qldb": {
                    "type": "string",
                    "description": "Use this to override the default service endpoint URL",
                    "optional": true
                  },
                  "quicksight": {
                    "type": "string",
                    "description": "Use this to override the default service endpoint URL",
                    "optional": true
                  },
                  "r53": {
                    "type": "string",
                    "description": "Use this to override the default service endpoint URL",
                    "optional": true
                  },
                  "ram": {
                    "type": "string",
                    "description": "Use this to override the default service endpoint URL",
                    "optional": true
                  },
                  "rds": {
                    "type": "string",
                    "description": "Use this to override the default service endpoint URL",
                    "optional": true
                  },
                  "redshift": {
                    "type": "string",
                    "description": "Use this to override the default service endpoint URL",
                    "optional": true
                  },
                  "resourcegroups": {
                    "type": "string",
                    "description": "Use this to override the default service endpoint URL",
                    "optional": true
                  },
                  "route53": {
                    "type": "string",
                    "description": "Use this to override the default service endpoint URL",
                    "optional": true
                  },
                  "route53resolver": {
                    "type": "string",
                    "description": "Use this to override the default service endpoint URL",
                    "optional": true
                  },
                  "s3": {
                    "type": "string",
                    "description": "Use this to override the default service endpoint URL",
                    "optional": true
                  },
                  "s3control": {
                    "type": "string",
                    "description": "Use this to override the default service endpoint URL",
                    "optional": true
                  },
                  "sagemaker": {
                    "type": "string",
                    "description": "Use this to override the default service endpoint URL",
                    "optional": true
                  },
                  "sdb": {
                    "type": "string",
                    "description": "Use this to override the default service endpoint URL",
                    "optional": true
                  },
                  "secretsmanager": {
                    "type": "string",
                    "description": "Use this to override the default service endpoint URL",
                    "optional": true
                  },
                  "securityhub": {
                    "type": "string",
                    "description": "Use this to override the default service endpoint URL",
                    "optional": true
                  },
                  "serverlessrepo": {
                    "type": "string",
                    "description": "Use this to override the default service endpoint URL",
                    "optional": true
                  },
                  "servicecatalog": {
                    "type": "string",
                    "description": "Use this to override the default service endpoint URL",
                    "optional": true
                  },
                  "servicediscovery": {
                    "type": "string",
                    "description": "Use this to override the default service endpoint URL",
                    "optional": true
                  },
                  "servicequotas": {
                    "type": "string",
                    "description": "Use this to override the default service endpoint URL",
                    "optional": true
                  },
                  "ses": {
                    "type": "string",
                    "description": "Use this to override the default service endpoint URL",
                    "optional": true
                  },
                  "shield": {
                    "type": "string",
                    "description": "Use this to override the default service endpoint URL",
                    "optional": true
                  },
                  "sns": {
                    "type": "string",
                    "description": "Use this to override the default service endpoint URL",
                    "optional": true
                  },
                  "sqs": {
                    "type": "string",
                    "description": "Use this to override the default service endpoint URL",
                    "optional": true
                  },
                  "ssm": {
                    "type": "string",
                    "description": "Use this to override the default service endpoint URL",
                    "optional": true
                  },
                  "stepfunctions": {
                    "type": "string",
                    "description": "Use this to override the default service endpoint URL",
                    "optional": true
                  },
                  "storagegateway": {
                    "type": "string",
                    "description": "Use this to override the default service endpoint URL",
                    "optional": true
                  },
                  "sts": {
                    "type": "string",
                    "description": "Use this to override the default service endpoint URL",
                    "optional": true
                  },
                  "swf": {
                    "type": "string",
                    "description": "Use this to override the default service endpoint URL",
                    "optional": true
                  },
                  "transfer": {
                    "type": "string",
                    "description": "Use this to override the default service endpoint URL",
                    "optional": true
                  },
                  "waf": {
                    "type": "string",
                    "description": "Use this to override the default service endpoint URL",
                    "optional": true
                  },
                  "wafregional": {
                    "type": "string",
                    "description": "Use this to override the default service endpoint URL",
                    "optional": true
                  },
                  "wafv2": {
                    "type": "string",
                    "description": "Use this to override the default service endpoint URL",
                    "optional": true
                  },
                  "worklink": {
                    "type": "string",
                    "description": "Use this to override the default service endpoint URL",
                    "optional": true
                  },
                  "workmail": {
                    "type": "string",
                    "description": "Use this to override the default service endpoint URL",
                    "optional": true
                  },
                  "workspaces": {
                    "type": "string",
                    "description": "Use this to override the default service endpoint URL",
                    "optional": true
                  },
                  "xray": {
                    "type": "string",
                    "description": "Use this to override the default service endpoint URL",
                    "optional": true
                  }
                }
              }
            }
          }
        }
      },
      "resource_schemas": {
        "aws_accessanalyzer_analyzer": {
          "version": 0,
          "block": {
            "attributes": {
              "analyzer_name": {
                "type": "string",
                "required": true
              },
              "arn": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              },
              "type": {
                "type": "string",
                "optional": true
              }
            }
          }
        },
        "aws_acm_certificate": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "certificate_authority_arn": {
                "type": "string",
                "optional": true
              },
              "certificate_body": {
                "type": "string",
                "optional": true
              },
              "certificate_chain": {
                "type": "string",
                "optional": true
              },
              "domain_name": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "domain_validation_options": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "domain_name": "string",
                      "resource_record_name": "string",
                      "resource_record_type": "string",
                      "resource_record_value": "string"
                    }
                  ]
                ],
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "private_key": {
                "type": "string",
                "optional": true,
                "sensitive": true
              },
              "subject_alternative_names": {
                "type": [
                  "list",
                  "string"
                ],
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              },
              "validation_emails": {
                "type": [
                  "list",
                  "string"
                ],
                "computed": true
              },
              "validation_method": {
                "type": "string",
                "optional": true,
                "computed": true
              }
            },
            "block_types": {
              "options": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "certificate_transparency_logging_preference": {
                      "type": "string",
                      "optional": true
                    }
                  }
                },
                "max_items": 1
              }
            }
          }
        },
        "aws_acm_certificate_validation": {
          "version": 0,
          "block": {
            "attributes": {
              "certificate_arn": {
                "type": "string",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "validation_record_fqdns": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true
              }
            },
            "block_types": {
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_acmpca_certificate_authority": {
          "version": 1,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "certificate": {
                "type": "string",
                "computed": true
              },
              "certificate_chain": {
                "type": "string",
                "computed": true
              },
              "certificate_signing_request": {
                "type": "string",
                "computed": true
              },
              "enabled": {
                "type": "bool",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "not_after": {
                "type": "string",
                "computed": true
              },
              "not_before": {
                "type": "string",
                "computed": true
              },
              "permanent_deletion_time_in_days": {
                "type": "number",
                "optional": true
              },
              "serial": {
                "type": "string",
                "computed": true
              },
              "status": {
                "type": "string",
                "computed": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              },
              "type": {
                "type": "string",
                "optional": true
              }
            },
            "block_types": {
              "certificate_authority_configuration": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "key_algorithm": {
                      "type": "string",
                      "required": true
                    },
                    "signing_algorithm": {
                      "type": "string",
                      "required": true
                    }
                  },
                  "block_types": {
                    "subject": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "common_name": {
                            "type": "string",
                            "optional": true
                          },
                          "country": {
                            "type": "string",
                            "optional": true
                          },
                          "distinguished_name_qualifier": {
                            "type": "string",
                            "optional": true
                          },
                          "generation_qualifier": {
                            "type": "string",
                            "optional": true
                          },
                          "given_name": {
                            "type": "string",
                            "optional": true
                          },
                          "initials": {
                            "type": "string",
                            "optional": true
                          },
                          "locality": {
                            "type": "string",
                            "optional": true
                          },
                          "organization": {
                            "type": "string",
                            "optional": true
                          },
                          "organizational_unit": {
                            "type": "string",
                            "optional": true
                          },
                          "pseudonym": {
                            "type": "string",
                            "optional": true
                          },
                          "state": {
                            "type": "string",
                            "optional": true
                          },
                          "surname": {
                            "type": "string",
                            "optional": true
                          },
                          "title": {
                            "type": "string",
                            "optional": true
                          }
                        }
                      },
                      "min_items": 1,
                      "max_items": 1
                    }
                  }
                },
                "min_items": 1,
                "max_items": 1
              },
              "revocation_configuration": {
                "nesting_mode": "list",
                "block": {
                  "block_types": {
                    "crl_configuration": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "custom_cname": {
                            "type": "string",
                            "optional": true
                          },
                          "enabled": {
                            "type": "bool",
                            "optional": true
                          },
                          "expiration_in_days": {
                            "type": "number",
                            "required": true
                          },
                          "s3_bucket_name": {
                            "type": "string",
                            "optional": true
                          }
                        }
                      },
                      "max_items": 1
                    }
                  }
                },
                "max_items": 1
              },
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_alb": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "arn_suffix": {
                "type": "string",
                "computed": true
              },
              "dns_name": {
                "type": "string",
                "computed": true
              },
              "enable_cross_zone_load_balancing": {
                "type": "bool",
                "optional": true
              },
              "enable_deletion_protection": {
                "type": "bool",
                "optional": true
              },
              "enable_http2": {
                "type": "bool",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "idle_timeout": {
                "type": "number",
                "optional": true
              },
              "internal": {
                "type": "bool",
                "optional": true,
                "computed": true
              },
              "ip_address_type": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "load_balancer_type": {
                "type": "string",
                "optional": true
              },
              "name": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name_prefix": {
                "type": "string",
                "optional": true
              },
              "security_groups": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true,
                "computed": true
              },
              "subnets": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              },
              "vpc_id": {
                "type": "string",
                "computed": true
              },
              "zone_id": {
                "type": "string",
                "computed": true
              }
            },
            "block_types": {
              "access_logs": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "bucket": {
                      "type": "string",
                      "required": true
                    },
                    "enabled": {
                      "type": "bool",
                      "optional": true
                    },
                    "prefix": {
                      "type": "string",
                      "optional": true
                    }
                  }
                },
                "max_items": 1
              },
              "subnet_mapping": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "allocation_id": {
                      "type": "string",
                      "optional": true
                    },
                    "subnet_id": {
                      "type": "string",
                      "required": true
                    }
                  }
                }
              },
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_alb_listener": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "certificate_arn": {
                "type": "string",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "load_balancer_arn": {
                "type": "string",
                "required": true
              },
              "port": {
                "type": "number",
                "required": true
              },
              "protocol": {
                "type": "string",
                "optional": true
              },
              "ssl_policy": {
                "type": "string",
                "optional": true,
                "computed": true
              }
            },
            "block_types": {
              "default_action": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "order": {
                      "type": "number",
                      "optional": true,
                      "computed": true
                    },
                    "target_group_arn": {
                      "type": "string",
                      "optional": true
                    },
                    "type": {
                      "type": "string",
                      "required": true
                    }
                  },
                  "block_types": {
                    "authenticate_cognito": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "authentication_request_extra_params": {
                            "type": [
                              "map",
                              "string"
                            ],
                            "optional": true
                          },
                          "on_unauthenticated_request": {
                            "type": "string",
                            "optional": true,
                            "computed": true
                          },
                          "scope": {
                            "type": "string",
                            "optional": true,
                            "computed": true
                          },
                          "session_cookie_name": {
                            "type": "string",
                            "optional": true,
                            "computed": true
                          },
                          "session_timeout": {
                            "type": "number",
                            "optional": true,
                            "computed": true
                          },
                          "user_pool_arn": {
                            "type": "string",
                            "required": true
                          },
                          "user_pool_client_id": {
                            "type": "string",
                            "required": true
                          },
                          "user_pool_domain": {
                            "type": "string",
                            "required": true
                          }
                        }
                      },
                      "max_items": 1
                    },
                    "authenticate_oidc": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "authentication_request_extra_params": {
                            "type": [
                              "map",
                              "string"
                            ],
                            "optional": true
                          },
                          "authorization_endpoint": {
                            "type": "string",
                            "required": true
                          },
                          "client_id": {
                            "type": "string",
                            "required": true
                          },
                          "client_secret": {
                            "type": "string",
                            "required": true,
                            "sensitive": true
                          },
                          "issuer": {
                            "type": "string",
                            "required": true
                          },
                          "on_unauthenticated_request": {
                            "type": "string",
                            "optional": true,
                            "computed": true
                          },
                          "scope": {
                            "type": "string",
                            "optional": true,
                            "computed": true
                          },
                          "session_cookie_name": {
                            "type": "string",
                            "optional": true,
                            "computed": true
                          },
                          "session_timeout": {
                            "type": "number",
                            "optional": true,
                            "computed": true
                          },
                          "token_endpoint": {
                            "type": "string",
                            "required": true
                          },
                          "user_info_endpoint": {
                            "type": "string",
                            "required": true
                          }
                        }
                      },
                      "max_items": 1
                    },
                    "fixed_response": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "content_type": {
                            "type": "string",
                            "required": true
                          },
                          "message_body": {
                            "type": "string",
                            "optional": true
                          },
                          "status_code": {
                            "type": "string",
                            "optional": true,
                            "computed": true
                          }
                        }
                      },
                      "max_items": 1
                    },
                    "redirect": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "host": {
                            "type": "string",
                            "optional": true
                          },
                          "path": {
                            "type": "string",
                            "optional": true
                          },
                          "port": {
                            "type": "string",
                            "optional": true
                          },
                          "protocol": {
                            "type": "string",
                            "optional": true
                          },
                          "query": {
                            "type": "string",
                            "optional": true
                          },
                          "status_code": {
                            "type": "string",
                            "required": true
                          }
                        }
                      },
                      "max_items": 1
                    }
                  }
                },
                "min_items": 1
              },
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "read": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_alb_listener_certificate": {
          "version": 0,
          "block": {
            "attributes": {
              "certificate_arn": {
                "type": "string",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "listener_arn": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "aws_alb_listener_rule": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "listener_arn": {
                "type": "string",
                "required": true
              },
              "priority": {
                "type": "number",
                "optional": true,
                "computed": true
              }
            },
            "block_types": {
              "action": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "order": {
                      "type": "number",
                      "optional": true,
                      "computed": true
                    },
                    "target_group_arn": {
                      "type": "string",
                      "optional": true
                    },
                    "type": {
                      "type": "string",
                      "required": true
                    }
                  },
                  "block_types": {
                    "authenticate_cognito": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "authentication_request_extra_params": {
                            "type": [
                              "map",
                              "string"
                            ],
                            "optional": true
                          },
                          "on_unauthenticated_request": {
                            "type": "string",
                            "optional": true,
                            "computed": true
                          },
                          "scope": {
                            "type": "string",
                            "optional": true,
                            "computed": true
                          },
                          "session_cookie_name": {
                            "type": "string",
                            "optional": true,
                            "computed": true
                          },
                          "session_timeout": {
                            "type": "number",
                            "optional": true,
                            "computed": true
                          },
                          "user_pool_arn": {
                            "type": "string",
                            "required": true
                          },
                          "user_pool_client_id": {
                            "type": "string",
                            "required": true
                          },
                          "user_pool_domain": {
                            "type": "string",
                            "required": true
                          }
                        }
                      },
                      "max_items": 1
                    },
                    "authenticate_oidc": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "authentication_request_extra_params": {
                            "type": [
                              "map",
                              "string"
                            ],
                            "optional": true
                          },
                          "authorization_endpoint": {
                            "type": "string",
                            "required": true
                          },
                          "client_id": {
                            "type": "string",
                            "required": true
                          },
                          "client_secret": {
                            "type": "string",
                            "required": true,
                            "sensitive": true
                          },
                          "issuer": {
                            "type": "string",
                            "required": true
                          },
                          "on_unauthenticated_request": {
                            "type": "string",
                            "optional": true,
                            "computed": true
                          },
                          "scope": {
                            "type": "string",
                            "optional": true,
                            "computed": true
                          },
                          "session_cookie_name": {
                            "type": "string",
                            "optional": true,
                            "computed": true
                          },
                          "session_timeout": {
                            "type": "number",
                            "optional": true,
                            "computed": true
                          },
                          "token_endpoint": {
                            "type": "string",
                            "required": true
                          },
                          "user_info_endpoint": {
                            "type": "string",
                            "required": true
                          }
                        }
                      },
                      "max_items": 1
                    },
                    "fixed_response": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "content_type": {
                            "type": "string",
                            "required": true
                          },
                          "message_body": {
                            "type": "string",
                            "optional": true
                          },
                          "status_code": {
                            "type": "string",
                            "optional": true,
                            "computed": true
                          }
                        }
                      },
                      "max_items": 1
                    },
                    "redirect": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "host": {
                            "type": "string",
                            "optional": true
                          },
                          "path": {
                            "type": "string",
                            "optional": true
                          },
                          "port": {
                            "type": "string",
                            "optional": true
                          },
                          "protocol": {
                            "type": "string",
                            "optional": true
                          },
                          "query": {
                            "type": "string",
                            "optional": true
                          },
                          "status_code": {
                            "type": "string",
                            "required": true
                          }
                        }
                      },
                      "max_items": 1
                    }
                  }
                },
                "min_items": 1
              },
              "condition": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "field": {
                      "type": "string",
                      "optional": true,
                      "computed": true
                    },
                    "values": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "optional": true,
                      "computed": true
                    }
                  },
                  "block_types": {
                    "host_header": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "values": {
                            "type": [
                              "set",
                              "string"
                            ],
                            "optional": true,
                            "computed": true
                          }
                        }
                      },
                      "max_items": 1
                    },
                    "http_header": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "http_header_name": {
                            "type": "string",
                            "required": true
                          },
                          "values": {
                            "type": [
                              "set",
                              "string"
                            ],
                            "required": true
                          }
                        }
                      },
                      "max_items": 1
                    },
                    "http_request_method": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "values": {
                            "type": [
                              "set",
                              "string"
                            ],
                            "required": true
                          }
                        }
                      },
                      "max_items": 1
                    },
                    "path_pattern": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "values": {
                            "type": [
                              "set",
                              "string"
                            ],
                            "optional": true,
                            "computed": true
                          }
                        }
                      },
                      "max_items": 1
                    },
                    "query_string": {
                      "nesting_mode": "set",
                      "block": {
                        "attributes": {
                          "key": {
                            "type": "string",
                            "optional": true
                          },
                          "value": {
                            "type": "string",
                            "required": true
                          }
                        }
                      }
                    },
                    "source_ip": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "values": {
                            "type": [
                              "set",
                              "string"
                            ],
                            "required": true
                          }
                        }
                      },
                      "max_items": 1
                    }
                  }
                },
                "min_items": 1
              }
            }
          }
        },
        "aws_alb_target_group": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "arn_suffix": {
                "type": "string",
                "computed": true
              },
              "deregistration_delay": {
                "type": "number",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "lambda_multi_value_headers_enabled": {
                "type": "bool",
                "optional": true
              },
              "load_balancing_algorithm_type": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name_prefix": {
                "type": "string",
                "optional": true
              },
              "port": {
                "type": "number",
                "optional": true
              },
              "protocol": {
                "type": "string",
                "optional": true
              },
              "proxy_protocol_v2": {
                "type": "bool",
                "optional": true
              },
              "slow_start": {
                "type": "number",
                "optional": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              },
              "target_type": {
                "type": "string",
                "optional": true
              },
              "vpc_id": {
                "type": "string",
                "optional": true
              }
            },
            "block_types": {
              "health_check": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "enabled": {
                      "type": "bool",
                      "optional": true
                    },
                    "healthy_threshold": {
                      "type": "number",
                      "optional": true
                    },
                    "interval": {
                      "type": "number",
                      "optional": true
                    },
                    "matcher": {
                      "type": "string",
                      "optional": true,
                      "computed": true
                    },
                    "path": {
                      "type": "string",
                      "optional": true,
                      "computed": true
                    },
                    "port": {
                      "type": "string",
                      "optional": true
                    },
                    "protocol": {
                      "type": "string",
                      "optional": true
                    },
                    "timeout": {
                      "type": "number",
                      "optional": true,
                      "computed": true
                    },
                    "unhealthy_threshold": {
                      "type": "number",
                      "optional": true
                    }
                  }
                },
                "max_items": 1
              },
              "stickiness": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "cookie_duration": {
                      "type": "number",
                      "optional": true
                    },
                    "enabled": {
                      "type": "bool",
                      "optional": true
                    },
                    "type": {
                      "type": "string",
                      "required": true
                    }
                  }
                },
                "max_items": 1
              }
            }
          }
        },
        "aws_alb_target_group_attachment": {
          "version": 0,
          "block": {
            "attributes": {
              "availability_zone": {
                "type": "string",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "port": {
                "type": "number",
                "optional": true
              },
              "target_group_arn": {
                "type": "string",
                "required": true
              },
              "target_id": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "aws_ami": {
          "version": 0,
          "block": {
            "attributes": {
              "architecture": {
                "type": "string",
                "optional": true
              },
              "description": {
                "type": "string",
                "optional": true
              },
              "ena_support": {
                "type": "bool",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "image_location": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "kernel_id": {
                "type": "string",
                "optional": true
              },
              "manage_ebs_snapshots": {
                "type": "bool",
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "ramdisk_id": {
                "type": "string",
                "optional": true
              },
              "root_device_name": {
                "type": "string",
                "optional": true
              },
              "root_snapshot_id": {
                "type": "string",
                "computed": true
              },
              "sriov_net_support": {
                "type": "string",
                "optional": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              },
              "virtualization_type": {
                "type": "string",
                "optional": true
              }
            },
            "block_types": {
              "ebs_block_device": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "delete_on_termination": {
                      "type": "bool",
                      "optional": true
                    },
                    "device_name": {
                      "type": "string",
                      "required": true
                    },
                    "encrypted": {
                      "type": "bool",
                      "optional": true
                    },
                    "iops": {
                      "type": "number",
                      "optional": true
                    },
                    "snapshot_id": {
                      "type": "string",
                      "optional": true
                    },
                    "volume_size": {
                      "type": "number",
                      "optional": true,
                      "computed": true
                    },
                    "volume_type": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              },
              "ephemeral_block_device": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "device_name": {
                      "type": "string",
                      "required": true
                    },
                    "virtual_name": {
                      "type": "string",
                      "required": true
                    }
                  }
                }
              },
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_ami_copy": {
          "version": 0,
          "block": {
            "attributes": {
              "architecture": {
                "type": "string",
                "computed": true
              },
              "description": {
                "type": "string",
                "optional": true
              },
              "ena_support": {
                "type": "bool",
                "computed": true
              },
              "encrypted": {
                "type": "bool",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "image_location": {
                "type": "string",
                "computed": true
              },
              "kernel_id": {
                "type": "string",
                "computed": true
              },
              "kms_key_id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "manage_ebs_snapshots": {
                "type": "bool",
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "ramdisk_id": {
                "type": "string",
                "computed": true
              },
              "root_device_name": {
                "type": "string",
                "computed": true
              },
              "root_snapshot_id": {
                "type": "string",
                "computed": true
              },
              "source_ami_id": {
                "type": "string",
                "required": true
              },
              "source_ami_region": {
                "type": "string",
                "required": true
              },
              "sriov_net_support": {
                "type": "string",
                "computed": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              },
              "virtualization_type": {
                "type": "string",
                "computed": true
              }
            },
            "block_types": {
              "ebs_block_device": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "delete_on_termination": {
                      "type": "bool",
                      "computed": true
                    },
                    "device_name": {
                      "type": "string",
                      "computed": true
                    },
                    "encrypted": {
                      "type": "bool",
                      "computed": true
                    },
                    "iops": {
                      "type": "number",
                      "computed": true
                    },
                    "snapshot_id": {
                      "type": "string",
                      "computed": true
                    },
                    "volume_size": {
                      "type": "number",
                      "computed": true
                    },
                    "volume_type": {
                      "type": "string",
                      "computed": true
                    }
                  }
                }
              },
              "ephemeral_block_device": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "device_name": {
                      "type": "string",
                      "computed": true
                    },
                    "virtual_name": {
                      "type": "string",
                      "computed": true
                    }
                  }
                }
              },
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_ami_from_instance": {
          "version": 0,
          "block": {
            "attributes": {
              "architecture": {
                "type": "string",
                "computed": true
              },
              "description": {
                "type": "string",
                "optional": true
              },
              "ena_support": {
                "type": "bool",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "image_location": {
                "type": "string",
                "computed": true
              },
              "kernel_id": {
                "type": "string",
                "computed": true
              },
              "manage_ebs_snapshots": {
                "type": "bool",
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "ramdisk_id": {
                "type": "string",
                "computed": true
              },
              "root_device_name": {
                "type": "string",
                "computed": true
              },
              "root_snapshot_id": {
                "type": "string",
                "computed": true
              },
              "snapshot_without_reboot": {
                "type": "bool",
                "optional": true
              },
              "source_instance_id": {
                "type": "string",
                "required": true
              },
              "sriov_net_support": {
                "type": "string",
                "computed": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              },
              "virtualization_type": {
                "type": "string",
                "computed": true
              }
            },
            "block_types": {
              "ebs_block_device": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "delete_on_termination": {
                      "type": "bool",
                      "computed": true
                    },
                    "device_name": {
                      "type": "string",
                      "computed": true
                    },
                    "encrypted": {
                      "type": "bool",
                      "computed": true
                    },
                    "iops": {
                      "type": "number",
                      "computed": true
                    },
                    "snapshot_id": {
                      "type": "string",
                      "computed": true
                    },
                    "volume_size": {
                      "type": "number",
                      "computed": true
                    },
                    "volume_type": {
                      "type": "string",
                      "computed": true
                    }
                  }
                }
              },
              "ephemeral_block_device": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "device_name": {
                      "type": "string",
                      "computed": true
                    },
                    "virtual_name": {
                      "type": "string",
                      "computed": true
                    }
                  }
                }
              },
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_ami_launch_permission": {
          "version": 0,
          "block": {
            "attributes": {
              "account_id": {
                "type": "string",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "image_id": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "aws_api_gateway_account": {
          "version": 0,
          "block": {
            "attributes": {
              "cloudwatch_role_arn": {
                "type": "string",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "throttle_settings": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "burst_limit": "number",
                      "rate_limit": "number"
                    }
                  ]
                ],
                "computed": true
              }
            }
          }
        },
        "aws_api_gateway_api_key": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "created_date": {
                "type": "string",
                "computed": true
              },
              "description": {
                "type": "string",
                "optional": true
              },
              "enabled": {
                "type": "bool",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "last_updated_date": {
                "type": "string",
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              },
              "value": {
                "type": "string",
                "optional": true,
                "computed": true,
                "sensitive": true
              }
            },
            "block_types": {
              "stage_key": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "rest_api_id": {
                      "type": "string",
                      "required": true
                    },
                    "stage_name": {
                      "type": "string",
                      "required": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_api_gateway_authorizer": {
          "version": 0,
          "block": {
            "attributes": {
              "authorizer_credentials": {
                "type": "string",
                "optional": true
              },
              "authorizer_result_ttl_in_seconds": {
                "type": "number",
                "optional": true
              },
              "authorizer_uri": {
                "type": "string",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "identity_source": {
                "type": "string",
                "optional": true
              },
              "identity_validation_expression": {
                "type": "string",
                "optional": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "provider_arns": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true
              },
              "rest_api_id": {
                "type": "string",
                "required": true
              },
              "type": {
                "type": "string",
                "optional": true
              }
            }
          }
        },
        "aws_api_gateway_base_path_mapping": {
          "version": 0,
          "block": {
            "attributes": {
              "api_id": {
                "type": "string",
                "required": true
              },
              "base_path": {
                "type": "string",
                "optional": true
              },
              "domain_name": {
                "type": "string",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "stage_name": {
                "type": "string",
                "optional": true
              }
            }
          }
        },
        "aws_api_gateway_client_certificate": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "created_date": {
                "type": "string",
                "computed": true
              },
              "description": {
                "type": "string",
                "optional": true
              },
              "expiration_date": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "pem_encoded_certificate": {
                "type": "string",
                "computed": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              }
            }
          }
        },
        "aws_api_gateway_deployment": {
          "version": 0,
          "block": {
            "attributes": {
              "created_date": {
                "type": "string",
                "computed": true
              },
              "description": {
                "type": "string",
                "optional": true
              },
              "execution_arn": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "invoke_url": {
                "type": "string",
                "computed": true
              },
              "rest_api_id": {
                "type": "string",
                "required": true
              },
              "stage_description": {
                "type": "string",
                "optional": true
              },
              "stage_name": {
                "type": "string",
                "optional": true
              },
              "variables": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              }
            }
          }
        },
        "aws_api_gateway_documentation_part": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "properties": {
                "type": "string",
                "required": true
              },
              "rest_api_id": {
                "type": "string",
                "required": true
              }
            },
            "block_types": {
              "location": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "method": {
                      "type": "string",
                      "optional": true
                    },
                    "name": {
                      "type": "string",
                      "optional": true
                    },
                    "path": {
                      "type": "string",
                      "optional": true
                    },
                    "status_code": {
                      "type": "string",
                      "optional": true
                    },
                    "type": {
                      "type": "string",
                      "required": true
                    }
                  }
                },
                "min_items": 1,
                "max_items": 1
              }
            }
          }
        },
        "aws_api_gateway_documentation_version": {
          "version": 0,
          "block": {
            "attributes": {
              "description": {
                "type": "string",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "rest_api_id": {
                "type": "string",
                "required": true
              },
              "version": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "aws_api_gateway_domain_name": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "certificate_arn": {
                "type": "string",
                "optional": true
              },
              "certificate_body": {
                "type": "string",
                "optional": true
              },
              "certificate_chain": {
                "type": "string",
                "optional": true
              },
              "certificate_name": {
                "type": "string",
                "optional": true
              },
              "certificate_private_key": {
                "type": "string",
                "optional": true,
                "sensitive": true
              },
              "certificate_upload_date": {
                "type": "string",
                "computed": true
              },
              "cloudfront_domain_name": {
                "type": "string",
                "computed": true
              },
              "cloudfront_zone_id": {
                "type": "string",
                "computed": true
              },
              "domain_name": {
                "type": "string",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "regional_certificate_arn": {
                "type": "string",
                "optional": true
              },
              "regional_certificate_name": {
                "type": "string",
                "optional": true
              },
              "regional_domain_name": {
                "type": "string",
                "computed": true
              },
              "regional_zone_id": {
                "type": "string",
                "computed": true
              },
              "security_policy": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              }
            },
            "block_types": {
              "endpoint_configuration": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "types": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "required": true
                    }
                  }
                },
                "max_items": 1
              }
            }
          }
        },
        "aws_api_gateway_gateway_response": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "response_parameters": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              },
              "response_templates": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              },
              "response_type": {
                "type": "string",
                "required": true
              },
              "rest_api_id": {
                "type": "string",
                "required": true
              },
              "status_code": {
                "type": "string",
                "optional": true
              }
            }
          }
        },
        "aws_api_gateway_integration": {
          "version": 0,
          "block": {
            "attributes": {
              "cache_key_parameters": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true
              },
              "cache_namespace": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "connection_id": {
                "type": "string",
                "optional": true
              },
              "connection_type": {
                "type": "string",
                "optional": true
              },
              "content_handling": {
                "type": "string",
                "optional": true
              },
              "credentials": {
                "type": "string",
                "optional": true
              },
              "http_method": {
                "type": "string",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "integration_http_method": {
                "type": "string",
                "optional": true
              },
              "passthrough_behavior": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "request_parameters": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              },
              "request_parameters_in_json": {
                "type": "string",
                "optional": true
              },
              "request_templates": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              },
              "resource_id": {
                "type": "string",
                "required": true
              },
              "rest_api_id": {
                "type": "string",
                "required": true
              },
              "timeout_milliseconds": {
                "type": "number",
                "optional": true
              },
              "type": {
                "type": "string",
                "required": true
              },
              "uri": {
                "type": "string",
                "optional": true
              }
            }
          }
        },
        "aws_api_gateway_integration_response": {
          "version": 0,
          "block": {
            "attributes": {
              "content_handling": {
                "type": "string",
                "optional": true
              },
              "http_method": {
                "type": "string",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "resource_id": {
                "type": "string",
                "required": true
              },
              "response_parameters": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              },
              "response_parameters_in_json": {
                "type": "string",
                "optional": true
              },
              "response_templates": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              },
              "rest_api_id": {
                "type": "string",
                "required": true
              },
              "selection_pattern": {
                "type": "string",
                "optional": true
              },
              "status_code": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "aws_api_gateway_method": {
          "version": 0,
          "block": {
            "attributes": {
              "api_key_required": {
                "type": "bool",
                "optional": true
              },
              "authorization": {
                "type": "string",
                "required": true
              },
              "authorization_scopes": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true
              },
              "authorizer_id": {
                "type": "string",
                "optional": true
              },
              "http_method": {
                "type": "string",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "request_models": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              },
              "request_parameters": {
                "type": [
                  "map",
                  "bool"
                ],
                "optional": true
              },
              "request_parameters_in_json": {
                "type": "string",
                "optional": true
              },
              "request_validator_id": {
                "type": "string",
                "optional": true
              },
              "resource_id": {
                "type": "string",
                "required": true
              },
              "rest_api_id": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "aws_api_gateway_method_response": {
          "version": 0,
          "block": {
            "attributes": {
              "http_method": {
                "type": "string",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "resource_id": {
                "type": "string",
                "required": true
              },
              "response_models": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              },
              "response_parameters": {
                "type": [
                  "map",
                  "bool"
                ],
                "optional": true
              },
              "response_parameters_in_json": {
                "type": "string",
                "optional": true
              },
              "rest_api_id": {
                "type": "string",
                "required": true
              },
              "status_code": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "aws_api_gateway_method_settings": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "method_path": {
                "type": "string",
                "required": true
              },
              "rest_api_id": {
                "type": "string",
                "required": true
              },
              "stage_name": {
                "type": "string",
                "required": true
              }
            },
            "block_types": {
              "settings": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "cache_data_encrypted": {
                      "type": "bool",
                      "optional": true
                    },
                    "cache_ttl_in_seconds": {
                      "type": "number",
                      "optional": true
                    },
                    "caching_enabled": {
                      "type": "bool",
                      "optional": true
                    },
                    "data_trace_enabled": {
                      "type": "bool",
                      "optional": true
                    },
                    "logging_level": {
                      "type": "string",
                      "optional": true
                    },
                    "metrics_enabled": {
                      "type": "bool",
                      "optional": true
                    },
                    "require_authorization_for_cache_control": {
                      "type": "bool",
                      "optional": true
                    },
                    "throttling_burst_limit": {
                      "type": "number",
                      "optional": true
                    },
                    "throttling_rate_limit": {
                      "type": "number",
                      "optional": true
                    },
                    "unauthorized_cache_control_header_strategy": {
                      "type": "string",
                      "optional": true
                    }
                  }
                },
                "min_items": 1,
                "max_items": 1
              }
            }
          }
        },
        "aws_api_gateway_model": {
          "version": 0,
          "block": {
            "attributes": {
              "content_type": {
                "type": "string",
                "required": true
              },
              "description": {
                "type": "string",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "rest_api_id": {
                "type": "string",
                "required": true
              },
              "schema": {
                "type": "string",
                "optional": true
              }
            }
          }
        },
        "aws_api_gateway_request_validator": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "rest_api_id": {
                "type": "string",
                "required": true
              },
              "validate_request_body": {
                "type": "bool",
                "optional": true
              },
              "validate_request_parameters": {
                "type": "bool",
                "optional": true
              }
            }
          }
        },
        "aws_api_gateway_resource": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "parent_id": {
                "type": "string",
                "required": true
              },
              "path": {
                "type": "string",
                "computed": true
              },
              "path_part": {
                "type": "string",
                "required": true
              },
              "rest_api_id": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "aws_api_gateway_rest_api": {
          "version": 0,
          "block": {
            "attributes": {
              "api_key_source": {
                "type": "string",
                "optional": true
              },
              "arn": {
                "type": "string",
                "computed": true
              },
              "binary_media_types": {
                "type": [
                  "list",
                  "string"
                ],
                "optional": true
              },
              "body": {
                "type": "string",
                "optional": true
              },
              "created_date": {
                "type": "string",
                "computed": true
              },
              "description": {
                "type": "string",
                "optional": true
              },
              "execution_arn": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "minimum_compression_size": {
                "type": "number",
                "optional": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "policy": {
                "type": "string",
                "optional": true
              },
              "root_resource_id": {
                "type": "string",
                "computed": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              }
            },
            "block_types": {
              "endpoint_configuration": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "types": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "required": true
                    },
                    "vpc_endpoint_ids": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "optional": true
                    }
                  }
                },
                "max_items": 1
              }
            }
          }
        },
        "aws_api_gateway_stage": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "cache_cluster_enabled": {
                "type": "bool",
                "optional": true
              },
              "cache_cluster_size": {
                "type": "string",
                "optional": true
              },
              "client_certificate_id": {
                "type": "string",
                "optional": true
              },
              "deployment_id": {
                "type": "string",
                "required": true
              },
              "description": {
                "type": "string",
                "optional": true
              },
              "documentation_version": {
                "type": "string",
                "optional": true
              },
              "execution_arn": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "invoke_url": {
                "type": "string",
                "computed": true
              },
              "rest_api_id": {
                "type": "string",
                "required": true
              },
              "stage_name": {
                "type": "string",
                "required": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              },
              "variables": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              },
              "xray_tracing_enabled": {
                "type": "bool",
                "optional": true
              }
            },
            "block_types": {
              "access_log_settings": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "destination_arn": {
                      "type": "string",
                      "required": true
                    },
                    "format": {
                      "type": "string",
                      "required": true
                    }
                  }
                },
                "max_items": 1
              }
            }
          }
        },
        "aws_api_gateway_usage_plan": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "description": {
                "type": "string",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "product_code": {
                "type": "string",
                "optional": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              }
            },
            "block_types": {
              "api_stages": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "api_id": {
                      "type": "string",
                      "required": true
                    },
                    "stage": {
                      "type": "string",
                      "required": true
                    }
                  }
                }
              },
              "quota_settings": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "limit": {
                      "type": "number",
                      "required": true
                    },
                    "offset": {
                      "type": "number",
                      "optional": true
                    },
                    "period": {
                      "type": "string",
                      "required": true
                    }
                  }
                },
                "max_items": 1
              },
              "throttle_settings": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "burst_limit": {
                      "type": "number",
                      "optional": true
                    },
                    "rate_limit": {
                      "type": "number",
                      "optional": true
                    }
                  }
                },
                "max_items": 1
              }
            }
          }
        },
        "aws_api_gateway_usage_plan_key": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "key_id": {
                "type": "string",
                "required": true
              },
              "key_type": {
                "type": "string",
                "required": true
              },
              "name": {
                "type": "string",
                "computed": true
              },
              "usage_plan_id": {
                "type": "string",
                "required": true
              },
              "value": {
                "type": "string",
                "computed": true
              }
            }
          }
        },
        "aws_api_gateway_vpc_link": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "description": {
                "type": "string",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              },
              "target_arns": {
                "type": [
                  "set",
                  "string"
                ],
                "required": true
              }
            }
          }
        },
        "aws_app_cookie_stickiness_policy": {
          "version": 0,
          "block": {
            "attributes": {
              "cookie_name": {
                "type": "string",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "lb_port": {
                "type": "number",
                "required": true
              },
              "load_balancer": {
                "type": "string",
                "required": true
              },
              "name": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "aws_appautoscaling_policy": {
          "version": 0,
          "block": {
            "attributes": {
              "adjustment_type": {
                "type": "string",
                "optional": true
              },
              "arn": {
                "type": "string",
                "computed": true
              },
              "cooldown": {
                "type": "number",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "metric_aggregation_type": {
                "type": "string",
                "optional": true
              },
              "min_adjustment_magnitude": {
                "type": "number",
                "optional": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "policy_type": {
                "type": "string",
                "optional": true
              },
              "resource_id": {
                "type": "string",
                "required": true
              },
              "scalable_dimension": {
                "type": "string",
                "required": true
              },
              "service_namespace": {
                "type": "string",
                "required": true
              }
            },
            "block_types": {
              "step_adjustment": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "metric_interval_lower_bound": {
                      "type": "string",
                      "optional": true
                    },
                    "metric_interval_upper_bound": {
                      "type": "string",
                      "optional": true
                    },
                    "scaling_adjustment": {
                      "type": "number",
                      "required": true
                    }
                  }
                }
              },
              "step_scaling_policy_configuration": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "adjustment_type": {
                      "type": "string",
                      "optional": true
                    },
                    "cooldown": {
                      "type": "number",
                      "optional": true
                    },
                    "metric_aggregation_type": {
                      "type": "string",
                      "optional": true
                    },
                    "min_adjustment_magnitude": {
                      "type": "number",
                      "optional": true
                    }
                  },
                  "block_types": {
                    "step_adjustment": {
                      "nesting_mode": "set",
                      "block": {
                        "attributes": {
                          "metric_interval_lower_bound": {
                            "type": "string",
                            "optional": true
                          },
                          "metric_interval_upper_bound": {
                            "type": "string",
                            "optional": true
                          },
                          "scaling_adjustment": {
                            "type": "number",
                            "required": true
                          }
                        }
                      }
                    }
                  }
                },
                "max_items": 1
              },
              "target_tracking_scaling_policy_configuration": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "disable_scale_in": {
                      "type": "bool",
                      "optional": true
                    },
                    "scale_in_cooldown": {
                      "type": "number",
                      "optional": true
                    },
                    "scale_out_cooldown": {
                      "type": "number",
                      "optional": true
                    },
                    "target_value": {
                      "type": "number",
                      "required": true
                    }
                  },
                  "block_types": {
                    "customized_metric_specification": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "metric_name": {
                            "type": "string",
                            "required": true
                          },
                          "namespace": {
                            "type": "string",
                            "required": true
                          },
                          "statistic": {
                            "type": "string",
                            "required": true
                          },
                          "unit": {
                            "type": "string",
                            "optional": true
                          }
                        },
                        "block_types": {
                          "dimensions": {
                            "nesting_mode": "set",
                            "block": {
                              "attributes": {
                                "name": {
                                  "type": "string",
                                  "required": true
                                },
                                "value": {
                                  "type": "string",
                                  "required": true
                                }
                              }
                            }
                          }
                        }
                      },
                      "max_items": 1
                    },
                    "predefined_metric_specification": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "predefined_metric_type": {
                            "type": "string",
                            "required": true
                          },
                          "resource_label": {
                            "type": "string",
                            "optional": true
                          }
                        }
                      },
                      "max_items": 1
                    }
                  }
                },
                "max_items": 1
              }
            }
          }
        },
        "aws_appautoscaling_scheduled_action": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "end_time": {
                "type": "string",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "resource_id": {
                "type": "string",
                "required": true
              },
              "scalable_dimension": {
                "type": "string",
                "optional": true
              },
              "schedule": {
                "type": "string",
                "optional": true
              },
              "service_namespace": {
                "type": "string",
                "required": true
              },
              "start_time": {
                "type": "string",
                "optional": true
              }
            },
            "block_types": {
              "scalable_target_action": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "max_capacity": {
                      "type": "number",
                      "optional": true
                    },
                    "min_capacity": {
                      "type": "number",
                      "optional": true
                    }
                  }
                },
                "max_items": 1
              }
            }
          }
        },
        "aws_appautoscaling_target": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "max_capacity": {
                "type": "number",
                "required": true
              },
              "min_capacity": {
                "type": "number",
                "required": true
              },
              "resource_id": {
                "type": "string",
                "required": true
              },
              "role_arn": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "scalable_dimension": {
                "type": "string",
                "required": true
              },
              "service_namespace": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "aws_appmesh_mesh": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "created_date": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "last_updated_date": {
                "type": "string",
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              }
            },
            "block_types": {
              "spec": {
                "nesting_mode": "list",
                "block": {
                  "block_types": {
                    "egress_filter": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "type": {
                            "type": "string",
                            "optional": true
                          }
                        }
                      },
                      "max_items": 1
                    }
                  }
                },
                "max_items": 1
              }
            }
          }
        },
        "aws_appmesh_route": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "created_date": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "last_updated_date": {
                "type": "string",
                "computed": true
              },
              "mesh_name": {
                "type": "string",
                "required": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              },
              "virtual_router_name": {
                "type": "string",
                "required": true
              }
            },
            "block_types": {
              "spec": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "priority": {
                      "type": "number",
                      "optional": true
                    }
                  },
                  "block_types": {
                    "http_route": {
                      "nesting_mode": "list",
                      "block": {
                        "block_types": {
                          "action": {
                            "nesting_mode": "list",
                            "block": {
                              "block_types": {
                                "weighted_target": {
                                  "nesting_mode": "set",
                                  "block": {
                                    "attributes": {
                                      "virtual_node": {
                                        "type": "string",
                                        "required": true
                                      },
                                      "weight": {
                                        "type": "number",
                                        "required": true
                                      }
                                    }
                                  },
                                  "min_items": 1,
                                  "max_items": 10
                                }
                              }
                            },
                            "min_items": 1,
                            "max_items": 1
                          },
                          "match": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "method": {
                                  "type": "string",
                                  "optional": true
                                },
                                "prefix": {
                                  "type": "string",
                                  "required": true
                                },
                                "scheme": {
                                  "type": "string",
                                  "optional": true
                                }
                              },
                              "block_types": {
                                "header": {
                                  "nesting_mode": "set",
                                  "block": {
                                    "attributes": {
                                      "invert": {
                                        "type": "bool",
                                        "optional": true
                                      },
                                      "name": {
                                        "type": "string",
                                        "required": true
                                      }
                                    },
                                    "block_types": {
                                      "match": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "exact": {
                                              "type": "string",
                                              "optional": true
                                            },
                                            "prefix": {
                                              "type": "string",
                                              "optional": true
                                            },
                                            "regex": {
                                              "type": "string",
                                              "optional": true
                                            },
                                            "suffix": {
                                              "type": "string",
                                              "optional": true
                                            }
                                          },
                                          "block_types": {
                                            "range": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "end": {
                                                    "type": "number",
                                                    "required": true
                                                  },
                                                  "start": {
                                                    "type": "number",
                                                    "required": true
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      }
                                    }
                                  },
                                  "max_items": 10
                                }
                              }
                            },
                            "min_items": 1,
                            "max_items": 1
                          }
                        }
                      },
                      "max_items": 1
                    },
                    "tcp_route": {
                      "nesting_mode": "list",
                      "block": {
                        "block_types": {
                          "action": {
                            "nesting_mode": "list",
                            "block": {
                              "block_types": {
                                "weighted_target": {
                                  "nesting_mode": "set",
                                  "block": {
                                    "attributes": {
                                      "virtual_node": {
                                        "type": "string",
                                        "required": true
                                      },
                                      "weight": {
                                        "type": "number",
                                        "required": true
                                      }
                                    }
                                  },
                                  "min_items": 1,
                                  "max_items": 10
                                }
                              }
                            },
                            "min_items": 1,
                            "max_items": 1
                          }
                        }
                      },
                      "max_items": 1
                    }
                  }
                },
                "min_items": 1,
                "max_items": 1
              }
            }
          }
        },
        "aws_appmesh_virtual_node": {
          "version": 1,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "created_date": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "last_updated_date": {
                "type": "string",
                "computed": true
              },
              "mesh_name": {
                "type": "string",
                "required": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              }
            },
            "block_types": {
              "spec": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "backends": {
                      "type": [
                        "set",
                        "string"
                      ],
                      "optional": true,
                      "computed": true
                    }
                  },
                  "block_types": {
                    "backend": {
                      "nesting_mode": "set",
                      "block": {
                        "block_types": {
                          "virtual_service": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "virtual_service_name": {
                                  "type": "string",
                                  "required": true
                                }
                              }
                            },
                            "max_items": 1
                          }
                        }
                      },
                      "max_items": 25
                    },
                    "listener": {
                      "nesting_mode": "set",
                      "block": {
                        "block_types": {
                          "health_check": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "healthy_threshold": {
                                  "type": "number",
                                  "required": true
                                },
                                "interval_millis": {
                                  "type": "number",
                                  "required": true
                                },
                                "path": {
                                  "type": "string",
                                  "optional": true
                                },
                                "port": {
                                  "type": "number",
                                  "optional": true,
                                  "computed": true
                                },
                                "protocol": {
                                  "type": "string",
                                  "required": true
                                },
                                "timeout_millis": {
                                  "type": "number",
                                  "required": true
                                },
                                "unhealthy_threshold": {
                                  "type": "number",
                                  "required": true
                                }
                              }
                            },
                            "max_items": 1
                          },
                          "port_mapping": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "port": {
                                  "type": "number",
                                  "required": true
                                },
                                "protocol": {
                                  "type": "string",
                                  "required": true
                                }
                              }
                            },
                            "min_items": 1,
                            "max_items": 1
                          }
                        }
                      },
                      "max_items": 1
                    },
                    "logging": {
                      "nesting_mode": "list",
                      "block": {
                        "block_types": {
                          "access_log": {
                            "nesting_mode": "list",
                            "block": {
                              "block_types": {
                                "file": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "path": {
                                        "type": "string",
                                        "required": true
                                      }
                                    }
                                  },
                                  "max_items": 1
                                }
                              }
                            },
                            "max_items": 1
                          }
                        }
                      },
                      "max_items": 1
                    },
                    "service_discovery": {
                      "nesting_mode": "list",
                      "block": {
                        "block_types": {
                          "aws_cloud_map": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "attributes": {
                                  "type": [
                                    "map",
                                    "string"
                                  ],
                                  "optional": true
                                },
                                "namespace_name": {
                                  "type": "string",
                                  "required": true
                                },
                                "service_name": {
                                  "type": "string",
                                  "required": true
                                }
                              }
                            },
                            "max_items": 1
                          },
                          "dns": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "hostname": {
                                  "type": "string",
                                  "required": true
                                },
                                "service_name": {
                                  "type": "string",
                                  "optional": true,
                                  "computed": true
                                }
                              }
                            },
                            "max_items": 1
                          }
                        }
                      },
                      "max_items": 1
                    }
                  }
                },
                "min_items": 1,
                "max_items": 1
              }
            }
          }
        },
        "aws_appmesh_virtual_router": {
          "version": 1,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "created_date": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "last_updated_date": {
                "type": "string",
                "computed": true
              },
              "mesh_name": {
                "type": "string",
                "required": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              }
            },
            "block_types": {
              "spec": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "service_names": {
                      "type": [
                        "set",
                        "string"
                      ],
                      "optional": true,
                      "computed": true
                    }
                  },
                  "block_types": {
                    "listener": {
                      "nesting_mode": "set",
                      "block": {
                        "block_types": {
                          "port_mapping": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "port": {
                                  "type": "number",
                                  "required": true
                                },
                                "protocol": {
                                  "type": "string",
                                  "required": true
                                }
                              }
                            },
                            "min_items": 1,
                            "max_items": 1
                          }
                        }
                      },
                      "min_items": 1,
                      "max_items": 1
                    }
                  }
                },
                "min_items": 1,
                "max_items": 1
              }
            }
          }
        },
        "aws_appmesh_virtual_service": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "created_date": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "last_updated_date": {
                "type": "string",
                "computed": true
              },
              "mesh_name": {
                "type": "string",
                "required": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              }
            },
            "block_types": {
              "spec": {
                "nesting_mode": "list",
                "block": {
                  "block_types": {
                    "provider": {
                      "nesting_mode": "list",
                      "block": {
                        "block_types": {
                          "virtual_node": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "virtual_node_name": {
                                  "type": "string",
                                  "required": true
                                }
                              }
                            },
                            "max_items": 1
                          },
                          "virtual_router": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "virtual_router_name": {
                                  "type": "string",
                                  "required": true
                                }
                              }
                            },
                            "max_items": 1
                          }
                        }
                      },
                      "max_items": 1
                    }
                  }
                },
                "min_items": 1,
                "max_items": 1
              }
            }
          }
        },
        "aws_appsync_api_key": {
          "version": 0,
          "block": {
            "attributes": {
              "api_id": {
                "type": "string",
                "required": true
              },
              "description": {
                "type": "string",
                "optional": true
              },
              "expires": {
                "type": "string",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "key": {
                "type": "string",
                "computed": true,
                "sensitive": true
              }
            }
          }
        },
        "aws_appsync_datasource": {
          "version": 0,
          "block": {
            "attributes": {
              "api_id": {
                "type": "string",
                "required": true
              },
              "arn": {
                "type": "string",
                "computed": true
              },
              "description": {
                "type": "string",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "service_role_arn": {
                "type": "string",
                "optional": true
              },
              "type": {
                "type": "string",
                "required": true
              }
            },
            "block_types": {
              "dynamodb_config": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "region": {
                      "type": "string",
                      "optional": true,
                      "computed": true
                    },
                    "table_name": {
                      "type": "string",
                      "required": true
                    },
                    "use_caller_credentials": {
                      "type": "bool",
                      "optional": true
                    }
                  }
                },
                "max_items": 1
              },
              "elasticsearch_config": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "endpoint": {
                      "type": "string",
                      "required": true
                    },
                    "region": {
                      "type": "string",
                      "optional": true,
                      "computed": true
                    }
                  }
                },
                "max_items": 1
              },
              "http_config": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "endpoint": {
                      "type": "string",
                      "required": true
                    }
                  }
                },
                "max_items": 1
              },
              "lambda_config": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "function_arn": {
                      "type": "string",
                      "required": true
                    }
                  }
                },
                "max_items": 1
              }
            }
          }
        },
        "aws_appsync_function": {
          "version": 0,
          "block": {
            "attributes": {
              "api_id": {
                "type": "string",
                "required": true
              },
              "arn": {
                "type": "string",
                "computed": true
              },
              "data_source": {
                "type": "string",
                "required": true
              },
              "description": {
                "type": "string",
                "optional": true
              },
              "function_id": {
                "type": "string",
                "computed": true
              },
              "function_version": {
                "type": "string",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "request_mapping_template": {
                "type": "string",
                "required": true
              },
              "response_mapping_template": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "aws_appsync_graphql_api": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "authentication_type": {
                "type": "string",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "schema": {
                "type": "string",
                "optional": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              },
              "uris": {
                "type": [
                  "map",
                  "string"
                ],
                "computed": true
              }
            },
            "block_types": {
              "additional_authentication_provider": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "authentication_type": {
                      "type": "string",
                      "required": true
                    }
                  },
                  "block_types": {
                    "openid_connect_config": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "auth_ttl": {
                            "type": "number",
                            "optional": true
                          },
                          "client_id": {
                            "type": "string",
                            "optional": true
                          },
                          "iat_ttl": {
                            "type": "number",
                            "optional": true
                          },
                          "issuer": {
                            "type": "string",
                            "required": true
                          }
                        }
                      },
                      "max_items": 1
                    },
                    "user_pool_config": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "app_id_client_regex": {
                            "type": "string",
                            "optional": true
                          },
                          "aws_region": {
                            "type": "string",
                            "optional": true,
                            "computed": true
                          },
                          "user_pool_id": {
                            "type": "string",
                            "required": true
                          }
                        }
                      },
                      "max_items": 1
                    }
                  }
                }
              },
              "log_config": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "cloudwatch_logs_role_arn": {
                      "type": "string",
                      "required": true
                    },
                    "field_log_level": {
                      "type": "string",
                      "required": true
                    }
                  }
                },
                "max_items": 1
              },
              "openid_connect_config": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "auth_ttl": {
                      "type": "number",
                      "optional": true
                    },
                    "client_id": {
                      "type": "string",
                      "optional": true
                    },
                    "iat_ttl": {
                      "type": "number",
                      "optional": true
                    },
                    "issuer": {
                      "type": "string",
                      "required": true
                    }
                  }
                },
                "max_items": 1
              },
              "user_pool_config": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "app_id_client_regex": {
                      "type": "string",
                      "optional": true
                    },
                    "aws_region": {
                      "type": "string",
                      "optional": true,
                      "computed": true
                    },
                    "default_action": {
                      "type": "string",
                      "required": true
                    },
                    "user_pool_id": {
                      "type": "string",
                      "required": true
                    }
                  }
                },
                "max_items": 1
              }
            }
          }
        },
        "aws_appsync_resolver": {
          "version": 0,
          "block": {
            "attributes": {
              "api_id": {
                "type": "string",
                "required": true
              },
              "arn": {
                "type": "string",
                "computed": true
              },
              "data_source": {
                "type": "string",
                "optional": true
              },
              "field": {
                "type": "string",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "kind": {
                "type": "string",
                "optional": true
              },
              "request_template": {
                "type": "string",
                "required": true
              },
              "response_template": {
                "type": "string",
                "required": true
              },
              "type": {
                "type": "string",
                "required": true
              }
            },
            "block_types": {
              "pipeline_config": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "functions": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "optional": true
                    }
                  }
                },
                "max_items": 1
              }
            }
          }
        },
        "aws_athena_database": {
          "version": 0,
          "block": {
            "attributes": {
              "bucket": {
                "type": "string",
                "required": true
              },
              "force_destroy": {
                "type": "bool",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              }
            },
            "block_types": {
              "encryption_configuration": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "encryption_option": {
                      "type": "string",
                      "required": true
                    },
                    "kms_key": {
                      "type": "string",
                      "optional": true
                    }
                  }
                },
                "max_items": 1
              }
            }
          }
        },
        "aws_athena_named_query": {
          "version": 0,
          "block": {
            "attributes": {
              "database": {
                "type": "string",
                "required": true
              },
              "description": {
                "type": "string",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "query": {
                "type": "string",
                "required": true
              },
              "workgroup": {
                "type": "string",
                "optional": true
              }
            }
          }
        },
        "aws_athena_workgroup": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "description": {
                "type": "string",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "state": {
                "type": "string",
                "optional": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              }
            },
            "block_types": {
              "configuration": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "bytes_scanned_cutoff_per_query": {
                      "type": "number",
                      "optional": true
                    },
                    "enforce_workgroup_configuration": {
                      "type": "bool",
                      "optional": true
                    },
                    "publish_cloudwatch_metrics_enabled": {
                      "type": "bool",
                      "optional": true
                    }
                  },
                  "block_types": {
                    "result_configuration": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "output_location": {
                            "type": "string",
                            "optional": true
                          }
                        },
                        "block_types": {
                          "encryption_configuration": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "encryption_option": {
                                  "type": "string",
                                  "optional": true
                                },
                                "kms_key_arn": {
                                  "type": "string",
                                  "optional": true
                                }
                              }
                            },
                            "max_items": 1
                          }
                        }
                      },
                      "max_items": 1
                    }
                  }
                },
                "max_items": 1
              }
            }
          }
        },
        "aws_autoscaling_attachment": {
          "version": 0,
          "block": {
            "attributes": {
              "alb_target_group_arn": {
                "type": "string",
                "optional": true
              },
              "autoscaling_group_name": {
                "type": "string",
                "required": true
              },
              "elb": {
                "type": "string",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              }
            }
          }
        },
        "aws_autoscaling_group": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "availability_zones": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true,
                "computed": true
              },
              "default_cooldown": {
                "type": "number",
                "optional": true,
                "computed": true
              },
              "desired_capacity": {
                "type": "number",
                "optional": true,
                "computed": true
              },
              "enabled_metrics": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true
              },
              "force_delete": {
                "type": "bool",
                "optional": true
              },
              "health_check_grace_period": {
                "type": "number",
                "optional": true
              },
              "health_check_type": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "launch_configuration": {
                "type": "string",
                "optional": true
              },
              "load_balancers": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true,
                "computed": true
              },
              "max_instance_lifetime": {
                "type": "number",
                "optional": true
              },
              "max_size": {
                "type": "number",
                "required": true
              },
              "metrics_granularity": {
                "type": "string",
                "optional": true
              },
              "min_elb_capacity": {
                "type": "number",
                "optional": true
              },
              "min_size": {
                "type": "number",
                "required": true
              },
              "name": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name_prefix": {
                "type": "string",
                "optional": true
              },
              "placement_group": {
                "type": "string",
                "optional": true
              },
              "protect_from_scale_in": {
                "type": "bool",
                "optional": true
              },
              "service_linked_role_arn": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "suspended_processes": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true
              },
              "tags": {
                "type": [
                  "list",
                  [
                    "map",
                    "string"
                  ]
                ],
                "optional": true
              },
              "target_group_arns": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true,
                "computed": true
              },
              "termination_policies": {
                "type": [
                  "list",
                  "string"
                ],
                "optional": true
              },
              "vpc_zone_identifier": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true,
                "computed": true
              },
              "wait_for_capacity_timeout": {
                "type": "string",
                "optional": true
              },
              "wait_for_elb_capacity": {
                "type": "number",
                "optional": true
              }
            },
            "block_types": {
              "initial_lifecycle_hook": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "default_result": {
                      "type": "string",
                      "optional": true,
                      "computed": true
                    },
                    "heartbeat_timeout": {
                      "type": "number",
                      "optional": true
                    },
                    "lifecycle_transition": {
                      "type": "string",
                      "required": true
                    },
                    "name": {
                      "type": "string",
                      "required": true
                    },
                    "notification_metadata": {
                      "type": "string",
                      "optional": true
                    },
                    "notification_target_arn": {
                      "type": "string",
                      "optional": true
                    },
                    "role_arn": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              },
              "launch_template": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "optional": true,
                      "computed": true
                    },
                    "name": {
                      "type": "string",
                      "optional": true,
                      "computed": true
                    },
                    "version": {
                      "type": "string",
                      "optional": true
                    }
                  }
                },
                "max_items": 1
              },
              "mixed_instances_policy": {
                "nesting_mode": "list",
                "block": {
                  "block_types": {
                    "instances_distribution": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "on_demand_allocation_strategy": {
                            "type": "string",
                            "optional": true
                          },
                          "on_demand_base_capacity": {
                            "type": "number",
                            "optional": true
                          },
                          "on_demand_percentage_above_base_capacity": {
                            "type": "number",
                            "optional": true
                          },
                          "spot_allocation_strategy": {
                            "type": "string",
                            "optional": true
                          },
                          "spot_instance_pools": {
                            "type": "number",
                            "optional": true,
                            "computed": true
                          },
                          "spot_max_price": {
                            "type": "string",
                            "optional": true
                          }
                        }
                      },
                      "max_items": 1
                    },
                    "launch_template": {
                      "nesting_mode": "list",
                      "block": {
                        "block_types": {
                          "launch_template_specification": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "launch_template_id": {
                                  "type": "string",
                                  "optional": true,
                                  "computed": true
                                },
                                "launch_template_name": {
                                  "type": "string",
                                  "optional": true,
                                  "computed": true
                                },
                                "version": {
                                  "type": "string",
                                  "optional": true
                                }
                              }
                            },
                            "min_items": 1,
                            "max_items": 1
                          },
                          "override": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "instance_type": {
                                  "type": "string",
                                  "optional": true
                                },
                                "weighted_capacity": {
                                  "type": "string",
                                  "optional": true
                                }
                              }
                            }
                          }
                        }
                      },
                      "min_items": 1,
                      "max_items": 1
                    }
                  }
                },
                "max_items": 1
              },
              "tag": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "key": {
                      "type": "string",
                      "required": true
                    },
                    "propagate_at_launch": {
                      "type": "bool",
                      "required": true
                    },
                    "value": {
                      "type": "string",
                      "required": true
                    }
                  }
                }
              },
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "delete": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_autoscaling_lifecycle_hook": {
          "version": 0,
          "block": {
            "attributes": {
              "autoscaling_group_name": {
                "type": "string",
                "required": true
              },
              "default_result": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "heartbeat_timeout": {
                "type": "number",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "lifecycle_transition": {
                "type": "string",
                "required": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "notification_metadata": {
                "type": "string",
                "optional": true
              },
              "notification_target_arn": {
                "type": "string",
                "optional": true
              },
              "role_arn": {
                "type": "string",
                "optional": true
              }
            }
          }
        },
        "aws_autoscaling_notification": {
          "version": 0,
          "block": {
            "attributes": {
              "group_names": {
                "type": [
                  "set",
                  "string"
                ],
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "notifications": {
                "type": [
                  "set",
                  "string"
                ],
                "required": true
              },
              "topic_arn": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "aws_autoscaling_policy": {
          "version": 0,
          "block": {
            "attributes": {
              "adjustment_type": {
                "type": "string",
                "optional": true
              },
              "arn": {
                "type": "string",
                "computed": true
              },
              "autoscaling_group_name": {
                "type": "string",
                "required": true
              },
              "cooldown": {
                "type": "number",
                "optional": true
              },
              "estimated_instance_warmup": {
                "type": "number",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "metric_aggregation_type": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "min_adjustment_magnitude": {
                "type": "number",
                "optional": true
              },
              "min_adjustment_step": {
                "type": "number",
                "optional": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "policy_type": {
                "type": "string",
                "optional": true
              },
              "scaling_adjustment": {
                "type": "number",
                "optional": true
              }
            },
            "block_types": {
              "step_adjustment": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "metric_interval_lower_bound": {
                      "type": "string",
                      "optional": true
                    },
                    "metric_interval_upper_bound": {
                      "type": "string",
                      "optional": true
                    },
                    "scaling_adjustment": {
                      "type": "number",
                      "required": true
                    }
                  }
                }
              },
              "target_tracking_configuration": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "disable_scale_in": {
                      "type": "bool",
                      "optional": true
                    },
                    "target_value": {
                      "type": "number",
                      "required": true
                    }
                  },
                  "block_types": {
                    "customized_metric_specification": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "metric_name": {
                            "type": "string",
                            "required": true
                          },
                          "namespace": {
                            "type": "string",
                            "required": true
                          },
                          "statistic": {
                            "type": "string",
                            "required": true
                          },
                          "unit": {
                            "type": "string",
                            "optional": true
                          }
                        },
                        "block_types": {
                          "metric_dimension": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "name": {
                                  "type": "string",
                                  "required": true
                                },
                                "value": {
                                  "type": "string",
                                  "required": true
                                }
                              }
                            }
                          }
                        }
                      },
                      "max_items": 1
                    },
                    "predefined_metric_specification": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "predefined_metric_type": {
                            "type": "string",
                            "required": true
                          },
                          "resource_label": {
                            "type": "string",
                            "optional": true
                          }
                        }
                      },
                      "max_items": 1
                    }
                  }
                },
                "max_items": 1
              }
            }
          }
        },
        "aws_autoscaling_schedule": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "autoscaling_group_name": {
                "type": "string",
                "required": true
              },
              "desired_capacity": {
                "type": "number",
                "optional": true,
                "computed": true
              },
              "end_time": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "max_size": {
                "type": "number",
                "optional": true,
                "computed": true
              },
              "min_size": {
                "type": "number",
                "optional": true,
                "computed": true
              },
              "recurrence": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "scheduled_action_name": {
                "type": "string",
                "required": true
              },
              "start_time": {
                "type": "string",
                "optional": true,
                "computed": true
              }
            }
          }
        },
        "aws_backup_plan": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              },
              "version": {
                "type": "string",
                "computed": true
              }
            },
            "block_types": {
              "rule": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "completion_window": {
                      "type": "number",
                      "optional": true
                    },
                    "recovery_point_tags": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "optional": true
                    },
                    "rule_name": {
                      "type": "string",
                      "required": true
                    },
                    "schedule": {
                      "type": "string",
                      "optional": true
                    },
                    "start_window": {
                      "type": "number",
                      "optional": true
                    },
                    "target_vault_name": {
                      "type": "string",
                      "required": true
                    }
                  },
                  "block_types": {
                    "lifecycle": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "cold_storage_after": {
                            "type": "number",
                            "optional": true
                          },
                          "delete_after": {
                            "type": "number",
                            "optional": true
                          }
                        }
                      },
                      "max_items": 1
                    }
                  }
                },
                "min_items": 1
              }
            }
          }
        },
        "aws_backup_selection": {
          "version": 0,
          "block": {
            "attributes": {
              "iam_role_arn": {
                "type": "string",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "plan_id": {
                "type": "string",
                "required": true
              },
              "resources": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true
              }
            },
            "block_types": {
              "selection_tag": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "key": {
                      "type": "string",
                      "required": true
                    },
                    "type": {
                      "type": "string",
                      "required": true
                    },
                    "value": {
                      "type": "string",
                      "required": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_backup_vault": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "kms_key_arn": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "recovery_points": {
                "type": "number",
                "computed": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              }
            }
          }
        },
        "aws_batch_compute_environment": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "compute_environment_name": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "compute_environment_name_prefix": {
                "type": "string",
                "optional": true
              },
              "ecc_cluster_arn": {
                "type": "string",
                "computed": true
              },
              "ecs_cluster_arn": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "service_role": {
                "type": "string",
                "required": true
              },
              "state": {
                "type": "string",
                "optional": true
              },
              "status": {
                "type": "string",
                "computed": true
              },
              "status_reason": {
                "type": "string",
                "computed": true
              },
              "type": {
                "type": "string",
                "required": true
              }
            },
            "block_types": {
              "compute_resources": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "allocation_strategy": {
                      "type": "string",
                      "optional": true
                    },
                    "bid_percentage": {
                      "type": "number",
                      "optional": true
                    },
                    "desired_vcpus": {
                      "type": "number",
                      "optional": true
                    },
                    "ec2_key_pair": {
                      "type": "string",
                      "optional": true
                    },
                    "image_id": {
                      "type": "string",
                      "optional": true
                    },
                    "instance_role": {
                      "type": "string",
                      "required": true
                    },
                    "instance_type": {
                      "type": [
                        "set",
                        "string"
                      ],
                      "required": true
                    },
                    "max_vcpus": {
                      "type": "number",
                      "required": true
                    },
                    "min_vcpus": {
                      "type": "number",
                      "required": true
                    },
                    "security_group_ids": {
                      "type": [
                        "set",
                        "string"
                      ],
                      "required": true
                    },
                    "spot_iam_fleet_role": {
                      "type": "string",
                      "optional": true
                    },
                    "subnets": {
                      "type": [
                        "set",
                        "string"
                      ],
                      "required": true
                    },
                    "tags": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "optional": true
                    },
                    "type": {
                      "type": "string",
                      "required": true
                    }
                  },
                  "block_types": {
                    "launch_template": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "launch_template_id": {
                            "type": "string",
                            "optional": true
                          },
                          "launch_template_name": {
                            "type": "string",
                            "optional": true
                          },
                          "version": {
                            "type": "string",
                            "optional": true
                          }
                        }
                      },
                      "max_items": 1
                    }
                  }
                },
                "max_items": 1
              }
            }
          }
        },
        "aws_batch_job_definition": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "container_properties": {
                "type": "string",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "parameters": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              },
              "revision": {
                "type": "number",
                "computed": true
              },
              "type": {
                "type": "string",
                "required": true
              }
            },
            "block_types": {
              "retry_strategy": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "attempts": {
                      "type": "number",
                      "optional": true
                    }
                  }
                },
                "max_items": 1
              },
              "timeout": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "attempt_duration_seconds": {
                      "type": "number",
                      "optional": true
                    }
                  }
                },
                "max_items": 1
              }
            }
          }
        },
        "aws_batch_job_queue": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "compute_environments": {
                "type": [
                  "list",
                  "string"
                ],
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "priority": {
                "type": "number",
                "required": true
              },
              "state": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "aws_budgets_budget": {
          "version": 0,
          "block": {
            "attributes": {
              "account_id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "budget_type": {
                "type": "string",
                "required": true
              },
              "cost_filters": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "limit_amount": {
                "type": "string",
                "required": true
              },
              "limit_unit": {
                "type": "string",
                "required": true
              },
              "name": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name_prefix": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "time_period_end": {
                "type": "string",
                "optional": true
              },
              "time_period_start": {
                "type": "string",
                "required": true
              },
              "time_unit": {
                "type": "string",
                "required": true
              }
            },
            "block_types": {
              "cost_types": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "include_credit": {
                      "type": "bool",
                      "optional": true
                    },
                    "include_discount": {
                      "type": "bool",
                      "optional": true
                    },
                    "include_other_subscription": {
                      "type": "bool",
                      "optional": true
                    },
                    "include_recurring": {
                      "type": "bool",
                      "optional": true
                    },
                    "include_refund": {
                      "type": "bool",
                      "optional": true
                    },
                    "include_subscription": {
                      "type": "bool",
                      "optional": true
                    },
                    "include_support": {
                      "type": "bool",
                      "optional": true
                    },
                    "include_tax": {
                      "type": "bool",
                      "optional": true
                    },
                    "include_upfront": {
                      "type": "bool",
                      "optional": true
                    },
                    "use_amortized": {
                      "type": "bool",
                      "optional": true
                    },
                    "use_blended": {
                      "type": "bool",
                      "optional": true
                    }
                  }
                },
                "max_items": 1
              },
              "notification": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "comparison_operator": {
                      "type": "string",
                      "required": true
                    },
                    "notification_type": {
                      "type": "string",
                      "required": true
                    },
                    "subscriber_email_addresses": {
                      "type": [
                        "set",
                        "string"
                      ],
                      "optional": true
                    },
                    "subscriber_sns_topic_arns": {
                      "type": [
                        "set",
                        "string"
                      ],
                      "optional": true
                    },
                    "threshold": {
                      "type": "number",
                      "required": true
                    },
                    "threshold_type": {
                      "type": "string",
                      "required": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_cloud9_environment_ec2": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "automatic_stop_time_minutes": {
                "type": "number",
                "optional": true
              },
              "description": {
                "type": "string",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "instance_type": {
                "type": "string",
                "required": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "owner_arn": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "subnet_id": {
                "type": "string",
                "optional": true
              },
              "type": {
                "type": "string",
                "computed": true
              }
            }
          }
        },
        "aws_cloudformation_stack": {
          "version": 0,
          "block": {
            "attributes": {
              "capabilities": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true
              },
              "disable_rollback": {
                "type": "bool",
                "optional": true
              },
              "iam_role_arn": {
                "type": "string",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "notification_arns": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true
              },
              "on_failure": {
                "type": "string",
                "optional": true
              },
              "outputs": {
                "type": [
                  "map",
                  "string"
                ],
                "computed": true
              },
              "parameters": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true,
                "computed": true
              },
              "policy_body": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "policy_url": {
                "type": "string",
                "optional": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              },
              "template_body": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "template_url": {
                "type": "string",
                "optional": true
              },
              "timeout_in_minutes": {
                "type": "number",
                "optional": true
              }
            },
            "block_types": {
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_cloudformation_stack_set": {
          "version": 0,
          "block": {
            "attributes": {
              "administration_role_arn": {
                "type": "string",
                "required": true
              },
              "arn": {
                "type": "string",
                "computed": true
              },
              "capabilities": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true
              },
              "description": {
                "type": "string",
                "optional": true
              },
              "execution_role_name": {
                "type": "string",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "parameters": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              },
              "stack_set_id": {
                "type": "string",
                "computed": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              },
              "template_body": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "template_url": {
                "type": "string",
                "optional": true
              }
            },
            "block_types": {
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "update": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_cloudformation_stack_set_instance": {
          "version": 0,
          "block": {
            "attributes": {
              "account_id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "parameter_overrides": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              },
              "region": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "retain_stack": {
                "type": "bool",
                "optional": true
              },
              "stack_id": {
                "type": "string",
                "computed": true
              },
              "stack_set_name": {
                "type": "string",
                "required": true
              }
            },
            "block_types": {
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_cloudfront_distribution": {
          "version": 1,
          "block": {
            "attributes": {
              "active_trusted_signers": {
                "type": [
                  "map",
                  "string"
                ],
                "computed": true
              },
              "aliases": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true
              },
              "arn": {
                "type": "string",
                "computed": true
              },
              "caller_reference": {
                "type": "string",
                "computed": true
              },
              "comment": {
                "type": "string",
                "optional": true
              },
              "default_root_object": {
                "type": "string",
                "optional": true
              },
              "domain_name": {
                "type": "string",
                "computed": true
              },
              "enabled": {
                "type": "bool",
                "required": true
              },
              "etag": {
                "type": "string",
                "computed": true
              },
              "hosted_zone_id": {
                "type": "string",
                "computed": true
              },
              "http_version": {
                "type": "string",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "in_progress_validation_batches": {
                "type": "number",
                "computed": true
              },
              "is_ipv6_enabled": {
                "type": "bool",
                "optional": true
              },
              "last_modified_time": {
                "type": "string",
                "computed": true
              },
              "price_class": {
                "type": "string",
                "optional": true
              },
              "retain_on_delete": {
                "type": "bool",
                "optional": true
              },
              "status": {
                "type": "string",
                "computed": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              },
              "wait_for_deployment": {
                "type": "bool",
                "optional": true
              },
              "web_acl_id": {
                "type": "string",
                "optional": true
              }
            },
            "block_types": {
              "cache_behavior": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "allowed_methods": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "required": true
                    },
                    "cached_methods": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "required": true
                    },
                    "compress": {
                      "type": "bool",
                      "optional": true
                    },
                    "default_ttl": {
                      "type": "number",
                      "optional": true
                    },
                    "field_level_encryption_id": {
                      "type": "string",
                      "optional": true
                    },
                    "max_ttl": {
                      "type": "number",
                      "optional": true
                    },
                    "min_ttl": {
                      "type": "number",
                      "optional": true
                    },
                    "path_pattern": {
                      "type": "string",
                      "required": true
                    },
                    "smooth_streaming": {
                      "type": "bool",
                      "optional": true
                    },
                    "target_origin_id": {
                      "type": "string",
                      "required": true
                    },
                    "trusted_signers": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "optional": true
                    },
                    "viewer_protocol_policy": {
                      "type": "string",
                      "required": true
                    }
                  },
                  "block_types": {
                    "forwarded_values": {
                      "nesting_mode": "set",
                      "block": {
                        "attributes": {
                          "headers": {
                            "type": [
                              "set",
                              "string"
                            ],
                            "optional": true
                          },
                          "query_string": {
                            "type": "bool",
                            "required": true
                          },
                          "query_string_cache_keys": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "optional": true
                          }
                        },
                        "block_types": {
                          "cookies": {
                            "nesting_mode": "set",
                            "block": {
                              "attributes": {
                                "forward": {
                                  "type": "string",
                                  "required": true
                                },
                                "whitelisted_names": {
                                  "type": [
                                    "set",
                                    "string"
                                  ],
                                  "optional": true
                                }
                              }
                            },
                            "min_items": 1,
                            "max_items": 1
                          }
                        }
                      },
                      "min_items": 1,
                      "max_items": 1
                    },
                    "lambda_function_association": {
                      "nesting_mode": "set",
                      "block": {
                        "attributes": {
                          "event_type": {
                            "type": "string",
                            "required": true
                          },
                          "include_body": {
                            "type": "bool",
                            "optional": true
                          },
                          "lambda_arn": {
                            "type": "string",
                            "required": true
                          }
                        }
                      },
                      "max_items": 4
                    }
                  }
                }
              },
              "custom_error_response": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "error_caching_min_ttl": {
                      "type": "number",
                      "optional": true
                    },
                    "error_code": {
                      "type": "number",
                      "required": true
                    },
                    "response_code": {
                      "type": "number",
                      "optional": true
                    },
                    "response_page_path": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              },
              "default_cache_behavior": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "allowed_methods": {
                      "type": [
                        "set",
                        "string"
                      ],
                      "required": true
                    },
                    "cached_methods": {
                      "type": [
                        "set",
                        "string"
                      ],
                      "required": true
                    },
                    "compress": {
                      "type": "bool",
                      "optional": true
                    },
                    "default_ttl": {
                      "type": "number",
                      "optional": true
                    },
                    "field_level_encryption_id": {
                      "type": "string",
                      "optional": true
                    },
                    "max_ttl": {
                      "type": "number",
                      "optional": true
                    },
                    "min_ttl": {
                      "type": "number",
                      "optional": true
                    },
                    "smooth_streaming": {
                      "type": "bool",
                      "optional": true
                    },
                    "target_origin_id": {
                      "type": "string",
                      "required": true
                    },
                    "trusted_signers": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "optional": true
                    },
                    "viewer_protocol_policy": {
                      "type": "string",
                      "required": true
                    }
                  },
                  "block_types": {
                    "forwarded_values": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "headers": {
                            "type": [
                              "set",
                              "string"
                            ],
                            "optional": true
                          },
                          "query_string": {
                            "type": "bool",
                            "required": true
                          },
                          "query_string_cache_keys": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "optional": true
                          }
                        },
                        "block_types": {
                          "cookies": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "forward": {
                                  "type": "string",
                                  "required": true
                                },
                                "whitelisted_names": {
                                  "type": [
                                    "set",
                                    "string"
                                  ],
                                  "optional": true
                                }
                              }
                            },
                            "min_items": 1,
                            "max_items": 1
                          }
                        }
                      },
                      "min_items": 1,
                      "max_items": 1
                    },
                    "lambda_function_association": {
                      "nesting_mode": "set",
                      "block": {
                        "attributes": {
                          "event_type": {
                            "type": "string",
                            "required": true
                          },
                          "include_body": {
                            "type": "bool",
                            "optional": true
                          },
                          "lambda_arn": {
                            "type": "string",
                            "required": true
                          }
                        }
                      },
                      "max_items": 4
                    }
                  }
                },
                "min_items": 1,
                "max_items": 1
              },
              "logging_config": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "bucket": {
                      "type": "string",
                      "required": true
                    },
                    "include_cookies": {
                      "type": "bool",
                      "optional": true
                    },
                    "prefix": {
                      "type": "string",
                      "optional": true
                    }
                  }
                },
                "max_items": 1
              },
              "ordered_cache_behavior": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "allowed_methods": {
                      "type": [
                        "set",
                        "string"
                      ],
                      "required": true
                    },
                    "cached_methods": {
                      "type": [
                        "set",
                        "string"
                      ],
                      "required": true
                    },
                    "compress": {
                      "type": "bool",
                      "optional": true
                    },
                    "default_ttl": {
                      "type": "number",
                      "optional": true
                    },
                    "field_level_encryption_id": {
                      "type": "string",
                      "optional": true
                    },
                    "max_ttl": {
                      "type": "number",
                      "optional": true
                    },
                    "min_ttl": {
                      "type": "number",
                      "optional": true
                    },
                    "path_pattern": {
                      "type": "string",
                      "required": true
                    },
                    "smooth_streaming": {
                      "type": "bool",
                      "optional": true
                    },
                    "target_origin_id": {
                      "type": "string",
                      "required": true
                    },
                    "trusted_signers": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "optional": true
                    },
                    "viewer_protocol_policy": {
                      "type": "string",
                      "required": true
                    }
                  },
                  "block_types": {
                    "forwarded_values": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "headers": {
                            "type": [
                              "set",
                              "string"
                            ],
                            "optional": true
                          },
                          "query_string": {
                            "type": "bool",
                            "required": true
                          },
                          "query_string_cache_keys": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "optional": true
                          }
                        },
                        "block_types": {
                          "cookies": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "forward": {
                                  "type": "string",
                                  "required": true
                                },
                                "whitelisted_names": {
                                  "type": [
                                    "set",
                                    "string"
                                  ],
                                  "optional": true
                                }
                              }
                            },
                            "min_items": 1,
                            "max_items": 1
                          }
                        }
                      },
                      "min_items": 1,
                      "max_items": 1
                    },
                    "lambda_function_association": {
                      "nesting_mode": "set",
                      "block": {
                        "attributes": {
                          "event_type": {
                            "type": "string",
                            "required": true
                          },
                          "include_body": {
                            "type": "bool",
                            "optional": true
                          },
                          "lambda_arn": {
                            "type": "string",
                            "required": true
                          }
                        }
                      },
                      "max_items": 4
                    }
                  }
                }
              },
              "origin": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "domain_name": {
                      "type": "string",
                      "required": true
                    },
                    "origin_id": {
                      "type": "string",
                      "required": true
                    },
                    "origin_path": {
                      "type": "string",
                      "optional": true
                    }
                  },
                  "block_types": {
                    "custom_header": {
                      "nesting_mode": "set",
                      "block": {
                        "attributes": {
                          "name": {
                            "type": "string",
                            "required": true
                          },
                          "value": {
                            "type": "string",
                            "required": true
                          }
                        }
                      }
                    },
                    "custom_origin_config": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "http_port": {
                            "type": "number",
                            "required": true
                          },
                          "https_port": {
                            "type": "number",
                            "required": true
                          },
                          "origin_keepalive_timeout": {
                            "type": "number",
                            "optional": true
                          },
                          "origin_protocol_policy": {
                            "type": "string",
                            "required": true
                          },
                          "origin_read_timeout": {
                            "type": "number",
                            "optional": true
                          },
                          "origin_ssl_protocols": {
                            "type": [
                              "set",
                              "string"
                            ],
                            "required": true
                          }
                        }
                      },
                      "max_items": 1
                    },
                    "s3_origin_config": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "origin_access_identity": {
                            "type": "string",
                            "required": true
                          }
                        }
                      },
                      "max_items": 1
                    }
                  }
                },
                "min_items": 1
              },
              "origin_group": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "origin_id": {
                      "type": "string",
                      "required": true
                    }
                  },
                  "block_types": {
                    "failover_criteria": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "status_codes": {
                            "type": [
                              "set",
                              "number"
                            ],
                            "required": true
                          }
                        }
                      },
                      "min_items": 1,
                      "max_items": 1
                    },
                    "member": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "origin_id": {
                            "type": "string",
                            "required": true
                          }
                        }
                      },
                      "min_items": 2,
                      "max_items": 2
                    }
                  }
                }
              },
              "restrictions": {
                "nesting_mode": "list",
                "block": {
                  "block_types": {
                    "geo_restriction": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "locations": {
                            "type": [
                              "set",
                              "string"
                            ],
                            "optional": true
                          },
                          "restriction_type": {
                            "type": "string",
                            "required": true
                          }
                        }
                      },
                      "min_items": 1,
                      "max_items": 1
                    }
                  }
                },
                "min_items": 1,
                "max_items": 1
              },
              "viewer_certificate": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "acm_certificate_arn": {
                      "type": "string",
                      "optional": true
                    },
                    "cloudfront_default_certificate": {
                      "type": "bool",
                      "optional": true
                    },
                    "iam_certificate_id": {
                      "type": "string",
                      "optional": true
                    },
                    "minimum_protocol_version": {
                      "type": "string",
                      "optional": true
                    },
                    "ssl_support_method": {
                      "type": "string",
                      "optional": true
                    }
                  }
                },
                "min_items": 1,
                "max_items": 1
              }
            }
          }
        },
        "aws_cloudfront_origin_access_identity": {
          "version": 0,
          "block": {
            "attributes": {
              "caller_reference": {
                "type": "string",
                "computed": true
              },
              "cloudfront_access_identity_path": {
                "type": "string",
                "computed": true
              },
              "comment": {
                "type": "string",
                "optional": true
              },
              "etag": {
                "type": "string",
                "computed": true
              },
              "iam_arn": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "s3_canonical_user_id": {
                "type": "string",
                "computed": true
              }
            }
          }
        },
        "aws_cloudfront_public_key": {
          "version": 0,
          "block": {
            "attributes": {
              "caller_reference": {
                "type": "string",
                "computed": true
              },
              "comment": {
                "type": "string",
                "optional": true
              },
              "encoded_key": {
                "type": "string",
                "required": true
              },
              "etag": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name_prefix": {
                "type": "string",
                "optional": true,
                "computed": true
              }
            }
          }
        },
        "aws_cloudhsm_v2_cluster": {
          "version": 0,
          "block": {
            "attributes": {
              "cluster_certificates": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "aws_hardware_certificate": "string",
                      "cluster_certificate": "string",
                      "cluster_csr": "string",
                      "hsm_certificate": "string",
                      "manufacturer_hardware_certificate": "string"
                    }
                  ]
                ],
                "computed": true
              },
              "cluster_id": {
                "type": "string",
                "computed": true
              },
              "cluster_state": {
                "type": "string",
                "computed": true
              },
              "hsm_type": {
                "type": "string",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "security_group_id": {
                "type": "string",
                "computed": true
              },
              "source_backup_identifier": {
                "type": "string",
                "optional": true
              },
              "subnet_ids": {
                "type": [
                  "set",
                  "string"
                ],
                "required": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              },
              "vpc_id": {
                "type": "string",
                "computed": true
              }
            },
            "block_types": {
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_cloudhsm_v2_hsm": {
          "version": 0,
          "block": {
            "attributes": {
              "availability_zone": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "cluster_id": {
                "type": "string",
                "required": true
              },
              "hsm_eni_id": {
                "type": "string",
                "computed": true
              },
              "hsm_id": {
                "type": "string",
                "computed": true
              },
              "hsm_state": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "ip_address": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "subnet_id": {
                "type": "string",
                "optional": true,
                "computed": true
              }
            },
            "block_types": {
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_cloudtrail": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "cloud_watch_logs_group_arn": {
                "type": "string",
                "optional": true
              },
              "cloud_watch_logs_role_arn": {
                "type": "string",
                "optional": true
              },
              "enable_log_file_validation": {
                "type": "bool",
                "optional": true
              },
              "enable_logging": {
                "type": "bool",
                "optional": true
              },
              "home_region": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "include_global_service_events": {
                "type": "bool",
                "optional": true
              },
              "is_multi_region_trail": {
                "type": "bool",
                "optional": true
              },
              "is_organization_trail": {
                "type": "bool",
                "optional": true
              },
              "kms_key_id": {
                "type": "string",
                "optional": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "s3_bucket_name": {
                "type": "string",
                "required": true
              },
              "s3_key_prefix": {
                "type": "string",
                "optional": true
              },
              "sns_topic_name": {
                "type": "string",
                "optional": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              }
            },
            "block_types": {
              "event_selector": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "include_management_events": {
                      "type": "bool",
                      "optional": true
                    },
                    "read_write_type": {
                      "type": "string",
                      "optional": true
                    }
                  },
                  "block_types": {
                    "data_resource": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "type": {
                            "type": "string",
                            "required": true
                          },
                          "values": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "required": true
                          }
                        }
                      }
                    }
                  }
                },
                "max_items": 5
              }
            }
          }
        },
        "aws_cloudwatch_dashboard": {
          "version": 0,
          "block": {
            "attributes": {
              "dashboard_arn": {
                "type": "string",
                "computed": true
              },
              "dashboard_body": {
                "type": "string",
                "required": true
              },
              "dashboard_name": {
                "type": "string",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              }
            }
          }
        },
        "aws_cloudwatch_event_permission": {
          "version": 0,
          "block": {
            "attributes": {
              "action": {
                "type": "string",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "principal": {
                "type": "string",
                "required": true
              },
              "statement_id": {
                "type": "string",
                "required": true
              }
            },
            "block_types": {
              "condition": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "key": {
                      "type": "string",
                      "required": true
                    },
                    "type": {
                      "type": "string",
                      "required": true
                    },
                    "value": {
                      "type": "string",
                      "required": true
                    }
                  }
                },
                "max_items": 1
              }
            }
          }
        },
        "aws_cloudwatch_event_rule": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "description": {
                "type": "string",
                "optional": true
              },
              "event_pattern": {
                "type": "string",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "is_enabled": {
                "type": "bool",
                "optional": true
              },
              "name": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name_prefix": {
                "type": "string",
                "optional": true
              },
              "role_arn": {
                "type": "string",
                "optional": true
              },
              "schedule_expression": {
                "type": "string",
                "optional": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              }
            }
          }
        },
        "aws_cloudwatch_event_target": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "input": {
                "type": "string",
                "optional": true
              },
              "input_path": {
                "type": "string",
                "optional": true
              },
              "role_arn": {
                "type": "string",
                "optional": true
              },
              "rule": {
                "type": "string",
                "required": true
              },
              "target_id": {
                "type": "string",
                "optional": true,
                "computed": true
              }
            },
            "block_types": {
              "batch_target": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "array_size": {
                      "type": "number",
                      "optional": true
                    },
                    "job_attempts": {
                      "type": "number",
                      "optional": true
                    },
                    "job_definition": {
                      "type": "string",
                      "required": true
                    },
                    "job_name": {
                      "type": "string",
                      "required": true
                    }
                  }
                },
                "max_items": 1
              },
              "ecs_target": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "group": {
                      "type": "string",
                      "optional": true
                    },
                    "launch_type": {
                      "type": "string",
                      "optional": true
                    },
                    "platform_version": {
                      "type": "string",
                      "optional": true
                    },
                    "task_count": {
                      "type": "number",
                      "optional": true
                    },
                    "task_definition_arn": {
                      "type": "string",
                      "required": true
                    }
                  },
                  "block_types": {
                    "network_configuration": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "assign_public_ip": {
                            "type": "bool",
                            "optional": true
                          },
                          "security_groups": {
                            "type": [
                              "set",
                              "string"
                            ],
                            "optional": true
                          },
                          "subnets": {
                            "type": [
                              "set",
                              "string"
                            ],
                            "required": true
                          }
                        }
                      },
                      "max_items": 1
                    }
                  }
                },
                "max_items": 1
              },
              "input_transformer": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "input_paths": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "optional": true
                    },
                    "input_template": {
                      "type": "string",
                      "required": true
                    }
                  }
                },
                "max_items": 1
              },
              "kinesis_target": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "partition_key_path": {
                      "type": "string",
                      "optional": true
                    }
                  }
                },
                "max_items": 1
              },
              "run_command_targets": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "key": {
                      "type": "string",
                      "required": true
                    },
                    "values": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "required": true
                    }
                  }
                },
                "max_items": 5
              },
              "sqs_target": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "message_group_id": {
                      "type": "string",
                      "optional": true
                    }
                  }
                },
                "max_items": 1
              }
            }
          }
        },
        "aws_cloudwatch_log_destination": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "role_arn": {
                "type": "string",
                "required": true
              },
              "target_arn": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "aws_cloudwatch_log_destination_policy": {
          "version": 0,
          "block": {
            "attributes": {
              "access_policy": {
                "type": "string",
                "required": true
              },
              "destination_name": {
                "type": "string",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              }
            }
          }
        },
        "aws_cloudwatch_log_group": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "kms_key_id": {
                "type": "string",
                "optional": true
              },
              "name": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name_prefix": {
                "type": "string",
                "optional": true
              },
              "retention_in_days": {
                "type": "number",
                "optional": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              }
            }
          }
        },
        "aws_cloudwatch_log_metric_filter": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "log_group_name": {
                "type": "string",
                "required": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "pattern": {
                "type": "string",
                "required": true
              }
            },
            "block_types": {
              "metric_transformation": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "default_value": {
                      "type": "string",
                      "optional": true
                    },
                    "name": {
                      "type": "string",
                      "required": true
                    },
                    "namespace": {
                      "type": "string",
                      "required": true
                    },
                    "value": {
                      "type": "string",
                      "required": true
                    }
                  }
                },
                "min_items": 1,
                "max_items": 1
              }
            }
          }
        },
        "aws_cloudwatch_log_resource_policy": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "policy_document": {
                "type": "string",
                "required": true
              },
              "policy_name": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "aws_cloudwatch_log_stream": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "log_group_name": {
                "type": "string",
                "required": true
              },
              "name": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "aws_cloudwatch_log_subscription_filter": {
          "version": 0,
          "block": {
            "attributes": {
              "destination_arn": {
                "type": "string",
                "required": true
              },
              "distribution": {
                "type": "string",
                "optional": true
              },
              "filter_pattern": {
                "type": "string",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "log_group_name": {
                "type": "string",
                "required": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "role_arn": {
                "type": "string",
                "optional": true,
                "computed": true
              }
            }
          }
        },
        "aws_cloudwatch_metric_alarm": {
          "version": 1,
          "block": {
            "attributes": {
              "actions_enabled": {
                "type": "bool",
                "optional": true
              },
              "alarm_actions": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true
              },
              "alarm_description": {
                "type": "string",
                "optional": true
              },
              "alarm_name": {
                "type": "string",
                "required": true
              },
              "arn": {
                "type": "string",
                "computed": true
              },
              "comparison_operator": {
                "type": "string",
                "required": true
              },
              "datapoints_to_alarm": {
                "type": "number",
                "optional": true
              },
              "dimensions": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              },
              "evaluate_low_sample_count_percentiles": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "evaluation_periods": {
                "type": "number",
                "required": true
              },
              "extended_statistic": {
                "type": "string",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "insufficient_data_actions": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true
              },
              "metric_name": {
                "type": "string",
                "optional": true
              },
              "namespace": {
                "type": "string",
                "optional": true
              },
              "ok_actions": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true
              },
              "period": {
                "type": "number",
                "optional": true
              },
              "statistic": {
                "type": "string",
                "optional": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              },
              "threshold": {
                "type": "number",
                "optional": true
              },
              "threshold_metric_id": {
                "type": "string",
                "optional": true
              },
              "treat_missing_data": {
                "type": "string",
                "optional": true
              },
              "unit": {
                "type": "string",
                "optional": true
              }
            },
            "block_types": {
              "metric_query": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "expression": {
                      "type": "string",
                      "optional": true
                    },
                    "id": {
                      "type": "string",
                      "required": true
                    },
                    "label": {
                      "type": "string",
                      "optional": true
                    },
                    "return_data": {
                      "type": "bool",
                      "optional": true
                    }
                  },
                  "block_types": {
                    "metric": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "dimensions": {
                            "type": [
                              "map",
                              "string"
                            ],
                            "optional": true
                          },
                          "metric_name": {
                            "type": "string",
                            "required": true
                          },
                          "namespace": {
                            "type": "string",
                            "optional": true
                          },
                          "period": {
                            "type": "number",
                            "required": true
                          },
                          "stat": {
                            "type": "string",
                            "required": true
                          },
                          "unit": {
                            "type": "string",
                            "optional": true
                          }
                        }
                      },
                      "max_items": 1
                    }
                  }
                }
              }
            }
          }
        },
        "aws_codebuild_project": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "badge_enabled": {
                "type": "bool",
                "optional": true
              },
              "badge_url": {
                "type": "string",
                "computed": true
              },
              "build_timeout": {
                "type": "number",
                "optional": true
              },
              "description": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "encryption_key": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "queued_timeout": {
                "type": "number",
                "optional": true
              },
              "service_role": {
                "type": "string",
                "required": true
              },
              "source_version": {
                "type": "string",
                "optional": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              }
            },
            "block_types": {
              "artifacts": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "artifact_identifier": {
                      "type": "string",
                      "optional": true
                    },
                    "encryption_disabled": {
                      "type": "bool",
                      "optional": true
                    },
                    "location": {
                      "type": "string",
                      "optional": true
                    },
                    "name": {
                      "type": "string",
                      "optional": true
                    },
                    "namespace_type": {
                      "type": "string",
                      "optional": true
                    },
                    "override_artifact_name": {
                      "type": "bool",
                      "optional": true
                    },
                    "packaging": {
                      "type": "string",
                      "optional": true
                    },
                    "path": {
                      "type": "string",
                      "optional": true
                    },
                    "type": {
                      "type": "string",
                      "required": true
                    }
                  }
                },
                "min_items": 1,
                "max_items": 1
              },
              "cache": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "location": {
                      "type": "string",
                      "optional": true
                    },
                    "modes": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "optional": true
                    },
                    "type": {
                      "type": "string",
                      "optional": true
                    }
                  }
                },
                "max_items": 1
              },
              "environment": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "certificate": {
                      "type": "string",
                      "optional": true
                    },
                    "compute_type": {
                      "type": "string",
                      "required": true
                    },
                    "image": {
                      "type": "string",
                      "required": true
                    },
                    "image_pull_credentials_type": {
                      "type": "string",
                      "optional": true
                    },
                    "privileged_mode": {
                      "type": "bool",
                      "optional": true
                    },
                    "type": {
                      "type": "string",
                      "required": true
                    }
                  },
                  "block_types": {
                    "environment_variable": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "name": {
                            "type": "string",
                            "required": true
                          },
                          "type": {
                            "type": "string",
                            "optional": true
                          },
                          "value": {
                            "type": "string",
                            "required": true
                          }
                        }
                      }
                    },
                    "registry_credential": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "credential": {
                            "type": "string",
                            "required": true
                          },
                          "credential_provider": {
                            "type": "string",
                            "required": true
                          }
                        }
                      },
                      "max_items": 1
                    }
                  }
                },
                "min_items": 1,
                "max_items": 1
              },
              "logs_config": {
                "nesting_mode": "list",
                "block": {
                  "block_types": {
                    "cloudwatch_logs": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "group_name": {
                            "type": "string",
                            "optional": true
                          },
                          "status": {
                            "type": "string",
                            "optional": true
                          },
                          "stream_name": {
                            "type": "string",
                            "optional": true
                          }
                        }
                      },
                      "max_items": 1
                    },
                    "s3_logs": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "encryption_disabled": {
                            "type": "bool",
                            "optional": true
                          },
                          "location": {
                            "type": "string",
                            "optional": true
                          },
                          "status": {
                            "type": "string",
                            "optional": true
                          }
                        }
                      },
                      "max_items": 1
                    }
                  }
                },
                "max_items": 1
              },
              "secondary_artifacts": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "artifact_identifier": {
                      "type": "string",
                      "required": true
                    },
                    "encryption_disabled": {
                      "type": "bool",
                      "optional": true
                    },
                    "location": {
                      "type": "string",
                      "optional": true
                    },
                    "name": {
                      "type": "string",
                      "optional": true
                    },
                    "namespace_type": {
                      "type": "string",
                      "optional": true
                    },
                    "override_artifact_name": {
                      "type": "bool",
                      "optional": true
                    },
                    "packaging": {
                      "type": "string",
                      "optional": true
                    },
                    "path": {
                      "type": "string",
                      "optional": true
                    },
                    "type": {
                      "type": "string",
                      "required": true
                    }
                  }
                }
              },
              "secondary_sources": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "buildspec": {
                      "type": "string",
                      "optional": true
                    },
                    "git_clone_depth": {
                      "type": "number",
                      "optional": true
                    },
                    "insecure_ssl": {
                      "type": "bool",
                      "optional": true
                    },
                    "location": {
                      "type": "string",
                      "optional": true
                    },
                    "report_build_status": {
                      "type": "bool",
                      "optional": true
                    },
                    "source_identifier": {
                      "type": "string",
                      "required": true
                    },
                    "type": {
                      "type": "string",
                      "required": true
                    }
                  },
                  "block_types": {
                    "auth": {
                      "nesting_mode": "set",
                      "block": {
                        "attributes": {
                          "resource": {
                            "type": "string",
                            "optional": true,
                            "sensitive": true
                          },
                          "type": {
                            "type": "string",
                            "required": true
                          }
                        }
                      }
                    },
                    "git_submodules_config": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "fetch_submodules": {
                            "type": "bool",
                            "required": true
                          }
                        }
                      },
                      "max_items": 1
                    }
                  }
                }
              },
              "source": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "buildspec": {
                      "type": "string",
                      "optional": true
                    },
                    "git_clone_depth": {
                      "type": "number",
                      "optional": true
                    },
                    "insecure_ssl": {
                      "type": "bool",
                      "optional": true
                    },
                    "location": {
                      "type": "string",
                      "optional": true
                    },
                    "report_build_status": {
                      "type": "bool",
                      "optional": true
                    },
                    "type": {
                      "type": "string",
                      "required": true
                    }
                  },
                  "block_types": {
                    "auth": {
                      "nesting_mode": "set",
                      "block": {
                        "attributes": {
                          "resource": {
                            "type": "string",
                            "optional": true,
                            "sensitive": true
                          },
                          "type": {
                            "type": "string",
                            "required": true
                          }
                        }
                      }
                    },
                    "git_submodules_config": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "fetch_submodules": {
                            "type": "bool",
                            "required": true
                          }
                        }
                      },
                      "max_items": 1
                    }
                  }
                },
                "min_items": 1,
                "max_items": 1
              },
              "vpc_config": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "security_group_ids": {
                      "type": [
                        "set",
                        "string"
                      ],
                      "required": true
                    },
                    "subnets": {
                      "type": [
                        "set",
                        "string"
                      ],
                      "required": true
                    },
                    "vpc_id": {
                      "type": "string",
                      "required": true
                    }
                  }
                },
                "max_items": 1
              }
            }
          }
        },
        "aws_codebuild_source_credential": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "auth_type": {
                "type": "string",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "server_type": {
                "type": "string",
                "required": true
              },
              "token": {
                "type": "string",
                "required": true,
                "sensitive": true
              },
              "user_name": {
                "type": "string",
                "optional": true
              }
            }
          }
        },
        "aws_codebuild_webhook": {
          "version": 0,
          "block": {
            "attributes": {
              "branch_filter": {
                "type": "string",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "payload_url": {
                "type": "string",
                "computed": true
              },
              "project_name": {
                "type": "string",
                "required": true
              },
              "secret": {
                "type": "string",
                "computed": true,
                "sensitive": true
              },
              "url": {
                "type": "string",
                "computed": true
              }
            },
            "block_types": {
              "filter_group": {
                "nesting_mode": "set",
                "block": {
                  "block_types": {
                    "filter": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "exclude_matched_pattern": {
                            "type": "bool",
                            "optional": true
                          },
                          "pattern": {
                            "type": "string",
                            "required": true
                          },
                          "type": {
                            "type": "string",
                            "required": true
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "aws_codecommit_repository": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "clone_url_http": {
                "type": "string",
                "computed": true
              },
              "clone_url_ssh": {
                "type": "string",
                "computed": true
              },
              "default_branch": {
                "type": "string",
                "optional": true
              },
              "description": {
                "type": "string",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "repository_id": {
                "type": "string",
                "computed": true
              },
              "repository_name": {
                "type": "string",
                "required": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              }
            }
          }
        },
        "aws_codecommit_trigger": {
          "version": 0,
          "block": {
            "attributes": {
              "configuration_id": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "repository_name": {
                "type": "string",
                "required": true
              }
            },
            "block_types": {
              "trigger": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "branches": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "optional": true
                    },
                    "custom_data": {
                      "type": "string",
                      "optional": true
                    },
                    "destination_arn": {
                      "type": "string",
                      "required": true
                    },
                    "events": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "required": true
                    },
                    "name": {
                      "type": "string",
                      "required": true
                    }
                  }
                },
                "min_items": 1,
                "max_items": 10
              }
            }
          }
        },
        "aws_codedeploy_app": {
          "version": 0,
          "block": {
            "attributes": {
              "compute_platform": {
                "type": "string",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "unique_id": {
                "type": "string",
                "optional": true,
                "computed": true
              }
            }
          }
        },
        "aws_codedeploy_deployment_config": {
          "version": 0,
          "block": {
            "attributes": {
              "compute_platform": {
                "type": "string",
                "optional": true
              },
              "deployment_config_id": {
                "type": "string",
                "computed": true
              },
              "deployment_config_name": {
                "type": "string",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              }
            },
            "block_types": {
              "minimum_healthy_hosts": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "type": {
                      "type": "string",
                      "optional": true
                    },
                    "value": {
                      "type": "number",
                      "optional": true
                    }
                  }
                },
                "max_items": 1
              },
              "traffic_routing_config": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "type": {
                      "type": "string",
                      "optional": true
                    }
                  },
                  "block_types": {
                    "time_based_canary": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "interval": {
                            "type": "number",
                            "optional": true
                          },
                          "percentage": {
                            "type": "number",
                            "optional": true
                          }
                        }
                      },
                      "max_items": 1
                    },
                    "time_based_linear": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "interval": {
                            "type": "number",
                            "optional": true
                          },
                          "percentage": {
                            "type": "number",
                            "optional": true
                          }
                        }
                      },
                      "max_items": 1
                    }
                  }
                },
                "max_items": 1
              }
            }
          }
        },
        "aws_codedeploy_deployment_group": {
          "version": 0,
          "block": {
            "attributes": {
              "app_name": {
                "type": "string",
                "required": true
              },
              "autoscaling_groups": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true
              },
              "deployment_config_name": {
                "type": "string",
                "optional": true
              },
              "deployment_group_name": {
                "type": "string",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "service_role_arn": {
                "type": "string",
                "required": true
              }
            },
            "block_types": {
              "alarm_configuration": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "alarms": {
                      "type": [
                        "set",
                        "string"
                      ],
                      "optional": true
                    },
                    "enabled": {
                      "type": "bool",
                      "optional": true
                    },
                    "ignore_poll_alarm_failure": {
                      "type": "bool",
                      "optional": true
                    }
                  }
                },
                "max_items": 1
              },
              "auto_rollback_configuration": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "enabled": {
                      "type": "bool",
                      "optional": true
                    },
                    "events": {
                      "type": [
                        "set",
                        "string"
                      ],
                      "optional": true
                    }
                  }
                },
                "max_items": 1
              },
              "blue_green_deployment_config": {
                "nesting_mode": "list",
                "block": {
                  "block_types": {
                    "deployment_ready_option": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "action_on_timeout": {
                            "type": "string",
                            "optional": true
                          },
                          "wait_time_in_minutes": {
                            "type": "number",
                            "optional": true
                          }
                        }
                      },
                      "max_items": 1
                    },
                    "green_fleet_provisioning_option": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "action": {
                            "type": "string",
                            "optional": true
                          }
                        }
                      },
                      "max_items": 1
                    },
                    "terminate_blue_instances_on_deployment_success": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "action": {
                            "type": "string",
                            "optional": true
                          },
                          "termination_wait_time_in_minutes": {
                            "type": "number",
                            "optional": true
                          }
                        }
                      },
                      "max_items": 1
                    }
                  }
                },
                "max_items": 1
              },
              "deployment_style": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "deployment_option": {
                      "type": "string",
                      "optional": true
                    },
                    "deployment_type": {
                      "type": "string",
                      "optional": true
                    }
                  }
                },
                "max_items": 1
              },
              "ec2_tag_filter": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "key": {
                      "type": "string",
                      "optional": true
                    },
                    "type": {
                      "type": "string",
                      "optional": true
                    },
                    "value": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              },
              "ec2_tag_set": {
                "nesting_mode": "set",
                "block": {
                  "block_types": {
                    "ec2_tag_filter": {
                      "nesting_mode": "set",
                      "block": {
                        "attributes": {
                          "key": {
                            "type": "string",
                            "optional": true
                          },
                          "type": {
                            "type": "string",
                            "optional": true
                          },
                          "value": {
                            "type": "string",
                            "optional": true
                          }
                        }
                      }
                    }
                  }
                }
              },
              "ecs_service": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "cluster_name": {
                      "type": "string",
                      "required": true
                    },
                    "service_name": {
                      "type": "string",
                      "required": true
                    }
                  }
                },
                "max_items": 1
              },
              "load_balancer_info": {
                "nesting_mode": "list",
                "block": {
                  "block_types": {
                    "elb_info": {
                      "nesting_mode": "set",
                      "block": {
                        "attributes": {
                          "name": {
                            "type": "string",
                            "optional": true
                          }
                        }
                      }
                    },
                    "target_group_info": {
                      "nesting_mode": "set",
                      "block": {
                        "attributes": {
                          "name": {
                            "type": "string",
                            "optional": true
                          }
                        }
                      }
                    },
                    "target_group_pair_info": {
                      "nesting_mode": "list",
                      "block": {
                        "block_types": {
                          "prod_traffic_route": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "listener_arns": {
                                  "type": [
                                    "set",
                                    "string"
                                  ],
                                  "required": true
                                }
                              }
                            },
                            "min_items": 1,
                            "max_items": 1
                          },
                          "target_group": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "name": {
                                  "type": "string",
                                  "required": true
                                }
                              }
                            },
                            "min_items": 1,
                            "max_items": 2
                          },
                          "test_traffic_route": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "listener_arns": {
                                  "type": [
                                    "set",
                                    "string"
                                  ],
                                  "required": true
                                }
                              }
                            },
                            "max_items": 1
                          }
                        }
                      },
                      "max_items": 1
                    }
                  }
                },
                "max_items": 1
              },
              "on_premises_instance_tag_filter": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "key": {
                      "type": "string",
                      "optional": true
                    },
                    "type": {
                      "type": "string",
                      "optional": true
                    },
                    "value": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              },
              "trigger_configuration": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "trigger_events": {
                      "type": [
                        "set",
                        "string"
                      ],
                      "required": true
                    },
                    "trigger_name": {
                      "type": "string",
                      "required": true
                    },
                    "trigger_target_arn": {
                      "type": "string",
                      "required": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_codepipeline": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "role_arn": {
                "type": "string",
                "required": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              }
            },
            "block_types": {
              "artifact_store": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "location": {
                      "type": "string",
                      "required": true
                    },
                    "type": {
                      "type": "string",
                      "required": true
                    }
                  },
                  "block_types": {
                    "encryption_key": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "id": {
                            "type": "string",
                            "required": true
                          },
                          "type": {
                            "type": "string",
                            "required": true
                          }
                        }
                      },
                      "max_items": 1
                    }
                  }
                },
                "min_items": 1,
                "max_items": 1
              },
              "stage": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "name": {
                      "type": "string",
                      "required": true
                    }
                  },
                  "block_types": {
                    "action": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "category": {
                            "type": "string",
                            "required": true
                          },
                          "configuration": {
                            "type": [
                              "map",
                              "string"
                            ],
                            "optional": true
                          },
                          "input_artifacts": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "optional": true
                          },
                          "name": {
                            "type": "string",
                            "required": true
                          },
                          "output_artifacts": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "optional": true
                          },
                          "owner": {
                            "type": "string",
                            "required": true
                          },
                          "provider": {
                            "type": "string",
                            "required": true
                          },
                          "role_arn": {
                            "type": "string",
                            "optional": true
                          },
                          "run_order": {
                            "type": "number",
                            "optional": true,
                            "computed": true
                          },
                          "version": {
                            "type": "string",
                            "required": true
                          }
                        }
                      },
                      "min_items": 1
                    }
                  }
                },
                "min_items": 2
              }
            }
          }
        },
        "aws_codepipeline_webhook": {
          "version": 0,
          "block": {
            "attributes": {
              "authentication": {
                "type": "string",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              },
              "target_action": {
                "type": "string",
                "required": true
              },
              "target_pipeline": {
                "type": "string",
                "required": true
              },
              "url": {
                "type": "string",
                "computed": true
              }
            },
            "block_types": {
              "authentication_configuration": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "allowed_ip_range": {
                      "type": "string",
                      "optional": true
                    },
                    "secret_token": {
                      "type": "string",
                      "optional": true,
                      "sensitive": true
                    }
                  }
                },
                "max_items": 1
              },
              "filter": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "json_path": {
                      "type": "string",
                      "required": true
                    },
                    "match_equals": {
                      "type": "string",
                      "required": true
                    }
                  }
                },
                "min_items": 1
              }
            }
          }
        },
        "aws_codestarnotifications_notification_rule": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "detail_type": {
                "type": "string",
                "required": true
              },
              "event_type_ids": {
                "type": [
                  "set",
                  "string"
                ],
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "resource": {
                "type": "string",
                "required": true
              },
              "status": {
                "type": "string",
                "optional": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              }
            },
            "block_types": {
              "target": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "address": {
                      "type": "string",
                      "required": true
                    },
                    "status": {
                      "type": "string",
                      "computed": true
                    },
                    "type": {
                      "type": "string",
                      "optional": true
                    }
                  }
                },
                "max_items": 10
              }
            }
          }
        },
        "aws_cognito_identity_pool": {
          "version": 0,
          "block": {
            "attributes": {
              "allow_unauthenticated_identities": {
                "type": "bool",
                "optional": true
              },
              "arn": {
                "type": "string",
                "computed": true
              },
              "developer_provider_name": {
                "type": "string",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "identity_pool_name": {
                "type": "string",
                "required": true
              },
              "openid_connect_provider_arns": {
                "type": [
                  "list",
                  "string"
                ],
                "optional": true
              },
              "saml_provider_arns": {
                "type": [
                  "list",
                  "string"
                ],
                "optional": true
              },
              "supported_login_providers": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              }
            },
            "block_types": {
              "cognito_identity_providers": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "client_id": {
                      "type": "string",
                      "optional": true
                    },
                    "provider_name": {
                      "type": "string",
                      "optional": true
                    },
                    "server_side_token_check": {
                      "type": "bool",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_cognito_identity_pool_roles_attachment": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "identity_pool_id": {
                "type": "string",
                "required": true
              },
              "roles": {
                "type": [
                  "map",
                  "string"
                ],
                "required": true
              }
            },
            "block_types": {
              "role_mapping": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "ambiguous_role_resolution": {
                      "type": "string",
                      "optional": true
                    },
                    "identity_provider": {
                      "type": "string",
                      "required": true
                    },
                    "type": {
                      "type": "string",
                      "required": true
                    }
                  },
                  "block_types": {
                    "mapping_rule": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "claim": {
                            "type": "string",
                            "required": true
                          },
                          "match_type": {
                            "type": "string",
                            "required": true
                          },
                          "role_arn": {
                            "type": "string",
                            "required": true
                          },
                          "value": {
                            "type": "string",
                            "required": true
                          }
                        }
                      },
                      "max_items": 25
                    }
                  }
                }
              }
            }
          }
        },
        "aws_cognito_identity_provider": {
          "version": 0,
          "block": {
            "attributes": {
              "attribute_mapping": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "idp_identifiers": {
                "type": [
                  "list",
                  "string"
                ],
                "optional": true
              },
              "provider_details": {
                "type": [
                  "map",
                  "string"
                ],
                "required": true
              },
              "provider_name": {
                "type": "string",
                "required": true
              },
              "provider_type": {
                "type": "string",
                "required": true
              },
              "user_pool_id": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "aws_cognito_resource_server": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "identifier": {
                "type": "string",
                "required": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "scope_identifiers": {
                "type": [
                  "list",
                  "string"
                ],
                "computed": true
              },
              "user_pool_id": {
                "type": "string",
                "required": true
              }
            },
            "block_types": {
              "scope": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "scope_description": {
                      "type": "string",
                      "required": true
                    },
                    "scope_name": {
                      "type": "string",
                      "required": true
                    }
                  }
                },
                "max_items": 100
              }
            }
          }
        },
        "aws_cognito_user_group": {
          "version": 0,
          "block": {
            "attributes": {
              "description": {
                "type": "string",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "precedence": {
                "type": "number",
                "optional": true
              },
              "role_arn": {
                "type": "string",
                "optional": true
              },
              "user_pool_id": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "aws_cognito_user_pool": {
          "version": 0,
          "block": {
            "attributes": {
              "alias_attributes": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true
              },
              "arn": {
                "type": "string",
                "computed": true
              },
              "auto_verified_attributes": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true
              },
              "creation_date": {
                "type": "string",
                "computed": true
              },
              "email_verification_message": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "email_verification_subject": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "endpoint": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "last_modified_date": {
                "type": "string",
                "computed": true
              },
              "mfa_configuration": {
                "type": "string",
                "optional": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "sms_authentication_message": {
                "type": "string",
                "optional": true
              },
              "sms_verification_message": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              },
              "username_attributes": {
                "type": [
                  "list",
                  "string"
                ],
                "optional": true
              }
            },
            "block_types": {
              "admin_create_user_config": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "allow_admin_create_user_only": {
                      "type": "bool",
                      "optional": true
                    },
                    "unused_account_validity_days": {
                      "type": "number",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "block_types": {
                    "invite_message_template": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "email_message": {
                            "type": "string",
                            "optional": true
                          },
                          "email_subject": {
                            "type": "string",
                            "optional": true
                          },
                          "sms_message": {
                            "type": "string",
                            "optional": true
                          }
                        }
                      },
                      "max_items": 1
                    }
                  }
                },
                "max_items": 1
              },
              "device_configuration": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "challenge_required_on_new_device": {
                      "type": "bool",
                      "optional": true
                    },
                    "device_only_remembered_on_user_prompt": {
                      "type": "bool",
                      "optional": true
                    }
                  }
                },
                "max_items": 1
              },
              "email_configuration": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "email_sending_account": {
                      "type": "string",
                      "optional": true
                    },
                    "reply_to_email_address": {
                      "type": "string",
                      "optional": true
                    },
                    "source_arn": {
                      "type": "string",
                      "optional": true
                    }
                  }
                },
                "max_items": 1
              },
              "lambda_config": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "create_auth_challenge": {
                      "type": "string",
                      "optional": true
                    },
                    "custom_message": {
                      "type": "string",
                      "optional": true
                    },
                    "define_auth_challenge": {
                      "type": "string",
                      "optional": true
                    },
                    "post_authentication": {
                      "type": "string",
                      "optional": true
                    },
                    "post_confirmation": {
                      "type": "string",
                      "optional": true
                    },
                    "pre_authentication": {
                      "type": "string",
                      "optional": true
                    },
                    "pre_sign_up": {
                      "type": "string",
                      "optional": true
                    },
                    "pre_token_generation": {
                      "type": "string",
                      "optional": true
                    },
                    "user_migration": {
                      "type": "string",
                      "optional": true
                    },
                    "verify_auth_challenge_response": {
                      "type": "string",
                      "optional": true
                    }
                  }
                },
                "max_items": 1
              },
              "password_policy": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "minimum_length": {
                      "type": "number",
                      "optional": true
                    },
                    "require_lowercase": {
                      "type": "bool",
                      "optional": true
                    },
                    "require_numbers": {
                      "type": "bool",
                      "optional": true
                    },
                    "require_symbols": {
                      "type": "bool",
                      "optional": true
                    },
                    "require_uppercase": {
                      "type": "bool",
                      "optional": true
                    },
                    "temporary_password_validity_days": {
                      "type": "number",
                      "optional": true
                    }
                  }
                },
                "max_items": 1
              },
              "schema": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "attribute_data_type": {
                      "type": "string",
                      "required": true
                    },
                    "developer_only_attribute": {
                      "type": "bool",
                      "optional": true
                    },
                    "mutable": {
                      "type": "bool",
                      "optional": true
                    },
                    "name": {
                      "type": "string",
                      "required": true
                    },
                    "required": {
                      "type": "bool",
                      "optional": true
                    }
                  },
                  "block_types": {
                    "number_attribute_constraints": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "max_value": {
                            "type": "string",
                            "optional": true
                          },
                          "min_value": {
                            "type": "string",
                            "optional": true
                          }
                        }
                      },
                      "max_items": 1
                    },
                    "string_attribute_constraints": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "max_length": {
                            "type": "string",
                            "optional": true
                          },
                          "min_length": {
                            "type": "string",
                            "optional": true
                          }
                        }
                      },
                      "max_items": 1
                    }
                  }
                },
                "max_items": 50
              },
              "sms_configuration": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "external_id": {
                      "type": "string",
                      "required": true
                    },
                    "sns_caller_arn": {
                      "type": "string",
                      "required": true
                    }
                  }
                },
                "max_items": 1
              },
              "user_pool_add_ons": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "advanced_security_mode": {
                      "type": "string",
                      "required": true
                    }
                  }
                },
                "max_items": 1
              },
              "verification_message_template": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "default_email_option": {
                      "type": "string",
                      "optional": true
                    },
                    "email_message": {
                      "type": "string",
                      "optional": true,
                      "computed": true
                    },
                    "email_message_by_link": {
                      "type": "string",
                      "optional": true,
                      "computed": true
                    },
                    "email_subject": {
                      "type": "string",
                      "optional": true,
                      "computed": true
                    },
                    "email_subject_by_link": {
                      "type": "string",
                      "optional": true,
                      "computed": true
                    },
                    "sms_message": {
                      "type": "string",
                      "optional": true,
                      "computed": true
                    }
                  }
                },
                "max_items": 1
              }
            }
          }
        },
        "aws_cognito_user_pool_client": {
          "version": 0,
          "block": {
            "attributes": {
              "allowed_oauth_flows": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true
              },
              "allowed_oauth_flows_user_pool_client": {
                "type": "bool",
                "optional": true
              },
              "allowed_oauth_scopes": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true
              },
              "callback_urls": {
                "type": [
                  "list",
                  "string"
                ],
                "optional": true
              },
              "client_secret": {
                "type": "string",
                "computed": true
              },
              "default_redirect_uri": {
                "type": "string",
                "optional": true
              },
              "explicit_auth_flows": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true
              },
              "generate_secret": {
                "type": "bool",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "logout_urls": {
                "type": [
                  "list",
                  "string"
                ],
                "optional": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "read_attributes": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true
              },
              "refresh_token_validity": {
                "type": "number",
                "optional": true
              },
              "supported_identity_providers": {
                "type": [
                  "list",
                  "string"
                ],
                "optional": true
              },
              "user_pool_id": {
                "type": "string",
                "required": true
              },
              "write_attributes": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true
              }
            }
          }
        },
        "aws_cognito_user_pool_domain": {
          "version": 0,
          "block": {
            "attributes": {
              "aws_account_id": {
                "type": "string",
                "computed": true
              },
              "certificate_arn": {
                "type": "string",
                "optional": true
              },
              "cloudfront_distribution_arn": {
                "type": "string",
                "computed": true
              },
              "domain": {
                "type": "string",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "s3_bucket": {
                "type": "string",
                "computed": true
              },
              "user_pool_id": {
                "type": "string",
                "required": true
              },
              "version": {
                "type": "string",
                "computed": true
              }
            }
          }
        },
        "aws_config_aggregate_authorization": {
          "version": 0,
          "block": {
            "attributes": {
              "account_id": {
                "type": "string",
                "required": true
              },
              "arn": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "region": {
                "type": "string",
                "required": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              }
            }
          }
        },
        "aws_config_config_rule": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "description": {
                "type": "string",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "input_parameters": {
                "type": "string",
                "optional": true
              },
              "maximum_execution_frequency": {
                "type": "string",
                "optional": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "rule_id": {
                "type": "string",
                "computed": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              }
            },
            "block_types": {
              "scope": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "compliance_resource_id": {
                      "type": "string",
                      "optional": true
                    },
                    "compliance_resource_types": {
                      "type": [
                        "set",
                        "string"
                      ],
                      "optional": true
                    },
                    "tag_key": {
                      "type": "string",
                      "optional": true
                    },
                    "tag_value": {
                      "type": "string",
                      "optional": true
                    }
                  }
                },
                "max_items": 1
              },
              "source": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "owner": {
                      "type": "string",
                      "required": true
                    },
                    "source_identifier": {
                      "type": "string",
                      "required": true
                    }
                  },
                  "block_types": {
                    "source_detail": {
                      "nesting_mode": "set",
                      "block": {
                        "attributes": {
                          "event_source": {
                            "type": "string",
                            "optional": true
                          },
                          "maximum_execution_frequency": {
                            "type": "string",
                            "optional": true
                          },
                          "message_type": {
                            "type": "string",
                            "optional": true
                          }
                        }
                      },
                      "max_items": 25
                    }
                  }
                },
                "min_items": 1,
                "max_items": 1
              }
            }
          }
        },
        "aws_config_configuration_aggregator": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              }
            },
            "block_types": {
              "account_aggregation_source": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "account_ids": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "required": true
                    },
                    "all_regions": {
                      "type": "bool",
                      "optional": true
                    },
                    "regions": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "optional": true
                    }
                  }
                },
                "max_items": 1
              },
              "organization_aggregation_source": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "all_regions": {
                      "type": "bool",
                      "optional": true
                    },
                    "regions": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "optional": true
                    },
                    "role_arn": {
                      "type": "string",
                      "required": true
                    }
                  }
                },
                "max_items": 1
              }
            }
          }
        },
        "aws_config_configuration_recorder": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "optional": true
              },
              "role_arn": {
                "type": "string",
                "required": true
              }
            },
            "block_types": {
              "recording_group": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "all_supported": {
                      "type": "bool",
                      "optional": true
                    },
                    "include_global_resource_types": {
                      "type": "bool",
                      "optional": true
                    },
                    "resource_types": {
                      "type": [
                        "set",
                        "string"
                      ],
                      "optional": true
                    }
                  }
                },
                "max_items": 1
              }
            }
          }
        },
        "aws_config_configuration_recorder_status": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "is_enabled": {
                "type": "bool",
                "required": true
              },
              "name": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "aws_config_delivery_channel": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "optional": true
              },
              "s3_bucket_name": {
                "type": "string",
                "required": true
              },
              "s3_key_prefix": {
                "type": "string",
                "optional": true
              },
              "sns_topic_arn": {
                "type": "string",
                "optional": true
              }
            },
            "block_types": {
              "snapshot_delivery_properties": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "delivery_frequency": {
                      "type": "string",
                      "optional": true
                    }
                  }
                },
                "max_items": 1
              }
            }
          }
        },
        "aws_config_organization_custom_rule": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "description": {
                "type": "string",
                "optional": true
              },
              "excluded_accounts": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "input_parameters": {
                "type": "string",
                "optional": true
              },
              "lambda_function_arn": {
                "type": "string",
                "required": true
              },
              "maximum_execution_frequency": {
                "type": "string",
                "optional": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "resource_id_scope": {
                "type": "string",
                "optional": true
              },
              "resource_types_scope": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true
              },
              "tag_key_scope": {
                "type": "string",
                "optional": true
              },
              "tag_value_scope": {
                "type": "string",
                "optional": true
              },
              "trigger_types": {
                "type": [
                  "set",
                  "string"
                ],
                "required": true
              }
            },
            "block_types": {
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_config_organization_managed_rule": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "description": {
                "type": "string",
                "optional": true
              },
              "excluded_accounts": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "input_parameters": {
                "type": "string",
                "optional": true
              },
              "maximum_execution_frequency": {
                "type": "string",
                "optional": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "resource_id_scope": {
                "type": "string",
                "optional": true
              },
              "resource_types_scope": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true
              },
              "rule_identifier": {
                "type": "string",
                "required": true
              },
              "tag_key_scope": {
                "type": "string",
                "optional": true
              },
              "tag_value_scope": {
                "type": "string",
                "optional": true
              }
            },
            "block_types": {
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_cur_report_definition": {
          "version": 0,
          "block": {
            "attributes": {
              "additional_artifacts": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true
              },
              "additional_schema_elements": {
                "type": [
                  "set",
                  "string"
                ],
                "required": true
              },
              "compression": {
                "type": "string",
                "required": true
              },
              "format": {
                "type": "string",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "report_name": {
                "type": "string",
                "required": true
              },
              "s3_bucket": {
                "type": "string",
                "required": true
              },
              "s3_prefix": {
                "type": "string",
                "optional": true
              },
              "s3_region": {
                "type": "string",
                "required": true
              },
              "time_unit": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "aws_customer_gateway": {
          "version": 0,
          "block": {
            "attributes": {
              "bgp_asn": {
                "type": "number",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "ip_address": {
                "type": "string",
                "required": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              },
              "type": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "aws_datapipeline_pipeline": {
          "version": 0,
          "block": {
            "attributes": {
              "description": {
                "type": "string",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              }
            }
          }
        },
        "aws_datasync_agent": {
          "version": 0,
          "block": {
            "attributes": {
              "activation_key": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "arn": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "ip_address": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "optional": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              }
            },
            "block_types": {
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_datasync_location_efs": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "efs_file_system_arn": {
                "type": "string",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "subdirectory": {
                "type": "string",
                "optional": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              },
              "uri": {
                "type": "string",
                "computed": true
              }
            },
            "block_types": {
              "ec2_config": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "security_group_arns": {
                      "type": [
                        "set",
                        "string"
                      ],
                      "required": true
                    },
                    "subnet_arn": {
                      "type": "string",
                      "required": true
                    }
                  }
                },
                "min_items": 1,
                "max_items": 1
              }
            }
          }
        },
        "aws_datasync_location_nfs": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "server_hostname": {
                "type": "string",
                "required": true
              },
              "subdirectory": {
                "type": "string",
                "required": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              },
              "uri": {
                "type": "string",
                "computed": true
              }
            },
            "block_types": {
              "on_prem_config": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "agent_arns": {
                      "type": [
                        "set",
                        "string"
                      ],
                      "required": true
                    }
                  }
                },
                "min_items": 1,
                "max_items": 1
              }
            }
          }
        },
        "aws_datasync_location_s3": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "s3_bucket_arn": {
                "type": "string",
                "required": true
              },
              "subdirectory": {
                "type": "string",
                "required": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              },
              "uri": {
                "type": "string",
                "computed": true
              }
            },
            "block_types": {
              "s3_config": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "bucket_access_role_arn": {
                      "type": "string",
                      "required": true
                    }
                  }
                },
                "min_items": 1,
                "max_items": 1
              }
            }
          }
        },
        "aws_datasync_location_smb": {
          "version": 0,
          "block": {
            "attributes": {
              "agent_arns": {
                "type": [
                  "set",
                  "string"
                ],
                "required": true
              },
              "arn": {
                "type": "string",
                "computed": true
              },
              "domain": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "password": {
                "type": "string",
                "required": true,
                "sensitive": true
              },
              "server_hostname": {
                "type": "string",
                "required": true
              },
              "subdirectory": {
                "type": "string",
                "required": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              },
              "uri": {
                "type": "string",
                "computed": true
              },
              "user": {
                "type": "string",
                "required": true
              }
            },
            "block_types": {
              "mount_options": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "version": {
                      "type": "string",
                      "optional": true
                    }
                  }
                },
                "max_items": 1
              }
            }
          }
        },
        "aws_datasync_task": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "cloudwatch_log_group_arn": {
                "type": "string",
                "optional": true
              },
              "destination_location_arn": {
                "type": "string",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "optional": true
              },
              "source_location_arn": {
                "type": "string",
                "required": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              }
            },
            "block_types": {
              "options": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "atime": {
                      "type": "string",
                      "optional": true
                    },
                    "bytes_per_second": {
                      "type": "number",
                      "optional": true
                    },
                    "gid": {
                      "type": "string",
                      "optional": true
                    },
                    "mtime": {
                      "type": "string",
                      "optional": true
                    },
                    "posix_permissions": {
                      "type": "string",
                      "optional": true
                    },
                    "preserve_deleted_files": {
                      "type": "string",
                      "optional": true
                    },
                    "preserve_devices": {
                      "type": "string",
                      "optional": true
                    },
                    "uid": {
                      "type": "string",
                      "optional": true
                    },
                    "verify_mode": {
                      "type": "string",
                      "optional": true
                    }
                  }
                },
                "max_items": 1
              },
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_dax_cluster": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "availability_zones": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true
              },
              "cluster_address": {
                "type": "string",
                "computed": true
              },
              "cluster_name": {
                "type": "string",
                "required": true
              },
              "configuration_endpoint": {
                "type": "string",
                "computed": true
              },
              "description": {
                "type": "string",
                "optional": true
              },
              "iam_role_arn": {
                "type": "string",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "maintenance_window": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "node_type": {
                "type": "string",
                "required": true
              },
              "nodes": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "address": "string",
                      "availability_zone": "string",
                      "id": "string",
                      "port": "number"
                    }
                  ]
                ],
                "computed": true
              },
              "notification_topic_arn": {
                "type": "string",
                "optional": true
              },
              "parameter_group_name": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "port": {
                "type": "number",
                "computed": true
              },
              "replication_factor": {
                "type": "number",
                "required": true
              },
              "security_group_ids": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true,
                "computed": true
              },
              "subnet_group_name": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              }
            },
            "block_types": {
              "server_side_encryption": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "enabled": {
                      "type": "bool",
                      "optional": true
                    }
                  }
                },
                "max_items": 1
              },
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_dax_parameter_group": {
          "version": 0,
          "block": {
            "attributes": {
              "description": {
                "type": "string",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              }
            },
            "block_types": {
              "parameters": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "name": {
                      "type": "string",
                      "required": true
                    },
                    "value": {
                      "type": "string",
                      "required": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_dax_subnet_group": {
          "version": 0,
          "block": {
            "attributes": {
              "description": {
                "type": "string",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "subnet_ids": {
                "type": [
                  "set",
                  "string"
                ],
                "required": true
              },
              "vpc_id": {
                "type": "string",
                "computed": true
              }
            }
          }
        },
        "aws_db_cluster_snapshot": {
          "version": 0,
          "block": {
            "attributes": {
              "allocated_storage": {
                "type": "number",
                "computed": true
              },
              "availability_zones": {
                "type": [
                  "list",
                  "string"
                ],
                "computed": true
              },
              "db_cluster_identifier": {
                "type": "string",
                "required": true
              },
              "db_cluster_snapshot_arn": {
                "type": "string",
                "computed": true
              },
              "db_cluster_snapshot_identifier": {
                "type": "string",
                "required": true
              },
              "engine": {
                "type": "string",
                "computed": true
              },
              "engine_version": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "kms_key_id": {
                "type": "string",
                "computed": true
              },
              "license_model": {
                "type": "string",
                "computed": true
              },
              "port": {
                "type": "number",
                "computed": true
              },
              "snapshot_type": {
                "type": "string",
                "computed": true
              },
              "source_db_cluster_snapshot_arn": {
                "type": "string",
                "computed": true
              },
              "status": {
                "type": "string",
                "computed": true
              },
              "storage_encrypted": {
                "type": "bool",
                "computed": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              },
              "vpc_id": {
                "type": "string",
                "computed": true
              }
            },
            "block_types": {
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_db_event_subscription": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "customer_aws_id": {
                "type": "string",
                "computed": true
              },
              "enabled": {
                "type": "bool",
                "optional": true
              },
              "event_categories": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name_prefix": {
                "type": "string",
                "optional": true
              },
              "sns_topic": {
                "type": "string",
                "required": true
              },
              "source_ids": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true
              },
              "source_type": {
                "type": "string",
                "optional": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              }
            },
            "block_types": {
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_db_instance": {
          "version": 1,
          "block": {
            "attributes": {
              "address": {
                "type": "string",
                "computed": true
              },
              "allocated_storage": {
                "type": "number",
                "optional": true,
                "computed": true
              },
              "allow_major_version_upgrade": {
                "type": "bool",
                "optional": true
              },
              "apply_immediately": {
                "type": "bool",
                "optional": true,
                "computed": true
              },
              "arn": {
                "type": "string",
                "computed": true
              },
              "auto_minor_version_upgrade": {
                "type": "bool",
                "optional": true
              },
              "availability_zone": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "backup_retention_period": {
                "type": "number",
                "optional": true,
                "computed": true
              },
              "backup_window": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "ca_cert_identifier": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "character_set_name": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "copy_tags_to_snapshot": {
                "type": "bool",
                "optional": true
              },
              "db_subnet_group_name": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "delete_automated_backups": {
                "type": "bool",
                "optional": true
              },
              "deletion_protection": {
                "type": "bool",
                "optional": true
              },
              "domain": {
                "type": "string",
                "optional": true
              },
              "domain_iam_role_name": {
                "type": "string",
                "optional": true
              },
              "enabled_cloudwatch_logs_exports": {
                "type": [
                  "list",
                  "string"
                ],
                "optional": true
              },
              "endpoint": {
                "type": "string",
                "computed": true
              },
              "engine": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "engine_version": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "final_snapshot_identifier": {
                "type": "string",
                "optional": true
              },
              "hosted_zone_id": {
                "type": "string",
                "computed": true
              },
              "iam_database_authentication_enabled": {
                "type": "bool",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "identifier": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "identifier_prefix": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "instance_class": {
                "type": "string",
                "required": true
              },
              "iops": {
                "type": "number",
                "optional": true
              },
              "kms_key_id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "license_model": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "maintenance_window": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "max_allocated_storage": {
                "type": "number",
                "optional": true
              },
              "monitoring_interval": {
                "type": "number",
                "optional": true
              },
              "monitoring_role_arn": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "multi_az": {
                "type": "bool",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "option_group_name": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "parameter_group_name": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "password": {
                "type": "string",
                "optional": true,
                "sensitive": true
              },
              "performance_insights_enabled": {
                "type": "bool",
                "optional": true
              },
              "performance_insights_kms_key_id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "performance_insights_retention_period": {
                "type": "number",
                "optional": true,
                "computed": true
              },
              "port": {
                "type": "number",
                "optional": true,
                "computed": true
              },
              "publicly_accessible": {
                "type": "bool",
                "optional": true
              },
              "replicas": {
                "type": [
                  "list",
                  "string"
                ],
                "computed": true
              },
              "replicate_source_db": {
                "type": "string",
                "optional": true
              },
              "resource_id": {
                "type": "string",
                "computed": true
              },
              "security_group_names": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true
              },
              "skip_final_snapshot": {
                "type": "bool",
                "optional": true
              },
              "snapshot_identifier": {
                "type": "string",
                "optional": true
              },
              "status": {
                "type": "string",
                "computed": true
              },
              "storage_encrypted": {
                "type": "bool",
                "optional": true
              },
              "storage_type": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              },
              "timezone": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "username": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "vpc_security_group_ids": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true,
                "computed": true
              }
            },
            "block_types": {
              "s3_import": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "bucket_name": {
                      "type": "string",
                      "required": true
                    },
                    "bucket_prefix": {
                      "type": "string",
                      "optional": true
                    },
                    "ingestion_role": {
                      "type": "string",
                      "required": true
                    },
                    "source_engine": {
                      "type": "string",
                      "required": true
                    },
                    "source_engine_version": {
                      "type": "string",
                      "required": true
                    }
                  }
                },
                "max_items": 1
              },
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_db_instance_role_association": {
          "version": 0,
          "block": {
            "attributes": {
              "db_instance_identifier": {
                "type": "string",
                "required": true
              },
              "feature_name": {
                "type": "string",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "role_arn": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "aws_db_option_group": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "engine_name": {
                "type": "string",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "major_engine_version": {
                "type": "string",
                "required": true
              },
              "name": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name_prefix": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "option_group_description": {
                "type": "string",
                "optional": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              }
            },
            "block_types": {
              "option": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "db_security_group_memberships": {
                      "type": [
                        "set",
                        "string"
                      ],
                      "optional": true
                    },
                    "option_name": {
                      "type": "string",
                      "required": true
                    },
                    "port": {
                      "type": "number",
                      "optional": true
                    },
                    "version": {
                      "type": "string",
                      "optional": true
                    },
                    "vpc_security_group_memberships": {
                      "type": [
                        "set",
                        "string"
                      ],
                      "optional": true
                    }
                  },
                  "block_types": {
                    "option_settings": {
                      "nesting_mode": "set",
                      "block": {
                        "attributes": {
                          "name": {
                            "type": "string",
                            "required": true
                          },
                          "value": {
                            "type": "string",
                            "required": true
                          }
                        }
                      }
                    }
                  }
                }
              },
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "delete": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_db_parameter_group": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "description": {
                "type": "string",
                "optional": true
              },
              "family": {
                "type": "string",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name_prefix": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              }
            },
            "block_types": {
              "parameter": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "apply_method": {
                      "type": "string",
                      "optional": true
                    },
                    "name": {
                      "type": "string",
                      "required": true
                    },
                    "value": {
                      "type": "string",
                      "required": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_db_security_group": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "description": {
                "type": "string",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              }
            },
            "block_types": {
              "ingress": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "cidr": {
                      "type": "string",
                      "optional": true
                    },
                    "security_group_id": {
                      "type": "string",
                      "optional": true,
                      "computed": true
                    },
                    "security_group_name": {
                      "type": "string",
                      "optional": true,
                      "computed": true
                    },
                    "security_group_owner_id": {
                      "type": "string",
                      "optional": true,
                      "computed": true
                    }
                  }
                },
                "min_items": 1
              }
            }
          }
        },
        "aws_db_snapshot": {
          "version": 0,
          "block": {
            "attributes": {
              "allocated_storage": {
                "type": "number",
                "computed": true
              },
              "availability_zone": {
                "type": "string",
                "computed": true
              },
              "db_instance_identifier": {
                "type": "string",
                "required": true
              },
              "db_snapshot_arn": {
                "type": "string",
                "computed": true
              },
              "db_snapshot_identifier": {
                "type": "string",
                "required": true
              },
              "encrypted": {
                "type": "bool",
                "computed": true
              },
              "engine": {
                "type": "string",
                "computed": true
              },
              "engine_version": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "iops": {
                "type": "number",
                "computed": true
              },
              "kms_key_id": {
                "type": "string",
                "computed": true
              },
              "license_model": {
                "type": "string",
                "computed": true
              },
              "option_group_name": {
                "type": "string",
                "computed": true
              },
              "port": {
                "type": "number",
                "computed": true
              },
              "snapshot_type": {
                "type": "string",
                "computed": true
              },
              "source_db_snapshot_identifier": {
                "type": "string",
                "computed": true
              },
              "source_region": {
                "type": "string",
                "computed": true
              },
              "status": {
                "type": "string",
                "computed": true
              },
              "storage_type": {
                "type": "string",
                "computed": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              },
              "vpc_id": {
                "type": "string",
                "computed": true
              }
            },
            "block_types": {
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "read": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_db_subnet_group": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "description": {
                "type": "string",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name_prefix": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "subnet_ids": {
                "type": [
                  "set",
                  "string"
                ],
                "required": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              }
            }
          }
        },
        "aws_default_network_acl": {
          "version": 0,
          "block": {
            "attributes": {
              "default_network_acl_id": {
                "type": "string",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "owner_id": {
                "type": "string",
                "computed": true
              },
              "subnet_ids": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              },
              "vpc_id": {
                "type": "string",
                "computed": true
              }
            },
            "block_types": {
              "egress": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "action": {
                      "type": "string",
                      "required": true
                    },
                    "cidr_block": {
                      "type": "string",
                      "optional": true
                    },
                    "from_port": {
                      "type": "number",
                      "required": true
                    },
                    "icmp_code": {
                      "type": "number",
                      "optional": true
                    },
                    "icmp_type": {
                      "type": "number",
                      "optional": true
                    },
                    "ipv6_cidr_block": {
                      "type": "string",
                      "optional": true
                    },
                    "protocol": {
                      "type": "string",
                      "required": true
                    },
                    "rule_no": {
                      "type": "number",
                      "required": true
                    },
                    "to_port": {
                      "type": "number",
                      "required": true
                    }
                  }
                }
              },
              "ingress": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "action": {
                      "type": "string",
                      "required": true
                    },
                    "cidr_block": {
                      "type": "string",
                      "optional": true
                    },
                    "from_port": {
                      "type": "number",
                      "required": true
                    },
                    "icmp_code": {
                      "type": "number",
                      "optional": true
                    },
                    "icmp_type": {
                      "type": "number",
                      "optional": true
                    },
                    "ipv6_cidr_block": {
                      "type": "string",
                      "optional": true
                    },
                    "protocol": {
                      "type": "string",
                      "required": true
                    },
                    "rule_no": {
                      "type": "number",
                      "required": true
                    },
                    "to_port": {
                      "type": "number",
                      "required": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_default_route_table": {
          "version": 0,
          "block": {
            "attributes": {
              "default_route_table_id": {
                "type": "string",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "owner_id": {
                "type": "string",
                "computed": true
              },
              "propagating_vgws": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true
              },
              "route": {
                "type": [
                  "set",
                  [
                    "object",
                    {
                      "cidr_block": "string",
                      "egress_only_gateway_id": "string",
                      "gateway_id": "string",
                      "instance_id": "string",
                      "ipv6_cidr_block": "string",
                      "nat_gateway_id": "string",
                      "network_interface_id": "string",
                      "transit_gateway_id": "string",
                      "vpc_peering_connection_id": "string"
                    }
                  ]
                ],
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              },
              "vpc_id": {
                "type": "string",
                "computed": true
              }
            }
          }
        },
        "aws_default_security_group": {
          "version": 1,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "description": {
                "type": "string",
                "computed": true
              },
              "egress": {
                "type": [
                  "set",
                  [
                    "object",
                    {
                      "cidr_blocks": [
                        "list",
                        "string"
                      ],
                      "description": "string",
                      "from_port": "number",
                      "ipv6_cidr_blocks": [
                        "list",
                        "string"
                      ],
                      "prefix_list_ids": [
                        "list",
                        "string"
                      ],
                      "protocol": "string",
                      "security_groups": [
                        "set",
                        "string"
                      ],
                      "self": "bool",
                      "to_port": "number"
                    }
                  ]
                ],
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "ingress": {
                "type": [
                  "set",
                  [
                    "object",
                    {
                      "cidr_blocks": [
                        "list",
                        "string"
                      ],
                      "description": "string",
                      "from_port": "number",
                      "ipv6_cidr_blocks": [
                        "list",
                        "string"
                      ],
                      "prefix_list_ids": [
                        "list",
                        "string"
                      ],
                      "protocol": "string",
                      "security_groups": [
                        "set",
                        "string"
                      ],
                      "self": "bool",
                      "to_port": "number"
                    }
                  ]
                ],
                "optional": true
              },
              "name": {
                "type": "string",
                "computed": true
              },
              "owner_id": {
                "type": "string",
                "computed": true
              },
              "revoke_rules_on_delete": {
                "type": "bool",
                "optional": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              },
              "vpc_id": {
                "type": "string",
                "optional": true,
                "computed": true
              }
            },
            "block_types": {
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_default_subnet": {
          "version": 1,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "assign_ipv6_address_on_creation": {
                "type": "bool",
                "computed": true
              },
              "availability_zone": {
                "type": "string",
                "required": true
              },
              "availability_zone_id": {
                "type": "string",
                "computed": true
              },
              "cidr_block": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "ipv6_cidr_block": {
                "type": "string",
                "computed": true
              },
              "ipv6_cidr_block_association_id": {
                "type": "string",
                "computed": true
              },
              "map_public_ip_on_launch": {
                "type": "bool",
                "optional": true,
                "computed": true
              },
              "owner_id": {
                "type": "string",
                "computed": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              },
              "vpc_id": {
                "type": "string",
                "computed": true
              }
            },
            "block_types": {
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_default_vpc": {
          "version": 1,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "assign_generated_ipv6_cidr_block": {
                "type": "bool",
                "computed": true
              },
              "cidr_block": {
                "type": "string",
                "computed": true
              },
              "default_network_acl_id": {
                "type": "string",
                "computed": true
              },
              "default_route_table_id": {
                "type": "string",
                "computed": true
              },
              "default_security_group_id": {
                "type": "string",
                "computed": true
              },
              "dhcp_options_id": {
                "type": "string",
                "computed": true
              },
              "enable_classiclink": {
                "type": "bool",
                "optional": true,
                "computed": true
              },
              "enable_classiclink_dns_support": {
                "type": "bool",
                "optional": true,
                "computed": true
              },
              "enable_dns_hostnames": {
                "type": "bool",
                "optional": true,
                "computed": true
              },
              "enable_dns_support": {
                "type": "bool",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "instance_tenancy": {
                "type": "string",
                "computed": true
              },
              "ipv6_association_id": {
                "type": "string",
                "computed": true
              },
              "ipv6_cidr_block": {
                "type": "string",
                "computed": true
              },
              "main_route_table_id": {
                "type": "string",
                "computed": true
              },
              "owner_id": {
                "type": "string",
                "computed": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              }
            }
          }
        },
        "aws_default_vpc_dhcp_options": {
          "version": 0,
          "block": {
            "attributes": {
              "domain_name": {
                "type": "string",
                "computed": true
              },
              "domain_name_servers": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "netbios_name_servers": {
                "type": [
                  "list",
                  "string"
                ],
                "optional": true
              },
              "netbios_node_type": {
                "type": "string",
                "optional": true
              },
              "ntp_servers": {
                "type": "string",
                "computed": true
              },
              "owner_id": {
                "type": "string",
                "computed": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              }
            }
          }
        },
        "aws_devicefarm_project": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "aws_directory_service_conditional_forwarder": {
          "version": 0,
          "block": {
            "attributes": {
              "directory_id": {
                "type": "string",
                "required": true
              },
              "dns_ips": {
                "type": [
                  "list",
                  "string"
                ],
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "remote_domain_name": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "aws_directory_service_directory": {
          "version": 0,
          "block": {
            "attributes": {
              "access_url": {
                "type": "string",
                "computed": true
              },
              "alias": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "description": {
                "type": "string",
                "optional": true
              },
              "dns_ip_addresses": {
                "type": [
                  "set",
                  "string"
                ],
                "computed": true
              },
              "edition": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "enable_sso": {
                "type": "bool",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "password": {
                "type": "string",
                "required": true,
                "sensitive": true
              },
              "security_group_id": {
                "type": "string",
                "computed": true
              },
              "short_name": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "size": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              },
              "type": {
                "type": "string",
                "optional": true
              }
            },
            "block_types": {
              "connect_settings": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "customer_dns_ips": {
                      "type": [
                        "set",
                        "string"
                      ],
                      "required": true
                    },
                    "customer_username": {
                      "type": "string",
                      "required": true
                    },
                    "subnet_ids": {
                      "type": [
                        "set",
                        "string"
                      ],
                      "required": true
                    },
                    "vpc_id": {
                      "type": "string",
                      "required": true
                    }
                  }
                },
                "max_items": 1
              },
              "vpc_settings": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "subnet_ids": {
                      "type": [
                        "set",
                        "string"
                      ],
                      "required": true
                    },
                    "vpc_id": {
                      "type": "string",
                      "required": true
                    }
                  }
                },
                "max_items": 1
              }
            }
          }
        },
        "aws_directory_service_log_subscription": {
          "version": 0,
          "block": {
            "attributes": {
              "directory_id": {
                "type": "string",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "log_group_name": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "aws_dlm_lifecycle_policy": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "description": {
                "type": "string",
                "required": true
              },
              "execution_role_arn": {
                "type": "string",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "state": {
                "type": "string",
                "optional": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              }
            },
            "block_types": {
              "policy_details": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "resource_types": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "required": true
                    },
                    "target_tags": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "required": true
                    }
                  },
                  "block_types": {
                    "schedule": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "copy_tags": {
                            "type": "bool",
                            "optional": true,
                            "computed": true
                          },
                          "name": {
                            "type": "string",
                            "required": true
                          },
                          "tags_to_add": {
                            "type": [
                              "map",
                              "string"
                            ],
                            "optional": true
                          }
                        },
                        "block_types": {
                          "create_rule": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "interval": {
                                  "type": "number",
                                  "required": true
                                },
                                "interval_unit": {
                                  "type": "string",
                                  "optional": true
                                },
                                "times": {
                                  "type": [
                                    "list",
                                    "string"
                                  ],
                                  "optional": true,
                                  "computed": true
                                }
                              }
                            },
                            "min_items": 1,
                            "max_items": 1
                          },
                          "retain_rule": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "count": {
                                  "type": "number",
                                  "required": true
                                }
                              }
                            },
                            "min_items": 1,
                            "max_items": 1
                          }
                        }
                      },
                      "min_items": 1
                    }
                  }
                },
                "min_items": 1,
                "max_items": 1
              }
            }
          }
        },
        "aws_dms_certificate": {
          "version": 0,
          "block": {
            "attributes": {
              "certificate_arn": {
                "type": "string",
                "computed": true
              },
              "certificate_id": {
                "type": "string",
                "required": true
              },
              "certificate_pem": {
                "type": "string",
                "optional": true,
                "sensitive": true
              },
              "certificate_wallet": {
                "type": "string",
                "optional": true,
                "sensitive": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              }
            }
          }
        },
        "aws_dms_endpoint": {
          "version": 0,
          "block": {
            "attributes": {
              "certificate_arn": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "database_name": {
                "type": "string",
                "optional": true
              },
              "endpoint_arn": {
                "type": "string",
                "computed": true
              },
              "endpoint_id": {
                "type": "string",
                "required": true
              },
              "endpoint_type": {
                "type": "string",
                "required": true
              },
              "engine_name": {
                "type": "string",
                "required": true
              },
              "extra_connection_attributes": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "kms_key_arn": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "password": {
                "type": "string",
                "optional": true,
                "sensitive": true
              },
              "port": {
                "type": "number",
                "optional": true
              },
              "server_name": {
                "type": "string",
                "optional": true
              },
              "service_access_role": {
                "type": "string",
                "optional": true
              },
              "ssl_mode": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              },
              "username": {
                "type": "string",
                "optional": true
              }
            },
            "block_types": {
              "mongodb_settings": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "auth_mechanism": {
                      "type": "string",
                      "optional": true
                    },
                    "auth_source": {
                      "type": "string",
                      "optional": true
                    },
                    "auth_type": {
                      "type": "string",
                      "optional": true
                    },
                    "docs_to_investigate": {
                      "type": "string",
                      "optional": true
                    },
                    "extract_doc_id": {
                      "type": "string",
                      "optional": true
                    },
                    "nesting_level": {
                      "type": "string",
                      "optional": true
                    }
                  }
                },
                "max_items": 1
              },
              "s3_settings": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "bucket_folder": {
                      "type": "string",
                      "optional": true
                    },
                    "bucket_name": {
                      "type": "string",
                      "optional": true
                    },
                    "compression_type": {
                      "type": "string",
                      "optional": true
                    },
                    "csv_delimiter": {
                      "type": "string",
                      "optional": true
                    },
                    "csv_row_delimiter": {
                      "type": "string",
                      "optional": true
                    },
                    "external_table_definition": {
                      "type": "string",
                      "optional": true
                    },
                    "service_access_role_arn": {
                      "type": "string",
                      "optional": true
                    }
                  }
                },
                "max_items": 1
              }
            }
          }
        },
        "aws_dms_replication_instance": {
          "version": 0,
          "block": {
            "attributes": {
              "allocated_storage": {
                "type": "number",
                "optional": true,
                "computed": true
              },
              "apply_immediately": {
                "type": "bool",
                "optional": true
              },
              "auto_minor_version_upgrade": {
                "type": "bool",
                "optional": true,
                "computed": true
              },
              "availability_zone": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "engine_version": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "kms_key_arn": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "multi_az": {
                "type": "bool",
                "optional": true,
                "computed": true
              },
              "preferred_maintenance_window": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "publicly_accessible": {
                "type": "bool",
                "optional": true,
                "computed": true
              },
              "replication_instance_arn": {
                "type": "string",
                "computed": true
              },
              "replication_instance_class": {
                "type": "string",
                "required": true
              },
              "replication_instance_id": {
                "type": "string",
                "required": true
              },
              "replication_instance_private_ips": {
                "type": [
                  "list",
                  "string"
                ],
                "computed": true
              },
              "replication_instance_public_ips": {
                "type": [
                  "list",
                  "string"
                ],
                "computed": true
              },
              "replication_subnet_group_id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              },
              "vpc_security_group_ids": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true,
                "computed": true
              }
            },
            "block_types": {
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_dms_replication_subnet_group": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "replication_subnet_group_arn": {
                "type": "string",
                "computed": true
              },
              "replication_subnet_group_description": {
                "type": "string",
                "required": true
              },
              "replication_subnet_group_id": {
                "type": "string",
                "required": true
              },
              "subnet_ids": {
                "type": [
                  "set",
                  "string"
                ],
                "required": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              },
              "vpc_id": {
                "type": "string",
                "computed": true
              }
            }
          }
        },
        "aws_dms_replication_task": {
          "version": 0,
          "block": {
            "attributes": {
              "cdc_start_time": {
                "type": "string",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "migration_type": {
                "type": "string",
                "required": true
              },
              "replication_instance_arn": {
                "type": "string",
                "required": true
              },
              "replication_task_arn": {
                "type": "string",
                "computed": true
              },
              "replication_task_id": {
                "type": "string",
                "required": true
              },
              "replication_task_settings": {
                "type": "string",
                "optional": true
              },
              "source_endpoint_arn": {
                "type": "string",
                "required": true
              },
              "table_mappings": {
                "type": "string",
                "required": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              },
              "target_endpoint_arn": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "aws_docdb_cluster": {
          "version": 0,
          "block": {
            "attributes": {
              "apply_immediately": {
                "type": "bool",
                "optional": true,
                "computed": true
              },
              "arn": {
                "type": "string",
                "computed": true
              },
              "availability_zones": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true,
                "computed": true
              },
              "backup_retention_period": {
                "type": "number",
                "optional": true
              },
              "cluster_identifier": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "cluster_identifier_prefix": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "cluster_members": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true,
                "computed": true
              },
              "cluster_resource_id": {
                "type": "string",
                "computed": true
              },
              "db_cluster_parameter_group_name": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "db_subnet_group_name": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "enabled_cloudwatch_logs_exports": {
                "type": [
                  "list",
                  "string"
                ],
                "optional": true
              },
              "endpoint": {
                "type": "string",
                "computed": true
              },
              "engine": {
                "type": "string",
                "optional": true
              },
              "engine_version": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "final_snapshot_identifier": {
                "type": "string",
                "optional": true
              },
              "hosted_zone_id": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "kms_key_id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "master_password": {
                "type": "string",
                "optional": true,
                "sensitive": true
              },
              "master_username": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "port": {
                "type": "number",
                "optional": true
              },
              "preferred_backup_window": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "preferred_maintenance_window": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "reader_endpoint": {
                "type": "string",
                "computed": true
              },
              "skip_final_snapshot": {
                "type": "bool",
                "optional": true
              },
              "snapshot_identifier": {
                "type": "string",
                "optional": true
              },
              "storage_encrypted": {
                "type": "bool",
                "optional": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              },
              "vpc_security_group_ids": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true,
                "computed": true
              }
            },
            "block_types": {
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_docdb_cluster_instance": {
          "version": 0,
          "block": {
            "attributes": {
              "apply_immediately": {
                "type": "bool",
                "optional": true,
                "computed": true
              },
              "arn": {
                "type": "string",
                "computed": true
              },
              "auto_minor_version_upgrade": {
                "type": "bool",
                "optional": true
              },
              "availability_zone": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "ca_cert_identifier": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "cluster_identifier": {
                "type": "string",
                "required": true
              },
              "db_subnet_group_name": {
                "type": "string",
                "computed": true
              },
              "dbi_resource_id": {
                "type": "string",
                "computed": true
              },
              "endpoint": {
                "type": "string",
                "computed": true
              },
              "engine": {
                "type": "string",
                "optional": true
              },
              "engine_version": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "identifier": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "identifier_prefix": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "instance_class": {
                "type": "string",
                "required": true
              },
              "kms_key_id": {
                "type": "string",
                "computed": true
              },
              "port": {
                "type": "number",
                "computed": true
              },
              "preferred_backup_window": {
                "type": "string",
                "computed": true
              },
              "preferred_maintenance_window": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "promotion_tier": {
                "type": "number",
                "optional": true
              },
              "publicly_accessible": {
                "type": "bool",
                "computed": true
              },
              "storage_encrypted": {
                "type": "bool",
                "computed": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              },
              "writer": {
                "type": "bool",
                "computed": true
              }
            },
            "block_types": {
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_docdb_cluster_parameter_group": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "description": {
                "type": "string",
                "optional": true
              },
              "family": {
                "type": "string",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name_prefix": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              }
            },
            "block_types": {
              "parameter": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "apply_method": {
                      "type": "string",
                      "optional": true
                    },
                    "name": {
                      "type": "string",
                      "required": true
                    },
                    "value": {
                      "type": "string",
                      "required": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_docdb_cluster_snapshot": {
          "version": 0,
          "block": {
            "attributes": {
              "availability_zones": {
                "type": [
                  "list",
                  "string"
                ],
                "computed": true
              },
              "db_cluster_identifier": {
                "type": "string",
                "required": true
              },
              "db_cluster_snapshot_arn": {
                "type": "string",
                "computed": true
              },
              "db_cluster_snapshot_identifier": {
                "type": "string",
                "required": true
              },
              "engine": {
                "type": "string",
                "computed": true
              },
              "engine_version": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "kms_key_id": {
                "type": "string",
                "computed": true
              },
              "port": {
                "type": "number",
                "computed": true
              },
              "snapshot_type": {
                "type": "string",
                "computed": true
              },
              "source_db_cluster_snapshot_arn": {
                "type": "string",
                "computed": true
              },
              "status": {
                "type": "string",
                "computed": true
              },
              "storage_encrypted": {
                "type": "bool",
                "computed": true
              },
              "vpc_id": {
                "type": "string",
                "computed": true
              }
            },
            "block_types": {
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_docdb_subnet_group": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "description": {
                "type": "string",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name_prefix": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "subnet_ids": {
                "type": [
                  "set",
                  "string"
                ],
                "required": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              }
            }
          }
        },
        "aws_dx_bgp_peer": {
          "version": 0,
          "block": {
            "attributes": {
              "address_family": {
                "type": "string",
                "required": true
              },
              "amazon_address": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "aws_device": {
                "type": "string",
                "computed": true
              },
              "bgp_asn": {
                "type": "number",
                "required": true
              },
              "bgp_auth_key": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "bgp_peer_id": {
                "type": "string",
                "computed": true
              },
              "bgp_status": {
                "type": "string",
                "computed": true
              },
              "customer_address": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "virtual_interface_id": {
                "type": "string",
                "required": true
              }
            },
            "block_types": {
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_dx_connection": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "aws_device": {
                "type": "string",
                "computed": true
              },
              "bandwidth": {
                "type": "string",
                "required": true
              },
              "has_logical_redundancy": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "jumbo_frame_capable": {
                "type": "bool",
                "computed": true
              },
              "location": {
                "type": "string",
                "required": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              }
            }
          }
        },
        "aws_dx_connection_association": {
          "version": 0,
          "block": {
            "attributes": {
              "connection_id": {
                "type": "string",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "lag_id": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "aws_dx_gateway": {
          "version": 0,
          "block": {
            "attributes": {
              "amazon_side_asn": {
                "type": "string",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "owner_account_id": {
                "type": "string",
                "computed": true
              }
            },
            "block_types": {
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_dx_gateway_association": {
          "version": 1,
          "block": {
            "attributes": {
              "allowed_prefixes": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true,
                "computed": true
              },
              "associated_gateway_id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "associated_gateway_owner_account_id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "associated_gateway_type": {
                "type": "string",
                "computed": true
              },
              "dx_gateway_association_id": {
                "type": "string",
                "computed": true
              },
              "dx_gateway_id": {
                "type": "string",
                "required": true
              },
              "dx_gateway_owner_account_id": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "proposal_id": {
                "type": "string",
                "optional": true
              },
              "vpn_gateway_id": {
                "type": "string",
                "optional": true
              }
            },
            "block_types": {
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_dx_gateway_association_proposal": {
          "version": 0,
          "block": {
            "attributes": {
              "allowed_prefixes": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true,
                "computed": true
              },
              "associated_gateway_id": {
                "type": "string",
                "optional": true
              },
              "associated_gateway_owner_account_id": {
                "type": "string",
                "computed": true
              },
              "associated_gateway_type": {
                "type": "string",
                "computed": true
              },
              "dx_gateway_id": {
                "type": "string",
                "required": true
              },
              "dx_gateway_owner_account_id": {
                "type": "string",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "vpn_gateway_id": {
                "type": "string",
                "optional": true
              }
            }
          }
        },
        "aws_dx_hosted_private_virtual_interface": {
          "version": 0,
          "block": {
            "attributes": {
              "address_family": {
                "type": "string",
                "required": true
              },
              "amazon_address": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "amazon_side_asn": {
                "type": "string",
                "computed": true
              },
              "arn": {
                "type": "string",
                "computed": true
              },
              "aws_device": {
                "type": "string",
                "computed": true
              },
              "bgp_asn": {
                "type": "number",
                "required": true
              },
              "bgp_auth_key": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "connection_id": {
                "type": "string",
                "required": true
              },
              "customer_address": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "jumbo_frame_capable": {
                "type": "bool",
                "computed": true
              },
              "mtu": {
                "type": "number",
                "optional": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "owner_account_id": {
                "type": "string",
                "required": true
              },
              "vlan": {
                "type": "number",
                "required": true
              }
            },
            "block_types": {
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_dx_hosted_private_virtual_interface_accepter": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "dx_gateway_id": {
                "type": "string",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              },
              "virtual_interface_id": {
                "type": "string",
                "required": true
              },
              "vpn_gateway_id": {
                "type": "string",
                "optional": true
              }
            },
            "block_types": {
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_dx_hosted_public_virtual_interface": {
          "version": 0,
          "block": {
            "attributes": {
              "address_family": {
                "type": "string",
                "required": true
              },
              "amazon_address": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "amazon_side_asn": {
                "type": "string",
                "computed": true
              },
              "arn": {
                "type": "string",
                "computed": true
              },
              "aws_device": {
                "type": "string",
                "computed": true
              },
              "bgp_asn": {
                "type": "number",
                "required": true
              },
              "bgp_auth_key": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "connection_id": {
                "type": "string",
                "required": true
              },
              "customer_address": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "owner_account_id": {
                "type": "string",
                "required": true
              },
              "route_filter_prefixes": {
                "type": [
                  "set",
                  "string"
                ],
                "required": true
              },
              "vlan": {
                "type": "number",
                "required": true
              }
            },
            "block_types": {
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_dx_hosted_public_virtual_interface_accepter": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              },
              "virtual_interface_id": {
                "type": "string",
                "required": true
              }
            },
            "block_types": {
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_dx_hosted_transit_virtual_interface": {
          "version": 0,
          "block": {
            "attributes": {
              "address_family": {
                "type": "string",
                "required": true
              },
              "amazon_address": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "amazon_side_asn": {
                "type": "string",
                "computed": true
              },
              "arn": {
                "type": "string",
                "computed": true
              },
              "aws_device": {
                "type": "string",
                "computed": true
              },
              "bgp_asn": {
                "type": "number",
                "required": true
              },
              "bgp_auth_key": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "connection_id": {
                "type": "string",
                "required": true
              },
              "customer_address": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "jumbo_frame_capable": {
                "type": "bool",
                "computed": true
              },
              "mtu": {
                "type": "number",
                "optional": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "owner_account_id": {
                "type": "string",
                "required": true
              },
              "vlan": {
                "type": "number",
                "required": true
              }
            },
            "block_types": {
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_dx_hosted_transit_virtual_interface_accepter": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "dx_gateway_id": {
                "type": "string",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              },
              "virtual_interface_id": {
                "type": "string",
                "required": true
              }
            },
            "block_types": {
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_dx_lag": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "connections_bandwidth": {
                "type": "string",
                "required": true
              },
              "force_destroy": {
                "type": "bool",
                "optional": true
              },
              "has_logical_redundancy": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "jumbo_frame_capable": {
                "type": "bool",
                "computed": true
              },
              "location": {
                "type": "string",
                "required": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "number_of_connections": {
                "type": "number",
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              }
            }
          }
        },
        "aws_dx_private_virtual_interface": {
          "version": 0,
          "block": {
            "attributes": {
              "address_family": {
                "type": "string",
                "required": true
              },
              "amazon_address": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "amazon_side_asn": {
                "type": "string",
                "computed": true
              },
              "arn": {
                "type": "string",
                "computed": true
              },
              "aws_device": {
                "type": "string",
                "computed": true
              },
              "bgp_asn": {
                "type": "number",
                "required": true
              },
              "bgp_auth_key": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "connection_id": {
                "type": "string",
                "required": true
              },
              "customer_address": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "dx_gateway_id": {
                "type": "string",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "jumbo_frame_capable": {
                "type": "bool",
                "computed": true
              },
              "mtu": {
                "type": "number",
                "optional": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              },
              "vlan": {
                "type": "number",
                "required": true
              },
              "vpn_gateway_id": {
                "type": "string",
                "optional": true
              }
            },
            "block_types": {
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_dx_public_virtual_interface": {
          "version": 0,
          "block": {
            "attributes": {
              "address_family": {
                "type": "string",
                "required": true
              },
              "amazon_address": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "amazon_side_asn": {
                "type": "string",
                "computed": true
              },
              "arn": {
                "type": "string",
                "computed": true
              },
              "aws_device": {
                "type": "string",
                "computed": true
              },
              "bgp_asn": {
                "type": "number",
                "required": true
              },
              "bgp_auth_key": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "connection_id": {
                "type": "string",
                "required": true
              },
              "customer_address": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "route_filter_prefixes": {
                "type": [
                  "set",
                  "string"
                ],
                "required": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              },
              "vlan": {
                "type": "number",
                "required": true
              }
            },
            "block_types": {
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_dx_transit_virtual_interface": {
          "version": 0,
          "block": {
            "attributes": {
              "address_family": {
                "type": "string",
                "required": true
              },
              "amazon_address": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "amazon_side_asn": {
                "type": "string",
                "computed": true
              },
              "arn": {
                "type": "string",
                "computed": true
              },
              "aws_device": {
                "type": "string",
                "computed": true
              },
              "bgp_asn": {
                "type": "number",
                "required": true
              },
              "bgp_auth_key": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "connection_id": {
                "type": "string",
                "required": true
              },
              "customer_address": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "dx_gateway_id": {
                "type": "string",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "jumbo_frame_capable": {
                "type": "bool",
                "computed": true
              },
              "mtu": {
                "type": "number",
                "optional": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              },
              "vlan": {
                "type": "number",
                "required": true
              }
            },
            "block_types": {
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_dynamodb_global_table": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              }
            },
            "block_types": {
              "replica": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "region_name": {
                      "type": "string",
                      "required": true
                    }
                  }
                },
                "min_items": 1
              },
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_dynamodb_table": {
          "version": 1,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "billing_mode": {
                "type": "string",
                "optional": true
              },
              "hash_key": {
                "type": "string",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "range_key": {
                "type": "string",
                "optional": true
              },
              "read_capacity": {
                "type": "number",
                "optional": true
              },
              "stream_arn": {
                "type": "string",
                "computed": true
              },
              "stream_enabled": {
                "type": "bool",
                "optional": true
              },
              "stream_label": {
                "type": "string",
                "computed": true
              },
              "stream_view_type": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              },
              "write_capacity": {
                "type": "number",
                "optional": true
              }
            },
            "block_types": {
              "attribute": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "name": {
                      "type": "string",
                      "required": true
                    },
                    "type": {
                      "type": "string",
                      "required": true
                    }
                  }
                },
                "min_items": 1
              },
              "global_secondary_index": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "hash_key": {
                      "type": "string",
                      "required": true
                    },
                    "name": {
                      "type": "string",
                      "required": true
                    },
                    "non_key_attributes": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "optional": true
                    },
                    "projection_type": {
                      "type": "string",
                      "required": true
                    },
                    "range_key": {
                      "type": "string",
                      "optional": true
                    },
                    "read_capacity": {
                      "type": "number",
                      "optional": true
                    },
                    "write_capacity": {
                      "type": "number",
                      "optional": true
                    }
                  }
                }
              },
              "local_secondary_index": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "name": {
                      "type": "string",
                      "required": true
                    },
                    "non_key_attributes": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "optional": true
                    },
                    "projection_type": {
                      "type": "string",
                      "required": true
                    },
                    "range_key": {
                      "type": "string",
                      "required": true
                    }
                  }
                }
              },
              "point_in_time_recovery": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "enabled": {
                      "type": "bool",
                      "required": true
                    }
                  }
                },
                "max_items": 1
              },
              "server_side_encryption": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "enabled": {
                      "type": "bool",
                      "required": true
                    },
                    "kms_key_arn": {
                      "type": "string",
                      "optional": true,
                      "computed": true
                    }
                  }
                },
                "max_items": 1
              },
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              },
              "ttl": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "attribute_name": {
                      "type": "string",
                      "required": true
                    },
                    "enabled": {
                      "type": "bool",
                      "optional": true
                    }
                  }
                },
                "max_items": 1
              }
            }
          }
        },
        "aws_dynamodb_table_item": {
          "version": 0,
          "block": {
            "attributes": {
              "hash_key": {
                "type": "string",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "item": {
                "type": "string",
                "required": true
              },
              "range_key": {
                "type": "string",
                "optional": true
              },
              "table_name": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "aws_ebs_default_kms_key": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "key_arn": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "aws_ebs_encryption_by_default": {
          "version": 0,
          "block": {
            "attributes": {
              "enabled": {
                "type": "bool",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              }
            }
          }
        },
        "aws_ebs_snapshot": {
          "version": 0,
          "block": {
            "attributes": {
              "data_encryption_key_id": {
                "type": "string",
                "computed": true
              },
              "description": {
                "type": "string",
                "optional": true
              },
              "encrypted": {
                "type": "bool",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "kms_key_id": {
                "type": "string",
                "computed": true
              },
              "owner_alias": {
                "type": "string",
                "computed": true
              },
              "owner_id": {
                "type": "string",
                "computed": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              },
              "volume_id": {
                "type": "string",
                "required": true
              },
              "volume_size": {
                "type": "number",
                "computed": true
              }
            },
            "block_types": {
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_ebs_snapshot_copy": {
          "version": 0,
          "block": {
            "attributes": {
              "data_encryption_key_id": {
                "type": "string",
                "computed": true
              },
              "description": {
                "type": "string",
                "optional": true
              },
              "encrypted": {
                "type": "bool",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "kms_key_id": {
                "type": "string",
                "optional": true
              },
              "owner_alias": {
                "type": "string",
                "computed": true
              },
              "owner_id": {
                "type": "string",
                "computed": true
              },
              "source_region": {
                "type": "string",
                "required": true
              },
              "source_snapshot_id": {
                "type": "string",
                "required": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              },
              "volume_id": {
                "type": "string",
                "computed": true
              },
              "volume_size": {
                "type": "number",
                "computed": true
              }
            }
          }
        },
        "aws_ebs_volume": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "availability_zone": {
                "type": "string",
                "required": true
              },
              "encrypted": {
                "type": "bool",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "iops": {
                "type": "number",
                "optional": true,
                "computed": true
              },
              "kms_key_id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "size": {
                "type": "number",
                "optional": true,
                "computed": true
              },
              "snapshot_id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              },
              "type": {
                "type": "string",
                "optional": true,
                "computed": true
              }
            }
          }
        },
        "aws_ec2_capacity_reservation": {
          "version": 0,
          "block": {
            "attributes": {
              "availability_zone": {
                "type": "string",
                "required": true
              },
              "ebs_optimized": {
                "type": "bool",
                "optional": true
              },
              "end_date": {
                "type": "string",
                "optional": true
              },
              "end_date_type": {
                "type": "string",
                "optional": true
              },
              "ephemeral_storage": {
                "type": "bool",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "instance_count": {
                "type": "number",
                "required": true
              },
              "instance_match_criteria": {
                "type": "string",
                "optional": true
              },
              "instance_platform": {
                "type": "string",
                "required": true
              },
              "instance_type": {
                "type": "string",
                "required": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              },
              "tenancy": {
                "type": "string",
                "optional": true
              }
            }
          }
        },
        "aws_ec2_client_vpn_endpoint": {
          "version": 0,
          "block": {
            "attributes": {
              "client_cidr_block": {
                "type": "string",
                "required": true
              },
              "description": {
                "type": "string",
                "optional": true
              },
              "dns_name": {
                "type": "string",
                "computed": true
              },
              "dns_servers": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "server_certificate_arn": {
                "type": "string",
                "required": true
              },
              "split_tunnel": {
                "type": "bool",
                "optional": true
              },
              "status": {
                "type": "string",
                "computed": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              },
              "transport_protocol": {
                "type": "string",
                "optional": true
              }
            },
            "block_types": {
              "authentication_options": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "active_directory_id": {
                      "type": "string",
                      "optional": true
                    },
                    "root_certificate_chain_arn": {
                      "type": "string",
                      "optional": true
                    },
                    "type": {
                      "type": "string",
                      "required": true
                    }
                  }
                },
                "min_items": 1,
                "max_items": 1
              },
              "connection_log_options": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "cloudwatch_log_group": {
                      "type": "string",
                      "optional": true
                    },
                    "cloudwatch_log_stream": {
                      "type": "string",
                      "optional": true
                    },
                    "enabled": {
                      "type": "bool",
                      "required": true
                    }
                  }
                },
                "min_items": 1,
                "max_items": 1
              }
            }
          }
        },
        "aws_ec2_client_vpn_network_association": {
          "version": 0,
          "block": {
            "attributes": {
              "client_vpn_endpoint_id": {
                "type": "string",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "security_groups": {
                "type": [
                  "set",
                  "string"
                ],
                "computed": true
              },
              "status": {
                "type": "string",
                "computed": true
              },
              "subnet_id": {
                "type": "string",
                "required": true
              },
              "vpc_id": {
                "type": "string",
                "computed": true
              }
            }
          }
        },
        "aws_ec2_fleet": {
          "version": 0,
          "block": {
            "attributes": {
              "excess_capacity_termination_policy": {
                "type": "string",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "replace_unhealthy_instances": {
                "type": "bool",
                "optional": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              },
              "terminate_instances": {
                "type": "bool",
                "optional": true
              },
              "terminate_instances_with_expiration": {
                "type": "bool",
                "optional": true
              },
              "type": {
                "type": "string",
                "optional": true
              }
            },
            "block_types": {
              "launch_template_config": {
                "nesting_mode": "list",
                "block": {
                  "block_types": {
                    "launch_template_specification": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "launch_template_id": {
                            "type": "string",
                            "optional": true
                          },
                          "launch_template_name": {
                            "type": "string",
                            "optional": true
                          },
                          "version": {
                            "type": "string",
                            "required": true
                          }
                        }
                      },
                      "min_items": 1,
                      "max_items": 1
                    },
                    "override": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "availability_zone": {
                            "type": "string",
                            "optional": true
                          },
                          "instance_type": {
                            "type": "string",
                            "optional": true
                          },
                          "max_price": {
                            "type": "string",
                            "optional": true
                          },
                          "priority": {
                            "type": "number",
                            "optional": true
                          },
                          "subnet_id": {
                            "type": "string",
                            "optional": true
                          },
                          "weighted_capacity": {
                            "type": "number",
                            "optional": true
                          }
                        }
                      },
                      "max_items": 50
                    }
                  }
                },
                "min_items": 1,
                "max_items": 1
              },
              "on_demand_options": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "allocation_strategy": {
                      "type": "string",
                      "optional": true
                    }
                  }
                },
                "max_items": 1
              },
              "spot_options": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "allocation_strategy": {
                      "type": "string",
                      "optional": true
                    },
                    "instance_interruption_behavior": {
                      "type": "string",
                      "optional": true
                    },
                    "instance_pools_to_use_count": {
                      "type": "number",
                      "optional": true
                    }
                  }
                },
                "max_items": 1
              },
              "target_capacity_specification": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "default_target_capacity_type": {
                      "type": "string",
                      "required": true
                    },
                    "on_demand_target_capacity": {
                      "type": "number",
                      "optional": true
                    },
                    "spot_target_capacity": {
                      "type": "number",
                      "optional": true
                    },
                    "total_target_capacity": {
                      "type": "number",
                      "required": true
                    }
                  }
                },
                "min_items": 1,
                "max_items": 1
              },
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_ec2_traffic_mirror_filter": {
          "version": 0,
          "block": {
            "attributes": {
              "description": {
                "type": "string",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "network_services": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true
              }
            }
          }
        },
        "aws_ec2_traffic_mirror_filter_rule": {
          "version": 0,
          "block": {
            "attributes": {
              "description": {
                "type": "string",
                "optional": true
              },
              "destination_cidr_block": {
                "type": "string",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "protocol": {
                "type": "number",
                "optional": true
              },
              "rule_action": {
                "type": "string",
                "required": true
              },
              "rule_number": {
                "type": "number",
                "required": true
              },
              "source_cidr_block": {
                "type": "string",
                "required": true
              },
              "traffic_direction": {
                "type": "string",
                "required": true
              },
              "traffic_mirror_filter_id": {
                "type": "string",
                "required": true
              }
            },
            "block_types": {
              "destination_port_range": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "from_port": {
                      "type": "number",
                      "optional": true
                    },
                    "to_port": {
                      "type": "number",
                      "optional": true
                    }
                  }
                },
                "max_items": 1
              },
              "source_port_range": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "from_port": {
                      "type": "number",
                      "optional": true
                    },
                    "to_port": {
                      "type": "number",
                      "optional": true
                    }
                  }
                },
                "max_items": 1
              }
            }
          }
        },
        "aws_ec2_traffic_mirror_session": {
          "version": 0,
          "block": {
            "attributes": {
              "description": {
                "type": "string",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "network_interface_id": {
                "type": "string",
                "required": true
              },
              "packet_length": {
                "type": "number",
                "optional": true
              },
              "session_number": {
                "type": "number",
                "required": true
              },
              "traffic_mirror_filter_id": {
                "type": "string",
                "required": true
              },
              "traffic_mirror_target_id": {
                "type": "string",
                "required": true
              },
              "virtual_network_id": {
                "type": "number",
                "optional": true,
                "computed": true
              }
            }
          }
        },
        "aws_ec2_traffic_mirror_target": {
          "version": 0,
          "block": {
            "attributes": {
              "description": {
                "type": "string",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "network_interface_id": {
                "type": "string",
                "optional": true
              },
              "network_load_balancer_arn": {
                "type": "string",
                "optional": true
              }
            }
          }
        },
        "aws_ec2_transit_gateway": {
          "version": 0,
          "block": {
            "attributes": {
              "amazon_side_asn": {
                "type": "number",
                "optional": true
              },
              "arn": {
                "type": "string",
                "computed": true
              },
              "association_default_route_table_id": {
                "type": "string",
                "computed": true
              },
              "auto_accept_shared_attachments": {
                "type": "string",
                "optional": true
              },
              "default_route_table_association": {
                "type": "string",
                "optional": true
              },
              "default_route_table_propagation": {
                "type": "string",
                "optional": true
              },
              "description": {
                "type": "string",
                "optional": true
              },
              "dns_support": {
                "type": "string",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "owner_id": {
                "type": "string",
                "computed": true
              },
              "propagation_default_route_table_id": {
                "type": "string",
                "computed": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              },
              "vpn_ecmp_support": {
                "type": "string",
                "optional": true
              }
            }
          }
        },
        "aws_ec2_transit_gateway_route": {
          "version": 0,
          "block": {
            "attributes": {
              "blackhole": {
                "type": "bool",
                "optional": true
              },
              "destination_cidr_block": {
                "type": "string",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "transit_gateway_attachment_id": {
                "type": "string",
                "optional": true
              },
              "transit_gateway_route_table_id": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "aws_ec2_transit_gateway_route_table": {
          "version": 0,
          "block": {
            "attributes": {
              "default_association_route_table": {
                "type": "bool",
                "computed": true
              },
              "default_propagation_route_table": {
                "type": "bool",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              },
              "transit_gateway_id": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "aws_ec2_transit_gateway_route_table_association": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "resource_id": {
                "type": "string",
                "computed": true
              },
              "resource_type": {
                "type": "string",
                "computed": true
              },
              "transit_gateway_attachment_id": {
                "type": "string",
                "required": true
              },
              "transit_gateway_route_table_id": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "aws_ec2_transit_gateway_route_table_propagation": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "resource_id": {
                "type": "string",
                "computed": true
              },
              "resource_type": {
                "type": "string",
                "computed": true
              },
              "transit_gateway_attachment_id": {
                "type": "string",
                "required": true
              },
              "transit_gateway_route_table_id": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "aws_ec2_transit_gateway_vpc_attachment": {
          "version": 0,
          "block": {
            "attributes": {
              "dns_support": {
                "type": "string",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "ipv6_support": {
                "type": "string",
                "optional": true
              },
              "subnet_ids": {
                "type": [
                  "set",
                  "string"
                ],
                "required": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              },
              "transit_gateway_default_route_table_association": {
                "type": "bool",
                "optional": true
              },
              "transit_gateway_default_route_table_propagation": {
                "type": "bool",
                "optional": true
              },
              "transit_gateway_id": {
                "type": "string",
                "required": true
              },
              "vpc_id": {
                "type": "string",
                "required": true
              },
              "vpc_owner_id": {
                "type": "string",
                "computed": true
              }
            }
          }
        },
        "aws_ec2_transit_gateway_vpc_attachment_accepter": {
          "version": 0,
          "block": {
            "attributes": {
              "dns_support": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "ipv6_support": {
                "type": "string",
                "computed": true
              },
              "subnet_ids": {
                "type": [
                  "set",
                  "string"
                ],
                "computed": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              },
              "transit_gateway_attachment_id": {
                "type": "string",
                "required": true
              },
              "transit_gateway_default_route_table_association": {
                "type": "bool",
                "optional": true
              },
              "transit_gateway_default_route_table_propagation": {
                "type": "bool",
                "optional": true
              },
              "transit_gateway_id": {
                "type": "string",
                "computed": true
              },
              "vpc_id": {
                "type": "string",
                "computed": true
              },
              "vpc_owner_id": {
                "type": "string",
                "computed": true
              }
            }
          }
        },
        "aws_ecr_lifecycle_policy": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "policy": {
                "type": "string",
                "required": true
              },
              "registry_id": {
                "type": "string",
                "computed": true
              },
              "repository": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "aws_ecr_repository": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "image_tag_mutability": {
                "type": "string",
                "optional": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "registry_id": {
                "type": "string",
                "computed": true
              },
              "repository_url": {
                "type": "string",
                "computed": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              }
            },
            "block_types": {
              "image_scanning_configuration": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "scan_on_push": {
                      "type": "bool",
                      "required": true
                    }
                  }
                },
                "max_items": 1
              },
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "delete": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_ecr_repository_policy": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "policy": {
                "type": "string",
                "required": true
              },
              "registry_id": {
                "type": "string",
                "computed": true
              },
              "repository": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "aws_ecs_capacity_provider": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              }
            },
            "block_types": {
              "auto_scaling_group_provider": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "auto_scaling_group_arn": {
                      "type": "string",
                      "required": true
                    },
                    "managed_termination_protection": {
                      "type": "string",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "block_types": {
                    "managed_scaling": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "maximum_scaling_step_size": {
                            "type": "number",
                            "optional": true,
                            "computed": true
                          },
                          "minimum_scaling_step_size": {
                            "type": "number",
                            "optional": true,
                            "computed": true
                          },
                          "status": {
                            "type": "string",
                            "optional": true,
                            "computed": true
                          },
                          "target_capacity": {
                            "type": "number",
                            "optional": true,
                            "computed": true
                          }
                        }
                      },
                      "max_items": 1
                    }
                  }
                },
                "min_items": 1,
                "max_items": 1
              }
            }
          }
        },
        "aws_ecs_cluster": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "capacity_providers": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              }
            },
            "block_types": {
              "default_capacity_provider_strategy": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "base": {
                      "type": "number",
                      "optional": true
                    },
                    "capacity_provider": {
                      "type": "string",
                      "required": true
                    },
                    "weight": {
                      "type": "number",
                      "optional": true
                    }
                  }
                }
              },
              "setting": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "name": {
                      "type": "string",
                      "required": true
                    },
                    "value": {
                      "type": "string",
                      "required": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_ecs_service": {
          "version": 0,
          "block": {
            "attributes": {
              "cluster": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "deployment_maximum_percent": {
                "type": "number",
                "optional": true
              },
              "deployment_minimum_healthy_percent": {
                "type": "number",
                "optional": true
              },
              "desired_count": {
                "type": "number",
                "optional": true
              },
              "enable_ecs_managed_tags": {
                "type": "bool",
                "optional": true
              },
              "health_check_grace_period_seconds": {
                "type": "number",
                "optional": true
              },
              "iam_role": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "launch_type": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "platform_version": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "propagate_tags": {
                "type": "string",
                "optional": true
              },
              "scheduling_strategy": {
                "type": "string",
                "optional": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              },
              "task_definition": {
                "type": "string",
                "required": true
              }
            },
            "block_types": {
              "capacity_provider_strategy": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "base": {
                      "type": "number",
                      "optional": true
                    },
                    "capacity_provider": {
                      "type": "string",
                      "required": true
                    },
                    "weight": {
                      "type": "number",
                      "optional": true
                    }
                  }
                }
              },
              "deployment_controller": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "type": {
                      "type": "string",
                      "optional": true
                    }
                  }
                },
                "max_items": 1
              },
              "load_balancer": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "container_name": {
                      "type": "string",
                      "required": true
                    },
                    "container_port": {
                      "type": "number",
                      "required": true
                    },
                    "elb_name": {
                      "type": "string",
                      "optional": true
                    },
                    "target_group_arn": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              },
              "network_configuration": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "assign_public_ip": {
                      "type": "bool",
                      "optional": true
                    },
                    "security_groups": {
                      "type": [
                        "set",
                        "string"
                      ],
                      "optional": true
                    },
                    "subnets": {
                      "type": [
                        "set",
                        "string"
                      ],
                      "required": true
                    }
                  }
                },
                "max_items": 1
              },
              "ordered_placement_strategy": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "field": {
                      "type": "string",
                      "optional": true
                    },
                    "type": {
                      "type": "string",
                      "required": true
                    }
                  }
                },
                "max_items": 5
              },
              "placement_constraints": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "expression": {
                      "type": "string",
                      "optional": true
                    },
                    "type": {
                      "type": "string",
                      "required": true
                    }
                  }
                },
                "max_items": 10
              },
              "placement_strategy": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "field": {
                      "type": "string",
                      "optional": true
                    },
                    "type": {
                      "type": "string",
                      "required": true
                    }
                  }
                },
                "max_items": 5
              },
              "service_registries": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "container_name": {
                      "type": "string",
                      "optional": true
                    },
                    "container_port": {
                      "type": "number",
                      "optional": true
                    },
                    "port": {
                      "type": "number",
                      "optional": true
                    },
                    "registry_arn": {
                      "type": "string",
                      "required": true
                    }
                  }
                },
                "max_items": 1
              }
            }
          }
        },
        "aws_ecs_task_definition": {
          "version": 1,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "container_definitions": {
                "type": "string",
                "required": true
              },
              "cpu": {
                "type": "string",
                "optional": true
              },
              "execution_role_arn": {
                "type": "string",
                "optional": true
              },
              "family": {
                "type": "string",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "ipc_mode": {
                "type": "string",
                "optional": true
              },
              "memory": {
                "type": "string",
                "optional": true
              },
              "network_mode": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "pid_mode": {
                "type": "string",
                "optional": true
              },
              "requires_compatibilities": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true
              },
              "revision": {
                "type": "number",
                "computed": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              },
              "task_role_arn": {
                "type": "string",
                "optional": true
              }
            },
            "block_types": {
              "placement_constraints": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "expression": {
                      "type": "string",
                      "optional": true
                    },
                    "type": {
                      "type": "string",
                      "required": true
                    }
                  }
                },
                "max_items": 10
              },
              "proxy_configuration": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "container_name": {
                      "type": "string",
                      "required": true
                    },
                    "properties": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "optional": true
                    },
                    "type": {
                      "type": "string",
                      "optional": true
                    }
                  }
                },
                "max_items": 1
              },
              "volume": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "host_path": {
                      "type": "string",
                      "optional": true
                    },
                    "name": {
                      "type": "string",
                      "required": true
                    }
                  },
                  "block_types": {
                    "docker_volume_configuration": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "autoprovision": {
                            "type": "bool",
                            "optional": true
                          },
                          "driver": {
                            "type": "string",
                            "optional": true
                          },
                          "driver_opts": {
                            "type": [
                              "map",
                              "string"
                            ],
                            "optional": true
                          },
                          "labels": {
                            "type": [
                              "map",
                              "string"
                            ],
                            "optional": true
                          },
                          "scope": {
                            "type": "string",
                            "optional": true,
                            "computed": true
                          }
                        }
                      },
                      "max_items": 1
                    },
                    "efs_volume_configuration": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "file_system_id": {
                            "type": "string",
                            "required": true
                          },
                          "root_directory": {
                            "type": "string",
                            "optional": true
                          }
                        }
                      },
                      "max_items": 1
                    }
                  }
                }
              }
            }
          }
        },
        "aws_efs_file_system": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "creation_token": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "dns_name": {
                "type": "string",
                "computed": true
              },
              "encrypted": {
                "type": "bool",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "kms_key_id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "performance_mode": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "provisioned_throughput_in_mibps": {
                "type": "number",
                "optional": true
              },
              "reference_name": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              },
              "throughput_mode": {
                "type": "string",
                "optional": true
              }
            },
            "block_types": {
              "lifecycle_policy": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "transition_to_ia": {
                      "type": "string",
                      "optional": true
                    }
                  }
                },
                "max_items": 1
              }
            }
          }
        },
        "aws_efs_mount_target": {
          "version": 0,
          "block": {
            "attributes": {
              "dns_name": {
                "type": "string",
                "computed": true
              },
              "file_system_arn": {
                "type": "string",
                "computed": true
              },
              "file_system_id": {
                "type": "string",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "ip_address": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "network_interface_id": {
                "type": "string",
                "computed": true
              },
              "security_groups": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true,
                "computed": true
              },
              "subnet_id": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "aws_egress_only_internet_gateway": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "vpc_id": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "aws_eip": {
          "version": 0,
          "block": {
            "attributes": {
              "allocation_id": {
                "type": "string",
                "computed": true
              },
              "associate_with_private_ip": {
                "type": "string",
                "optional": true
              },
              "association_id": {
                "type": "string",
                "computed": true
              },
              "domain": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "instance": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "network_interface": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "private_dns": {
                "type": "string",
                "computed": true
              },
              "private_ip": {
                "type": "string",
                "computed": true
              },
              "public_dns": {
                "type": "string",
                "computed": true
              },
              "public_ip": {
                "type": "string",
                "computed": true
              },
              "public_ipv4_pool": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              },
              "vpc": {
                "type": "bool",
                "optional": true,
                "computed": true
              }
            },
            "block_types": {
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "delete": {
                      "type": "string",
                      "optional": true
                    },
                    "read": {
                      "type": "string",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_eip_association": {
          "version": 0,
          "block": {
            "attributes": {
              "allocation_id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "allow_reassociation": {
                "type": "bool",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "instance_id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "network_interface_id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "private_ip_address": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "public_ip": {
                "type": "string",
                "optional": true,
                "computed": true
              }
            }
          }
        },
        "aws_eks_cluster": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "certificate_authority": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "data": "string"
                    }
                  ]
                ],
                "computed": true
              },
              "created_at": {
                "type": "string",
                "computed": true
              },
              "enabled_cluster_log_types": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true
              },
              "endpoint": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "identity": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "oidc": [
                        "list",
                        [
                          "object",
                          {
                            "issuer": "string"
                          }
                        ]
                      ]
                    }
                  ]
                ],
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "platform_version": {
                "type": "string",
                "computed": true
              },
              "role_arn": {
                "type": "string",
                "required": true
              },
              "status": {
                "type": "string",
                "computed": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              },
              "version": {
                "type": "string",
                "optional": true,
                "computed": true
              }
            },
            "block_types": {
              "encryption_config": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "resources": {
                      "type": [
                        "set",
                        "string"
                      ],
                      "required": true
                    }
                  },
                  "block_types": {
                    "provider": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "key_arn": {
                            "type": "string",
                            "required": true
                          }
                        }
                      },
                      "min_items": 1,
                      "max_items": 1
                    }
                  }
                },
                "max_items": 1
              },
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              },
              "vpc_config": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "cluster_security_group_id": {
                      "type": "string",
                      "computed": true
                    },
                    "endpoint_private_access": {
                      "type": "bool",
                      "optional": true
                    },
                    "endpoint_public_access": {
                      "type": "bool",
                      "optional": true
                    },
                    "public_access_cidrs": {
                      "type": [
                        "set",
                        "string"
                      ],
                      "optional": true,
                      "computed": true
                    },
                    "security_group_ids": {
                      "type": [
                        "set",
                        "string"
                      ],
                      "optional": true
                    },
                    "subnet_ids": {
                      "type": [
                        "set",
                        "string"
                      ],
                      "required": true
                    },
                    "vpc_id": {
                      "type": "string",
                      "computed": true
                    }
                  }
                },
                "min_items": 1,
                "max_items": 1
              }
            }
          }
        },
        "aws_eks_fargate_profile": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "cluster_name": {
                "type": "string",
                "required": true
              },
              "fargate_profile_name": {
                "type": "string",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "pod_execution_role_arn": {
                "type": "string",
                "required": true
              },
              "status": {
                "type": "string",
                "computed": true
              },
              "subnet_ids": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              }
            },
            "block_types": {
              "selector": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "labels": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "optional": true
                    },
                    "namespace": {
                      "type": "string",
                      "required": true
                    }
                  }
                },
                "min_items": 1
              },
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_eks_node_group": {
          "version": 0,
          "block": {
            "attributes": {
              "ami_type": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "arn": {
                "type": "string",
                "computed": true
              },
              "cluster_name": {
                "type": "string",
                "required": true
              },
              "disk_size": {
                "type": "number",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "instance_types": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true,
                "computed": true
              },
              "labels": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              },
              "node_group_name": {
                "type": "string",
                "required": true
              },
              "node_role_arn": {
                "type": "string",
                "required": true
              },
              "release_version": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "resources": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "autoscaling_groups": [
                        "list",
                        [
                          "object",
                          {
                            "name": "string"
                          }
                        ]
                      ],
                      "remote_access_security_group_id": "string"
                    }
                  ]
                ],
                "computed": true
              },
              "status": {
                "type": "string",
                "computed": true
              },
              "subnet_ids": {
                "type": [
                  "set",
                  "string"
                ],
                "required": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              },
              "version": {
                "type": "string",
                "optional": true,
                "computed": true
              }
            },
            "block_types": {
              "remote_access": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "ec2_ssh_key": {
                      "type": "string",
                      "optional": true
                    },
                    "source_security_group_ids": {
                      "type": [
                        "set",
                        "string"
                      ],
                      "optional": true
                    }
                  }
                },
                "max_items": 1
              },
              "scaling_config": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "desired_size": {
                      "type": "number",
                      "required": true
                    },
                    "max_size": {
                      "type": "number",
                      "required": true
                    },
                    "min_size": {
                      "type": "number",
                      "required": true
                    }
                  }
                },
                "min_items": 1,
                "max_items": 1
              },
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_elastic_beanstalk_application": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "description": {
                "type": "string",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              }
            },
            "block_types": {
              "appversion_lifecycle": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "delete_source_from_s3": {
                      "type": "bool",
                      "optional": true
                    },
                    "max_age_in_days": {
                      "type": "number",
                      "optional": true
                    },
                    "max_count": {
                      "type": "number",
                      "optional": true
                    },
                    "service_role": {
                      "type": "string",
                      "required": true
                    }
                  }
                },
                "max_items": 1
              }
            }
          }
        },
        "aws_elastic_beanstalk_application_version": {
          "version": 0,
          "block": {
            "attributes": {
              "application": {
                "type": "string",
                "required": true
              },
              "arn": {
                "type": "string",
                "computed": true
              },
              "bucket": {
                "type": "string",
                "required": true
              },
              "description": {
                "type": "string",
                "optional": true
              },
              "force_delete": {
                "type": "bool",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "key": {
                "type": "string",
                "required": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              }
            }
          }
        },
        "aws_elastic_beanstalk_configuration_template": {
          "version": 0,
          "block": {
            "attributes": {
              "application": {
                "type": "string",
                "required": true
              },
              "description": {
                "type": "string",
                "optional": true
              },
              "environment_id": {
                "type": "string",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "solution_stack_name": {
                "type": "string",
                "optional": true
              }
            },
            "block_types": {
              "setting": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "name": {
                      "type": "string",
                      "required": true
                    },
                    "namespace": {
                      "type": "string",
                      "required": true
                    },
                    "resource": {
                      "type": "string",
                      "optional": true
                    },
                    "value": {
                      "type": "string",
                      "required": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_elastic_beanstalk_environment": {
          "version": 1,
          "block": {
            "attributes": {
              "all_settings": {
                "type": [
                  "set",
                  [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string",
                      "resource": "string",
                      "value": "string"
                    }
                  ]
                ],
                "computed": true
              },
              "application": {
                "type": "string",
                "required": true
              },
              "arn": {
                "type": "string",
                "computed": true
              },
              "autoscaling_groups": {
                "type": [
                  "list",
                  "string"
                ],
                "computed": true
              },
              "cname": {
                "type": "string",
                "computed": true
              },
              "cname_prefix": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "description": {
                "type": "string",
                "optional": true
              },
              "endpoint_url": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "instances": {
                "type": [
                  "list",
                  "string"
                ],
                "computed": true
              },
              "launch_configurations": {
                "type": [
                  "list",
                  "string"
                ],
                "computed": true
              },
              "load_balancers": {
                "type": [
                  "list",
                  "string"
                ],
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "platform_arn": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "poll_interval": {
                "type": "string",
                "optional": true
              },
              "queues": {
                "type": [
                  "list",
                  "string"
                ],
                "computed": true
              },
              "solution_stack_name": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              },
              "template_name": {
                "type": "string",
                "optional": true
              },
              "tier": {
                "type": "string",
                "optional": true
              },
              "triggers": {
                "type": [
                  "list",
                  "string"
                ],
                "computed": true
              },
              "version_label": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "wait_for_ready_timeout": {
                "type": "string",
                "optional": true
              }
            },
            "block_types": {
              "setting": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "name": {
                      "type": "string",
                      "required": true
                    },
                    "namespace": {
                      "type": "string",
                      "required": true
                    },
                    "resource": {
                      "type": "string",
                      "optional": true
                    },
                    "value": {
                      "type": "string",
                      "required": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_elasticache_cluster": {
          "version": 0,
          "block": {
            "attributes": {
              "apply_immediately": {
                "type": "bool",
                "optional": true,
                "computed": true
              },
              "arn": {
                "type": "string",
                "computed": true
              },
              "availability_zone": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "availability_zones": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true
              },
              "az_mode": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "cache_nodes": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "address": "string",
                      "availability_zone": "string",
                      "id": "string",
                      "port": "number"
                    }
                  ]
                ],
                "computed": true
              },
              "cluster_address": {
                "type": "string",
                "computed": true
              },
              "cluster_id": {
                "type": "string",
                "required": true
              },
              "configuration_endpoint": {
                "type": "string",
                "computed": true
              },
              "engine": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "engine_version": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "maintenance_window": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "node_type": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "notification_topic_arn": {
                "type": "string",
                "optional": true
              },
              "num_cache_nodes": {
                "type": "number",
                "optional": true,
                "computed": true
              },
              "parameter_group_name": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "port": {
                "type": "number",
                "optional": true,
                "computed": true
              },
              "preferred_availability_zones": {
                "type": [
                  "list",
                  "string"
                ],
                "optional": true
              },
              "replication_group_id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "security_group_ids": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true,
                "computed": true
              },
              "security_group_names": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true,
                "computed": true
              },
              "snapshot_arns": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true
              },
              "snapshot_name": {
                "type": "string",
                "optional": true
              },
              "snapshot_retention_limit": {
                "type": "number",
                "optional": true
              },
              "snapshot_window": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "subnet_group_name": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              }
            }
          }
        },
        "aws_elasticache_parameter_group": {
          "version": 0,
          "block": {
            "attributes": {
              "description": {
                "type": "string",
                "optional": true
              },
              "family": {
                "type": "string",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              }
            },
            "block_types": {
              "parameter": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "name": {
                      "type": "string",
                      "required": true
                    },
                    "value": {
                      "type": "string",
                      "required": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_elasticache_replication_group": {
          "version": 1,
          "block": {
            "attributes": {
              "apply_immediately": {
                "type": "bool",
                "optional": true,
                "computed": true
              },
              "at_rest_encryption_enabled": {
                "type": "bool",
                "optional": true
              },
              "auth_token": {
                "type": "string",
                "optional": true,
                "sensitive": true
              },
              "auto_minor_version_upgrade": {
                "type": "bool",
                "optional": true
              },
              "automatic_failover_enabled": {
                "type": "bool",
                "optional": true
              },
              "availability_zones": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true
              },
              "configuration_endpoint_address": {
                "type": "string",
                "computed": true
              },
              "engine": {
                "type": "string",
                "optional": true
              },
              "engine_version": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "kms_key_id": {
                "type": "string",
                "optional": true
              },
              "maintenance_window": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "member_clusters": {
                "type": [
                  "set",
                  "string"
                ],
                "computed": true
              },
              "node_type": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "notification_topic_arn": {
                "type": "string",
                "optional": true
              },
              "number_cache_clusters": {
                "type": "number",
                "optional": true,
                "computed": true
              },
              "parameter_group_name": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "port": {
                "type": "number",
                "optional": true
              },
              "primary_endpoint_address": {
                "type": "string",
                "computed": true
              },
              "replication_group_description": {
                "type": "string",
                "required": true
              },
              "replication_group_id": {
                "type": "string",
                "required": true
              },
              "security_group_ids": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true,
                "computed": true
              },
              "security_group_names": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true,
                "computed": true
              },
              "snapshot_arns": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true
              },
              "snapshot_name": {
                "type": "string",
                "optional": true
              },
              "snapshot_retention_limit": {
                "type": "number",
                "optional": true
              },
              "snapshot_window": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "subnet_group_name": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              },
              "transit_encryption_enabled": {
                "type": "bool",
                "optional": true
              }
            },
            "block_types": {
              "cluster_mode": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "num_node_groups": {
                      "type": "number",
                      "required": true
                    },
                    "replicas_per_node_group": {
                      "type": "number",
                      "required": true
                    }
                  }
                },
                "max_items": 1
              },
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_elasticache_security_group": {
          "version": 0,
          "block": {
            "attributes": {
              "description": {
                "type": "string",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "security_group_names": {
                "type": [
                  "set",
                  "string"
                ],
                "required": true
              }
            }
          }
        },
        "aws_elasticache_subnet_group": {
          "version": 0,
          "block": {
            "attributes": {
              "description": {
                "type": "string",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "subnet_ids": {
                "type": [
                  "set",
                  "string"
                ],
                "required": true
              }
            }
          }
        },
        "aws_elasticsearch_domain": {
          "version": 0,
          "block": {
            "attributes": {
              "access_policies": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "advanced_options": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true,
                "computed": true
              },
              "arn": {
                "type": "string",
                "computed": true
              },
              "domain_id": {
                "type": "string",
                "computed": true
              },
              "domain_name": {
                "type": "string",
                "required": true
              },
              "elasticsearch_version": {
                "type": "string",
                "optional": true
              },
              "endpoint": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "kibana_endpoint": {
                "type": "string",
                "computed": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              }
            },
            "block_types": {
              "cluster_config": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "dedicated_master_count": {
                      "type": "number",
                      "optional": true
                    },
                    "dedicated_master_enabled": {
                      "type": "bool",
                      "optional": true
                    },
                    "dedicated_master_type": {
                      "type": "string",
                      "optional": true
                    },
                    "instance_count": {
                      "type": "number",
                      "optional": true
                    },
                    "instance_type": {
                      "type": "string",
                      "optional": true
                    },
                    "zone_awareness_enabled": {
                      "type": "bool",
                      "optional": true
                    }
                  },
                  "block_types": {
                    "zone_awareness_config": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "availability_zone_count": {
                            "type": "number",
                            "optional": true
                          }
                        }
                      },
                      "max_items": 1
                    }
                  }
                },
                "max_items": 1
              },
              "cognito_options": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "enabled": {
                      "type": "bool",
                      "optional": true
                    },
                    "identity_pool_id": {
                      "type": "string",
                      "required": true
                    },
                    "role_arn": {
                      "type": "string",
                      "required": true
                    },
                    "user_pool_id": {
                      "type": "string",
                      "required": true
                    }
                  }
                },
                "max_items": 1
              },
              "domain_endpoint_options": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "enforce_https": {
                      "type": "bool",
                      "required": true
                    },
                    "tls_security_policy": {
                      "type": "string",
                      "optional": true,
                      "computed": true
                    }
                  }
                },
                "max_items": 1
              },
              "ebs_options": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "ebs_enabled": {
                      "type": "bool",
                      "required": true
                    },
                    "iops": {
                      "type": "number",
                      "optional": true
                    },
                    "volume_size": {
                      "type": "number",
                      "optional": true
                    },
                    "volume_type": {
                      "type": "string",
                      "optional": true,
                      "computed": true
                    }
                  }
                },
                "max_items": 1
              },
              "encrypt_at_rest": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "enabled": {
                      "type": "bool",
                      "required": true
                    },
                    "kms_key_id": {
                      "type": "string",
                      "optional": true,
                      "computed": true
                    }
                  }
                },
                "max_items": 1
              },
              "log_publishing_options": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "cloudwatch_log_group_arn": {
                      "type": "string",
                      "required": true
                    },
                    "enabled": {
                      "type": "bool",
                      "optional": true
                    },
                    "log_type": {
                      "type": "string",
                      "required": true
                    }
                  }
                }
              },
              "node_to_node_encryption": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "enabled": {
                      "type": "bool",
                      "required": true
                    }
                  }
                },
                "max_items": 1
              },
              "snapshot_options": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "automated_snapshot_start_hour": {
                      "type": "number",
                      "required": true
                    }
                  }
                },
                "max_items": 1
              },
              "vpc_options": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "availability_zones": {
                      "type": [
                        "set",
                        "string"
                      ],
                      "computed": true
                    },
                    "security_group_ids": {
                      "type": [
                        "set",
                        "string"
                      ],
                      "optional": true
                    },
                    "subnet_ids": {
                      "type": [
                        "set",
                        "string"
                      ],
                      "optional": true
                    },
                    "vpc_id": {
                      "type": "string",
                      "computed": true
                    }
                  }
                },
                "max_items": 1
              }
            }
          }
        },
        "aws_elasticsearch_domain_policy": {
          "version": 0,
          "block": {
            "attributes": {
              "access_policies": {
                "type": "string",
                "required": true
              },
              "domain_name": {
                "type": "string",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              }
            }
          }
        },
        "aws_elastictranscoder_pipeline": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "aws_kms_key_arn": {
                "type": "string",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "input_bucket": {
                "type": "string",
                "required": true
              },
              "name": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "output_bucket": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "role": {
                "type": "string",
                "required": true
              }
            },
            "block_types": {
              "content_config": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "bucket": {
                      "type": "string",
                      "optional": true,
                      "computed": true
                    },
                    "storage_class": {
                      "type": "string",
                      "optional": true
                    }
                  }
                },
                "max_items": 1
              },
              "content_config_permissions": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "access": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "optional": true
                    },
                    "grantee": {
                      "type": "string",
                      "optional": true
                    },
                    "grantee_type": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              },
              "notifications": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "completed": {
                      "type": "string",
                      "optional": true
                    },
                    "error": {
                      "type": "string",
                      "optional": true
                    },
                    "progressing": {
                      "type": "string",
                      "optional": true
                    },
                    "warning": {
                      "type": "string",
                      "optional": true
                    }
                  }
                },
                "max_items": 1
              },
              "thumbnail_config": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "bucket": {
                      "type": "string",
                      "optional": true,
                      "computed": true
                    },
                    "storage_class": {
                      "type": "string",
                      "optional": true
                    }
                  }
                },
                "max_items": 1
              },
              "thumbnail_config_permissions": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "access": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "optional": true
                    },
                    "grantee": {
                      "type": "string",
                      "optional": true
                    },
                    "grantee_type": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_elastictranscoder_preset": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "container": {
                "type": "string",
                "required": true
              },
              "description": {
                "type": "string",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "type": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "video_codec_options": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              }
            },
            "block_types": {
              "audio": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "audio_packing_mode": {
                      "type": "string",
                      "optional": true
                    },
                    "bit_rate": {
                      "type": "string",
                      "optional": true
                    },
                    "channels": {
                      "type": "string",
                      "optional": true
                    },
                    "codec": {
                      "type": "string",
                      "optional": true
                    },
                    "sample_rate": {
                      "type": "string",
                      "optional": true
                    }
                  }
                },
                "max_items": 1
              },
              "audio_codec_options": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "bit_depth": {
                      "type": "string",
                      "optional": true
                    },
                    "bit_order": {
                      "type": "string",
                      "optional": true
                    },
                    "profile": {
                      "type": "string",
                      "optional": true
                    },
                    "signed": {
                      "type": "string",
                      "optional": true
                    }
                  }
                },
                "max_items": 1
              },
              "thumbnails": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "aspect_ratio": {
                      "type": "string",
                      "optional": true
                    },
                    "format": {
                      "type": "string",
                      "optional": true
                    },
                    "interval": {
                      "type": "string",
                      "optional": true
                    },
                    "max_height": {
                      "type": "string",
                      "optional": true
                    },
                    "max_width": {
                      "type": "string",
                      "optional": true
                    },
                    "padding_policy": {
                      "type": "string",
                      "optional": true
                    },
                    "resolution": {
                      "type": "string",
                      "optional": true
                    },
                    "sizing_policy": {
                      "type": "string",
                      "optional": true
                    }
                  }
                },
                "max_items": 1
              },
              "video": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "aspect_ratio": {
                      "type": "string",
                      "optional": true
                    },
                    "bit_rate": {
                      "type": "string",
                      "optional": true
                    },
                    "codec": {
                      "type": "string",
                      "optional": true
                    },
                    "display_aspect_ratio": {
                      "type": "string",
                      "optional": true
                    },
                    "fixed_gop": {
                      "type": "string",
                      "optional": true
                    },
                    "frame_rate": {
                      "type": "string",
                      "optional": true
                    },
                    "keyframes_max_dist": {
                      "type": "string",
                      "optional": true
                    },
                    "max_frame_rate": {
                      "type": "string",
                      "optional": true
                    },
                    "max_height": {
                      "type": "string",
                      "optional": true
                    },
                    "max_width": {
                      "type": "string",
                      "optional": true
                    },
                    "padding_policy": {
                      "type": "string",
                      "optional": true
                    },
                    "resolution": {
                      "type": "string",
                      "optional": true
                    },
                    "sizing_policy": {
                      "type": "string",
                      "optional": true
                    }
                  }
                },
                "max_items": 1
              },
              "video_watermarks": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "horizontal_align": {
                      "type": "string",
                      "optional": true
                    },
                    "horizontal_offset": {
                      "type": "string",
                      "optional": true
                    },
                    "id": {
                      "type": "string",
                      "optional": true
                    },
                    "max_height": {
                      "type": "string",
                      "optional": true
                    },
                    "max_width": {
                      "type": "string",
                      "optional": true
                    },
                    "opacity": {
                      "type": "string",
                      "optional": true
                    },
                    "sizing_policy": {
                      "type": "string",
                      "optional": true
                    },
                    "target": {
                      "type": "string",
                      "optional": true
                    },
                    "vertical_align": {
                      "type": "string",
                      "optional": true
                    },
                    "vertical_offset": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_elb": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "availability_zones": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true,
                "computed": true
              },
              "connection_draining": {
                "type": "bool",
                "optional": true
              },
              "connection_draining_timeout": {
                "type": "number",
                "optional": true
              },
              "cross_zone_load_balancing": {
                "type": "bool",
                "optional": true
              },
              "dns_name": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "idle_timeout": {
                "type": "number",
                "optional": true
              },
              "instances": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true,
                "computed": true
              },
              "internal": {
                "type": "bool",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name_prefix": {
                "type": "string",
                "optional": true
              },
              "security_groups": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true,
                "computed": true
              },
              "source_security_group": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "source_security_group_id": {
                "type": "string",
                "computed": true
              },
              "subnets": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              },
              "zone_id": {
                "type": "string",
                "computed": true
              }
            },
            "block_types": {
              "access_logs": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "bucket": {
                      "type": "string",
                      "required": true
                    },
                    "bucket_prefix": {
                      "type": "string",
                      "optional": true
                    },
                    "enabled": {
                      "type": "bool",
                      "optional": true
                    },
                    "interval": {
                      "type": "number",
                      "optional": true
                    }
                  }
                },
                "max_items": 1
              },
              "health_check": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "healthy_threshold": {
                      "type": "number",
                      "required": true
                    },
                    "interval": {
                      "type": "number",
                      "required": true
                    },
                    "target": {
                      "type": "string",
                      "required": true
                    },
                    "timeout": {
                      "type": "number",
                      "required": true
                    },
                    "unhealthy_threshold": {
                      "type": "number",
                      "required": true
                    }
                  }
                },
                "max_items": 1
              },
              "listener": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "instance_port": {
                      "type": "number",
                      "required": true
                    },
                    "instance_protocol": {
                      "type": "string",
                      "required": true
                    },
                    "lb_port": {
                      "type": "number",
                      "required": true
                    },
                    "lb_protocol": {
                      "type": "string",
                      "required": true
                    },
                    "ssl_certificate_id": {
                      "type": "string",
                      "optional": true
                    }
                  }
                },
                "min_items": 1
              }
            }
          }
        },
        "aws_elb_attachment": {
          "version": 0,
          "block": {
            "attributes": {
              "elb": {
                "type": "string",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "instance": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "aws_emr_cluster": {
          "version": 0,
          "block": {
            "attributes": {
              "additional_info": {
                "type": "string",
                "optional": true
              },
              "applications": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true
              },
              "arn": {
                "type": "string",
                "computed": true
              },
              "autoscaling_role": {
                "type": "string",
                "optional": true
              },
              "cluster_state": {
                "type": "string",
                "computed": true
              },
              "configurations": {
                "type": "string",
                "optional": true
              },
              "configurations_json": {
                "type": "string",
                "optional": true
              },
              "core_instance_count": {
                "type": "number",
                "optional": true,
                "computed": true
              },
              "core_instance_type": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "custom_ami_id": {
                "type": "string",
                "optional": true
              },
              "ebs_root_volume_size": {
                "type": "number",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "keep_job_flow_alive_when_no_steps": {
                "type": "bool",
                "optional": true,
                "computed": true
              },
              "log_uri": {
                "type": "string",
                "optional": true
              },
              "master_instance_type": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "master_public_dns": {
                "type": "string",
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "release_label": {
                "type": "string",
                "required": true
              },
              "scale_down_behavior": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "security_configuration": {
                "type": "string",
                "optional": true
              },
              "service_role": {
                "type": "string",
                "required": true
              },
              "step": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "action_on_failure": "string",
                      "hadoop_jar_step": [
                        "list",
                        [
                          "object",
                          {
                            "args": [
                              "list",
                              "string"
                            ],
                            "jar": "string",
                            "main_class": "string",
                            "properties": [
                              "map",
                              "string"
                            ]
                          }
                        ]
                      ],
                      "name": "string"
                    }
                  ]
                ],
                "optional": true,
                "computed": true
              },
              "step_concurrency_level": {
                "type": "number",
                "optional": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              },
              "termination_protection": {
                "type": "bool",
                "optional": true,
                "computed": true
              },
              "visible_to_all_users": {
                "type": "bool",
                "optional": true
              }
            },
            "block_types": {
              "bootstrap_action": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "args": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "optional": true
                    },
                    "name": {
                      "type": "string",
                      "required": true
                    },
                    "path": {
                      "type": "string",
                      "required": true
                    }
                  }
                }
              },
              "core_instance_group": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "autoscaling_policy": {
                      "type": "string",
                      "optional": true
                    },
                    "bid_price": {
                      "type": "string",
                      "optional": true
                    },
                    "id": {
                      "type": "string",
                      "computed": true
                    },
                    "instance_count": {
                      "type": "number",
                      "optional": true
                    },
                    "instance_type": {
                      "type": "string",
                      "required": true
                    },
                    "name": {
                      "type": "string",
                      "optional": true
                    }
                  },
                  "block_types": {
                    "ebs_config": {
                      "nesting_mode": "set",
                      "block": {
                        "attributes": {
                          "iops": {
                            "type": "number",
                            "optional": true
                          },
                          "size": {
                            "type": "number",
                            "required": true
                          },
                          "type": {
                            "type": "string",
                            "required": true
                          },
                          "volumes_per_instance": {
                            "type": "number",
                            "optional": true
                          }
                        }
                      }
                    }
                  }
                },
                "max_items": 1
              },
              "ec2_attributes": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "additional_master_security_groups": {
                      "type": "string",
                      "optional": true
                    },
                    "additional_slave_security_groups": {
                      "type": "string",
                      "optional": true
                    },
                    "emr_managed_master_security_group": {
                      "type": "string",
                      "optional": true,
                      "computed": true
                    },
                    "emr_managed_slave_security_group": {
                      "type": "string",
                      "optional": true,
                      "computed": true
                    },
                    "instance_profile": {
                      "type": "string",
                      "required": true
                    },
                    "key_name": {
                      "type": "string",
                      "optional": true
                    },
                    "service_access_security_group": {
                      "type": "string",
                      "optional": true,
                      "computed": true
                    },
                    "subnet_id": {
                      "type": "string",
                      "optional": true
                    }
                  }
                },
                "max_items": 1
              },
              "instance_group": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "autoscaling_policy": {
                      "type": "string",
                      "optional": true
                    },
                    "bid_price": {
                      "type": "string",
                      "optional": true
                    },
                    "id": {
                      "type": "string",
                      "computed": true
                    },
                    "instance_count": {
                      "type": "number",
                      "optional": true
                    },
                    "instance_role": {
                      "type": "string",
                      "required": true
                    },
                    "instance_type": {
                      "type": "string",
                      "required": true
                    },
                    "name": {
                      "type": "string",
                      "optional": true
                    }
                  },
                  "block_types": {
                    "ebs_config": {
                      "nesting_mode": "set",
                      "block": {
                        "attributes": {
                          "iops": {
                            "type": "number",
                            "optional": true
                          },
                          "size": {
                            "type": "number",
                            "required": true
                          },
                          "type": {
                            "type": "string",
                            "required": true
                          },
                          "volumes_per_instance": {
                            "type": "number",
                            "optional": true
                          }
                        }
                      }
                    }
                  }
                }
              },
              "kerberos_attributes": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "ad_domain_join_password": {
                      "type": "string",
                      "optional": true,
                      "sensitive": true
                    },
                    "ad_domain_join_user": {
                      "type": "string",
                      "optional": true
                    },
                    "cross_realm_trust_principal_password": {
                      "type": "string",
                      "optional": true,
                      "sensitive": true
                    },
                    "kdc_admin_password": {
                      "type": "string",
                      "required": true,
                      "sensitive": true
                    },
                    "realm": {
                      "type": "string",
                      "required": true
                    }
                  }
                },
                "max_items": 1
              },
              "master_instance_group": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "bid_price": {
                      "type": "string",
                      "optional": true
                    },
                    "id": {
                      "type": "string",
                      "computed": true
                    },
                    "instance_count": {
                      "type": "number",
                      "optional": true
                    },
                    "instance_type": {
                      "type": "string",
                      "required": true
                    },
                    "name": {
                      "type": "string",
                      "optional": true
                    }
                  },
                  "block_types": {
                    "ebs_config": {
                      "nesting_mode": "set",
                      "block": {
                        "attributes": {
                          "iops": {
                            "type": "number",
                            "optional": true
                          },
                          "size": {
                            "type": "number",
                            "required": true
                          },
                          "type": {
                            "type": "string",
                            "required": true
                          },
                          "volumes_per_instance": {
                            "type": "number",
                            "optional": true
                          }
                        }
                      }
                    }
                  }
                },
                "max_items": 1
              }
            }
          }
        },
        "aws_emr_instance_group": {
          "version": 0,
          "block": {
            "attributes": {
              "autoscaling_policy": {
                "type": "string",
                "optional": true
              },
              "bid_price": {
                "type": "string",
                "optional": true
              },
              "cluster_id": {
                "type": "string",
                "required": true
              },
              "configurations_json": {
                "type": "string",
                "optional": true
              },
              "ebs_optimized": {
                "type": "bool",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "instance_count": {
                "type": "number",
                "optional": true
              },
              "instance_type": {
                "type": "string",
                "required": true
              },
              "name": {
                "type": "string",
                "optional": true
              },
              "running_instance_count": {
                "type": "number",
                "computed": true
              },
              "status": {
                "type": "string",
                "computed": true
              }
            },
            "block_types": {
              "ebs_config": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "iops": {
                      "type": "number",
                      "optional": true
                    },
                    "size": {
                      "type": "number",
                      "required": true
                    },
                    "type": {
                      "type": "string",
                      "required": true
                    },
                    "volumes_per_instance": {
                      "type": "number",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_emr_security_configuration": {
          "version": 0,
          "block": {
            "attributes": {
              "configuration": {
                "type": "string",
                "required": true
              },
              "creation_date": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name_prefix": {
                "type": "string",
                "optional": true
              }
            }
          }
        },
        "aws_flow_log": {
          "version": 0,
          "block": {
            "attributes": {
              "eni_id": {
                "type": "string",
                "optional": true
              },
              "iam_role_arn": {
                "type": "string",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "log_destination": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "log_destination_type": {
                "type": "string",
                "optional": true
              },
              "log_format": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "log_group_name": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "subnet_id": {
                "type": "string",
                "optional": true
              },
              "traffic_type": {
                "type": "string",
                "required": true
              },
              "vpc_id": {
                "type": "string",
                "optional": true
              }
            }
          }
        },
        "aws_fms_admin_account": {
          "version": 0,
          "block": {
            "attributes": {
              "account_id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              }
            }
          }
        },
        "aws_fsx_lustre_file_system": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "dns_name": {
                "type": "string",
                "computed": true
              },
              "export_path": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "import_path": {
                "type": "string",
                "optional": true
              },
              "imported_file_chunk_size": {
                "type": "number",
                "optional": true,
                "computed": true
              },
              "network_interface_ids": {
                "type": [
                  "set",
                  "string"
                ],
                "computed": true
              },
              "owner_id": {
                "type": "string",
                "computed": true
              },
              "security_group_ids": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true
              },
              "storage_capacity": {
                "type": "number",
                "required": true
              },
              "subnet_ids": {
                "type": [
                  "set",
                  "string"
                ],
                "required": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              },
              "vpc_id": {
                "type": "string",
                "computed": true
              },
              "weekly_maintenance_start_time": {
                "type": "string",
                "optional": true,
                "computed": true
              }
            },
            "block_types": {
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_fsx_windows_file_system": {
          "version": 0,
          "block": {
            "attributes": {
              "active_directory_id": {
                "type": "string",
                "optional": true
              },
              "arn": {
                "type": "string",
                "computed": true
              },
              "automatic_backup_retention_days": {
                "type": "number",
                "optional": true
              },
              "copy_tags_to_backups": {
                "type": "bool",
                "optional": true
              },
              "daily_automatic_backup_start_time": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "dns_name": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "kms_key_id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "network_interface_ids": {
                "type": [
                  "set",
                  "string"
                ],
                "computed": true
              },
              "owner_id": {
                "type": "string",
                "computed": true
              },
              "security_group_ids": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true
              },
              "skip_final_backup": {
                "type": "bool",
                "optional": true
              },
              "storage_capacity": {
                "type": "number",
                "required": true
              },
              "subnet_ids": {
                "type": [
                  "set",
                  "string"
                ],
                "required": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              },
              "throughput_capacity": {
                "type": "number",
                "required": true
              },
              "vpc_id": {
                "type": "string",
                "computed": true
              },
              "weekly_maintenance_start_time": {
                "type": "string",
                "optional": true,
                "computed": true
              }
            },
            "block_types": {
              "self_managed_active_directory": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "dns_ips": {
                      "type": [
                        "set",
                        "string"
                      ],
                      "required": true
                    },
                    "domain_name": {
                      "type": "string",
                      "required": true
                    },
                    "file_system_administrators_group": {
                      "type": "string",
                      "optional": true
                    },
                    "organizational_unit_distinguished_name": {
                      "type": "string",
                      "optional": true
                    },
                    "password": {
                      "type": "string",
                      "required": true,
                      "sensitive": true
                    },
                    "username": {
                      "type": "string",
                      "required": true
                    }
                  }
                },
                "max_items": 1
              },
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_gamelift_alias": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "description": {
                "type": "string",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              }
            },
            "block_types": {
              "routing_strategy": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "fleet_id": {
                      "type": "string",
                      "optional": true
                    },
                    "message": {
                      "type": "string",
                      "optional": true
                    },
                    "type": {
                      "type": "string",
                      "required": true
                    }
                  }
                },
                "min_items": 1,
                "max_items": 1
              }
            }
          }
        },
        "aws_gamelift_build": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "operating_system": {
                "type": "string",
                "required": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              },
              "version": {
                "type": "string",
                "optional": true
              }
            },
            "block_types": {
              "storage_location": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "bucket": {
                      "type": "string",
                      "required": true
                    },
                    "key": {
                      "type": "string",
                      "required": true
                    },
                    "role_arn": {
                      "type": "string",
                      "required": true
                    }
                  }
                },
                "min_items": 1,
                "max_items": 1
              }
            }
          }
        },
        "aws_gamelift_fleet": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "build_id": {
                "type": "string",
                "required": true
              },
              "description": {
                "type": "string",
                "optional": true
              },
              "ec2_instance_type": {
                "type": "string",
                "required": true
              },
              "fleet_type": {
                "type": "string",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "instance_role_arn": {
                "type": "string",
                "optional": true
              },
              "log_paths": {
                "type": [
                  "list",
                  "string"
                ],
                "computed": true
              },
              "metric_groups": {
                "type": [
                  "list",
                  "string"
                ],
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "new_game_session_protection_policy": {
                "type": "string",
                "optional": true
              },
              "operating_system": {
                "type": "string",
                "computed": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              }
            },
            "block_types": {
              "ec2_inbound_permission": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "from_port": {
                      "type": "number",
                      "required": true
                    },
                    "ip_range": {
                      "type": "string",
                      "required": true
                    },
                    "protocol": {
                      "type": "string",
                      "required": true
                    },
                    "to_port": {
                      "type": "number",
                      "required": true
                    }
                  }
                },
                "max_items": 50
              },
              "resource_creation_limit_policy": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "new_game_sessions_per_creator": {
                      "type": "number",
                      "optional": true
                    },
                    "policy_period_in_minutes": {
                      "type": "number",
                      "optional": true
                    }
                  }
                },
                "max_items": 1
              },
              "runtime_configuration": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "game_session_activation_timeout_seconds": {
                      "type": "number",
                      "optional": true
                    },
                    "max_concurrent_game_session_activations": {
                      "type": "number",
                      "optional": true
                    }
                  },
                  "block_types": {
                    "server_process": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "concurrent_executions": {
                            "type": "number",
                            "required": true
                          },
                          "launch_path": {
                            "type": "string",
                            "required": true
                          },
                          "parameters": {
                            "type": "string",
                            "optional": true
                          }
                        }
                      },
                      "max_items": 50
                    }
                  }
                },
                "max_items": 1
              },
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_gamelift_game_session_queue": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "destinations": {
                "type": [
                  "list",
                  "string"
                ],
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              },
              "timeout_in_seconds": {
                "type": "number",
                "optional": true
              }
            },
            "block_types": {
              "player_latency_policy": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "maximum_individual_player_latency_milliseconds": {
                      "type": "number",
                      "required": true
                    },
                    "policy_duration_seconds": {
                      "type": "number",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_glacier_vault": {
          "version": 0,
          "block": {
            "attributes": {
              "access_policy": {
                "type": "string",
                "optional": true
              },
              "arn": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "location": {
                "type": "string",
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              }
            },
            "block_types": {
              "notification": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "events": {
                      "type": [
                        "set",
                        "string"
                      ],
                      "required": true
                    },
                    "sns_topic": {
                      "type": "string",
                      "required": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_glacier_vault_lock": {
          "version": 0,
          "block": {
            "attributes": {
              "complete_lock": {
                "type": "bool",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "ignore_deletion_error": {
                "type": "bool",
                "optional": true
              },
              "policy": {
                "type": "string",
                "required": true
              },
              "vault_name": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "aws_globalaccelerator_accelerator": {
          "version": 0,
          "block": {
            "attributes": {
              "dns_name": {
                "type": "string",
                "computed": true
              },
              "enabled": {
                "type": "bool",
                "optional": true
              },
              "hosted_zone_id": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "ip_address_type": {
                "type": "string",
                "optional": true
              },
              "ip_sets": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "ip_addresses": [
                        "list",
                        "string"
                      ],
                      "ip_family": "string"
                    }
                  ]
                ],
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              }
            },
            "block_types": {
              "attributes": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "flow_logs_enabled": {
                      "type": "bool",
                      "optional": true
                    },
                    "flow_logs_s3_bucket": {
                      "type": "string",
                      "optional": true
                    },
                    "flow_logs_s3_prefix": {
                      "type": "string",
                      "optional": true
                    }
                  }
                },
                "max_items": 1
              }
            }
          }
        },
        "aws_globalaccelerator_endpoint_group": {
          "version": 0,
          "block": {
            "attributes": {
              "endpoint_group_region": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "health_check_interval_seconds": {
                "type": "number",
                "optional": true
              },
              "health_check_path": {
                "type": "string",
                "optional": true
              },
              "health_check_port": {
                "type": "number",
                "optional": true
              },
              "health_check_protocol": {
                "type": "string",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "listener_arn": {
                "type": "string",
                "required": true
              },
              "threshold_count": {
                "type": "number",
                "optional": true
              },
              "traffic_dial_percentage": {
                "type": "number",
                "optional": true
              }
            },
            "block_types": {
              "endpoint_configuration": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "endpoint_id": {
                      "type": "string",
                      "optional": true
                    },
                    "weight": {
                      "type": "number",
                      "optional": true
                    }
                  }
                },
                "max_items": 10
              }
            }
          }
        },
        "aws_globalaccelerator_listener": {
          "version": 0,
          "block": {
            "attributes": {
              "accelerator_arn": {
                "type": "string",
                "required": true
              },
              "client_affinity": {
                "type": "string",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "protocol": {
                "type": "string",
                "required": true
              }
            },
            "block_types": {
              "port_range": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "from_port": {
                      "type": "number",
                      "optional": true
                    },
                    "to_port": {
                      "type": "number",
                      "optional": true
                    }
                  }
                },
                "min_items": 1,
                "max_items": 10
              }
            }
          }
        },
        "aws_glue_catalog_database": {
          "version": 0,
          "block": {
            "attributes": {
              "catalog_id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "description": {
                "type": "string",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "location_uri": {
                "type": "string",
                "optional": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "parameters": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              }
            }
          }
        },
        "aws_glue_catalog_table": {
          "version": 0,
          "block": {
            "attributes": {
              "catalog_id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "database_name": {
                "type": "string",
                "required": true
              },
              "description": {
                "type": "string",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "owner": {
                "type": "string",
                "optional": true
              },
              "parameters": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              },
              "retention": {
                "type": "number",
                "optional": true
              },
              "table_type": {
                "type": "string",
                "optional": true
              },
              "view_expanded_text": {
                "type": "string",
                "optional": true
              },
              "view_original_text": {
                "type": "string",
                "optional": true
              }
            },
            "block_types": {
              "partition_keys": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "comment": {
                      "type": "string",
                      "optional": true
                    },
                    "name": {
                      "type": "string",
                      "required": true
                    },
                    "type": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              },
              "storage_descriptor": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "bucket_columns": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "optional": true
                    },
                    "compressed": {
                      "type": "bool",
                      "optional": true
                    },
                    "input_format": {
                      "type": "string",
                      "optional": true
                    },
                    "location": {
                      "type": "string",
                      "optional": true
                    },
                    "number_of_buckets": {
                      "type": "number",
                      "optional": true
                    },
                    "output_format": {
                      "type": "string",
                      "optional": true
                    },
                    "parameters": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "optional": true
                    },
                    "stored_as_sub_directories": {
                      "type": "bool",
                      "optional": true
                    }
                  },
                  "block_types": {
                    "columns": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "comment": {
                            "type": "string",
                            "optional": true
                          },
                          "name": {
                            "type": "string",
                            "required": true
                          },
                          "type": {
                            "type": "string",
                            "optional": true
                          }
                        }
                      }
                    },
                    "ser_de_info": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "name": {
                            "type": "string",
                            "optional": true
                          },
                          "parameters": {
                            "type": [
                              "map",
                              "string"
                            ],
                            "optional": true
                          },
                          "serialization_library": {
                            "type": "string",
                            "optional": true
                          }
                        }
                      },
                      "max_items": 1
                    },
                    "skewed_info": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "skewed_column_names": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "optional": true
                          },
                          "skewed_column_value_location_maps": {
                            "type": [
                              "map",
                              "string"
                            ],
                            "optional": true
                          },
                          "skewed_column_values": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "optional": true
                          }
                        }
                      },
                      "max_items": 1
                    },
                    "sort_columns": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "column": {
                            "type": "string",
                            "required": true
                          },
                          "sort_order": {
                            "type": "number",
                            "required": true
                          }
                        }
                      }
                    }
                  }
                },
                "max_items": 1
              }
            }
          }
        },
        "aws_glue_classifier": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              }
            },
            "block_types": {
              "csv_classifier": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "allow_single_column": {
                      "type": "bool",
                      "optional": true
                    },
                    "contains_header": {
                      "type": "string",
                      "optional": true
                    },
                    "delimiter": {
                      "type": "string",
                      "optional": true
                    },
                    "disable_value_trimming": {
                      "type": "bool",
                      "optional": true
                    },
                    "header": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "optional": true
                    },
                    "quote_symbol": {
                      "type": "string",
                      "optional": true
                    }
                  }
                },
                "max_items": 1
              },
              "grok_classifier": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "classification": {
                      "type": "string",
                      "required": true
                    },
                    "custom_patterns": {
                      "type": "string",
                      "optional": true
                    },
                    "grok_pattern": {
                      "type": "string",
                      "required": true
                    }
                  }
                },
                "max_items": 1
              },
              "json_classifier": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "json_path": {
                      "type": "string",
                      "required": true
                    }
                  }
                },
                "max_items": 1
              },
              "xml_classifier": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "classification": {
                      "type": "string",
                      "required": true
                    },
                    "row_tag": {
                      "type": "string",
                      "required": true
                    }
                  }
                },
                "max_items": 1
              }
            }
          }
        },
        "aws_glue_connection": {
          "version": 0,
          "block": {
            "attributes": {
              "catalog_id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "connection_properties": {
                "type": [
                  "map",
                  "string"
                ],
                "required": true,
                "sensitive": true
              },
              "connection_type": {
                "type": "string",
                "optional": true
              },
              "description": {
                "type": "string",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "match_criteria": {
                "type": [
                  "list",
                  "string"
                ],
                "optional": true
              },
              "name": {
                "type": "string",
                "required": true
              }
            },
            "block_types": {
              "physical_connection_requirements": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "availability_zone": {
                      "type": "string",
                      "optional": true
                    },
                    "security_group_id_list": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "optional": true
                    },
                    "subnet_id": {
                      "type": "string",
                      "optional": true
                    }
                  }
                },
                "max_items": 1
              }
            }
          }
        },
        "aws_glue_crawler": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "classifiers": {
                "type": [
                  "list",
                  "string"
                ],
                "optional": true
              },
              "configuration": {
                "type": "string",
                "optional": true
              },
              "database_name": {
                "type": "string",
                "required": true
              },
              "description": {
                "type": "string",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "role": {
                "type": "string",
                "required": true
              },
              "schedule": {
                "type": "string",
                "optional": true
              },
              "security_configuration": {
                "type": "string",
                "optional": true
              },
              "table_prefix": {
                "type": "string",
                "optional": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              }
            },
            "block_types": {
              "catalog_target": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "database_name": {
                      "type": "string",
                      "required": true
                    },
                    "tables": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "required": true
                    }
                  }
                }
              },
              "dynamodb_target": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "path": {
                      "type": "string",
                      "required": true
                    }
                  }
                }
              },
              "jdbc_target": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "connection_name": {
                      "type": "string",
                      "required": true
                    },
                    "exclusions": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "optional": true
                    },
                    "path": {
                      "type": "string",
                      "required": true
                    }
                  }
                }
              },
              "s3_target": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "exclusions": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "optional": true
                    },
                    "path": {
                      "type": "string",
                      "required": true
                    }
                  }
                }
              },
              "schema_change_policy": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "delete_behavior": {
                      "type": "string",
                      "optional": true
                    },
                    "update_behavior": {
                      "type": "string",
                      "optional": true
                    }
                  }
                },
                "max_items": 1
              }
            }
          }
        },
        "aws_glue_job": {
          "version": 0,
          "block": {
            "attributes": {
              "allocated_capacity": {
                "type": "number",
                "optional": true,
                "computed": true
              },
              "arn": {
                "type": "string",
                "computed": true
              },
              "connections": {
                "type": [
                  "list",
                  "string"
                ],
                "optional": true
              },
              "default_arguments": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              },
              "description": {
                "type": "string",
                "optional": true
              },
              "glue_version": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "max_capacity": {
                "type": "number",
                "optional": true,
                "computed": true
              },
              "max_retries": {
                "type": "number",
                "optional": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "number_of_workers": {
                "type": "number",
                "optional": true
              },
              "role_arn": {
                "type": "string",
                "required": true
              },
              "security_configuration": {
                "type": "string",
                "optional": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              },
              "timeout": {
                "type": "number",
                "optional": true
              },
              "worker_type": {
                "type": "string",
                "optional": true
              }
            },
            "block_types": {
              "command": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "name": {
                      "type": "string",
                      "optional": true
                    },
                    "python_version": {
                      "type": "string",
                      "optional": true,
                      "computed": true
                    },
                    "script_location": {
                      "type": "string",
                      "required": true
                    }
                  }
                },
                "min_items": 1,
                "max_items": 1
              },
              "execution_property": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "max_concurrent_runs": {
                      "type": "number",
                      "optional": true
                    }
                  }
                },
                "max_items": 1
              },
              "notification_property": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "notify_delay_after": {
                      "type": "number",
                      "optional": true
                    }
                  }
                },
                "max_items": 1
              }
            }
          }
        },
        "aws_glue_security_configuration": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              }
            },
            "block_types": {
              "encryption_configuration": {
                "nesting_mode": "list",
                "block": {
                  "block_types": {
                    "cloudwatch_encryption": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "cloudwatch_encryption_mode": {
                            "type": "string",
                            "optional": true
                          },
                          "kms_key_arn": {
                            "type": "string",
                            "optional": true
                          }
                        }
                      },
                      "min_items": 1,
                      "max_items": 1
                    },
                    "job_bookmarks_encryption": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "job_bookmarks_encryption_mode": {
                            "type": "string",
                            "optional": true
                          },
                          "kms_key_arn": {
                            "type": "string",
                            "optional": true
                          }
                        }
                      },
                      "min_items": 1,
                      "max_items": 1
                    },
                    "s3_encryption": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "kms_key_arn": {
                            "type": "string",
                            "optional": true
                          },
                          "s3_encryption_mode": {
                            "type": "string",
                            "optional": true
                          }
                        }
                      },
                      "min_items": 1,
                      "max_items": 1
                    }
                  }
                },
                "min_items": 1,
                "max_items": 1
              }
            }
          }
        },
        "aws_glue_trigger": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "description": {
                "type": "string",
                "optional": true
              },
              "enabled": {
                "type": "bool",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "schedule": {
                "type": "string",
                "optional": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              },
              "type": {
                "type": "string",
                "required": true
              },
              "workflow_name": {
                "type": "string",
                "optional": true
              }
            },
            "block_types": {
              "actions": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "arguments": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "optional": true
                    },
                    "crawler_name": {
                      "type": "string",
                      "optional": true
                    },
                    "job_name": {
                      "type": "string",
                      "optional": true
                    },
                    "timeout": {
                      "type": "number",
                      "optional": true
                    }
                  }
                },
                "min_items": 1
              },
              "predicate": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "logical": {
                      "type": "string",
                      "optional": true
                    }
                  },
                  "block_types": {
                    "conditions": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "crawl_state": {
                            "type": "string",
                            "optional": true
                          },
                          "crawler_name": {
                            "type": "string",
                            "optional": true
                          },
                          "job_name": {
                            "type": "string",
                            "optional": true
                          },
                          "logical_operator": {
                            "type": "string",
                            "optional": true
                          },
                          "state": {
                            "type": "string",
                            "optional": true
                          }
                        }
                      },
                      "min_items": 1
                    }
                  }
                },
                "max_items": 1
              },
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_glue_workflow": {
          "version": 0,
          "block": {
            "attributes": {
              "default_run_properties": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              },
              "description": {
                "type": "string",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "optional": true
              }
            }
          }
        },
        "aws_guardduty_detector": {
          "version": 0,
          "block": {
            "attributes": {
              "account_id": {
                "type": "string",
                "computed": true
              },
              "enable": {
                "type": "bool",
                "optional": true
              },
              "finding_publishing_frequency": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              }
            }
          }
        },
        "aws_guardduty_invite_accepter": {
          "version": 0,
          "block": {
            "attributes": {
              "detector_id": {
                "type": "string",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "master_account_id": {
                "type": "string",
                "required": true
              }
            },
            "block_types": {
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_guardduty_ipset": {
          "version": 0,
          "block": {
            "attributes": {
              "activate": {
                "type": "bool",
                "required": true
              },
              "detector_id": {
                "type": "string",
                "required": true
              },
              "format": {
                "type": "string",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "location": {
                "type": "string",
                "required": true
              },
              "name": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "aws_guardduty_member": {
          "version": 0,
          "block": {
            "attributes": {
              "account_id": {
                "type": "string",
                "required": true
              },
              "detector_id": {
                "type": "string",
                "required": true
              },
              "disable_email_notification": {
                "type": "bool",
                "optional": true
              },
              "email": {
                "type": "string",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "invitation_message": {
                "type": "string",
                "optional": true
              },
              "invite": {
                "type": "bool",
                "optional": true
              },
              "relationship_status": {
                "type": "string",
                "computed": true
              }
            },
            "block_types": {
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_guardduty_threatintelset": {
          "version": 0,
          "block": {
            "attributes": {
              "activate": {
                "type": "bool",
                "required": true
              },
              "detector_id": {
                "type": "string",
                "required": true
              },
              "format": {
                "type": "string",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "location": {
                "type": "string",
                "required": true
              },
              "name": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "aws_iam_access_key": {
          "version": 0,
          "block": {
            "attributes": {
              "encrypted_secret": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "key_fingerprint": {
                "type": "string",
                "computed": true
              },
              "pgp_key": {
                "type": "string",
                "optional": true
              },
              "secret": {
                "type": "string",
                "computed": true,
                "sensitive": true
              },
              "ses_smtp_password": {
                "type": "string",
                "computed": true,
                "sensitive": true
              },
              "ses_smtp_password_v4": {
                "type": "string",
                "computed": true,
                "sensitive": true
              },
              "status": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "user": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "aws_iam_account_alias": {
          "version": 0,
          "block": {
            "attributes": {
              "account_alias": {
                "type": "string",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              }
            }
          }
        },
        "aws_iam_account_password_policy": {
          "version": 0,
          "block": {
            "attributes": {
              "allow_users_to_change_password": {
                "type": "bool",
                "optional": true
              },
              "expire_passwords": {
                "type": "bool",
                "computed": true
              },
              "hard_expiry": {
                "type": "bool",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "max_password_age": {
                "type": "number",
                "optional": true,
                "computed": true
              },
              "minimum_password_length": {
                "type": "number",
                "optional": true
              },
              "password_reuse_prevention": {
                "type": "number",
                "optional": true,
                "computed": true
              },
              "require_lowercase_characters": {
                "type": "bool",
                "optional": true,
                "computed": true
              },
              "require_numbers": {
                "type": "bool",
                "optional": true,
                "computed": true
              },
              "require_symbols": {
                "type": "bool",
                "optional": true,
                "computed": true
              },
              "require_uppercase_characters": {
                "type": "bool",
                "optional": true,
                "computed": true
              }
            }
          }
        },
        "aws_iam_group": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "path": {
                "type": "string",
                "optional": true
              },
              "unique_id": {
                "type": "string",
                "computed": true
              }
            }
          }
        },
        "aws_iam_group_membership": {
          "version": 0,
          "block": {
            "attributes": {
              "group": {
                "type": "string",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "users": {
                "type": [
                  "set",
                  "string"
                ],
                "required": true
              }
            }
          }
        },
        "aws_iam_group_policy": {
          "version": 0,
          "block": {
            "attributes": {
              "group": {
                "type": "string",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name_prefix": {
                "type": "string",
                "optional": true
              },
              "policy": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "aws_iam_group_policy_attachment": {
          "version": 0,
          "block": {
            "attributes": {
              "group": {
                "type": "string",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "policy_arn": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "aws_iam_instance_profile": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "create_date": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name_prefix": {
                "type": "string",
                "optional": true
              },
              "path": {
                "type": "string",
                "optional": true
              },
              "role": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "roles": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true,
                "computed": true
              },
              "unique_id": {
                "type": "string",
                "computed": true
              }
            }
          }
        },
        "aws_iam_openid_connect_provider": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "client_id_list": {
                "type": [
                  "list",
                  "string"
                ],
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "thumbprint_list": {
                "type": [
                  "list",
                  "string"
                ],
                "required": true
              },
              "url": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "aws_iam_policy": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "description": {
                "type": "string",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name_prefix": {
                "type": "string",
                "optional": true
              },
              "path": {
                "type": "string",
                "optional": true
              },
              "policy": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "aws_iam_policy_attachment": {
          "version": 0,
          "block": {
            "attributes": {
              "groups": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "policy_arn": {
                "type": "string",
                "required": true
              },
              "roles": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true
              },
              "users": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true
              }
            }
          }
        },
        "aws_iam_role": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "assume_role_policy": {
                "type": "string",
                "required": true
              },
              "create_date": {
                "type": "string",
                "computed": true
              },
              "description": {
                "type": "string",
                "optional": true
              },
              "force_detach_policies": {
                "type": "bool",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "max_session_duration": {
                "type": "number",
                "optional": true
              },
              "name": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name_prefix": {
                "type": "string",
                "optional": true
              },
              "path": {
                "type": "string",
                "optional": true
              },
              "permissions_boundary": {
                "type": "string",
                "optional": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              },
              "unique_id": {
                "type": "string",
                "computed": true
              }
            }
          }
        },
        "aws_iam_role_policy": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name_prefix": {
                "type": "string",
                "optional": true
              },
              "policy": {
                "type": "string",
                "required": true
              },
              "role": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "aws_iam_role_policy_attachment": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "policy_arn": {
                "type": "string",
                "required": true
              },
              "role": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "aws_iam_saml_provider": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "saml_metadata_document": {
                "type": "string",
                "required": true
              },
              "valid_until": {
                "type": "string",
                "computed": true
              }
            }
          }
        },
        "aws_iam_server_certificate": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "certificate_body": {
                "type": "string",
                "required": true
              },
              "certificate_chain": {
                "type": "string",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name_prefix": {
                "type": "string",
                "optional": true
              },
              "path": {
                "type": "string",
                "optional": true
              },
              "private_key": {
                "type": "string",
                "required": true,
                "sensitive": true
              }
            }
          }
        },
        "aws_iam_service_linked_role": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "aws_service_name": {
                "type": "string",
                "required": true
              },
              "create_date": {
                "type": "string",
                "computed": true
              },
              "custom_suffix": {
                "type": "string",
                "optional": true
              },
              "description": {
                "type": "string",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "computed": true
              },
              "path": {
                "type": "string",
                "computed": true
              },
              "unique_id": {
                "type": "string",
                "computed": true
              }
            }
          }
        },
        "aws_iam_user": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "force_destroy": {
                "type": "bool",
                "description": "Delete user even if it has non-Terraform-managed IAM access keys, login profile or MFA devices",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "path": {
                "type": "string",
                "optional": true
              },
              "permissions_boundary": {
                "type": "string",
                "optional": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              },
              "unique_id": {
                "type": "string",
                "computed": true
              }
            }
          }
        },
        "aws_iam_user_group_membership": {
          "version": 0,
          "block": {
            "attributes": {
              "groups": {
                "type": [
                  "set",
                  "string"
                ],
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "user": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "aws_iam_user_login_profile": {
          "version": 0,
          "block": {
            "attributes": {
              "encrypted_password": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "key_fingerprint": {
                "type": "string",
                "computed": true
              },
              "password_length": {
                "type": "number",
                "optional": true
              },
              "password_reset_required": {
                "type": "bool",
                "optional": true
              },
              "pgp_key": {
                "type": "string",
                "required": true
              },
              "user": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "aws_iam_user_policy": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name_prefix": {
                "type": "string",
                "optional": true
              },
              "policy": {
                "type": "string",
                "required": true
              },
              "user": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "aws_iam_user_policy_attachment": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "policy_arn": {
                "type": "string",
                "required": true
              },
              "user": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "aws_iam_user_ssh_key": {
          "version": 0,
          "block": {
            "attributes": {
              "encoding": {
                "type": "string",
                "required": true
              },
              "fingerprint": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "public_key": {
                "type": "string",
                "required": true
              },
              "ssh_public_key_id": {
                "type": "string",
                "computed": true
              },
              "status": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "username": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "aws_inspector_assessment_target": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "resource_group_arn": {
                "type": "string",
                "optional": true
              }
            }
          }
        },
        "aws_inspector_assessment_template": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "duration": {
                "type": "number",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "rules_package_arns": {
                "type": [
                  "set",
                  "string"
                ],
                "required": true
              },
              "target_arn": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "aws_inspector_resource_group": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "required": true
              }
            }
          }
        },
        "aws_instance": {
          "version": 1,
          "block": {
            "attributes": {
              "ami": {
                "type": "string",
                "required": true
              },
              "arn": {
                "type": "string",
                "computed": true
              },
              "associate_public_ip_address": {
                "type": "bool",
                "optional": true,
                "computed": true
              },
              "availability_zone": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "cpu_core_count": {
                "type": "number",
                "optional": true,
                "computed": true
              },
              "cpu_threads_per_core": {
                "type": "number",
                "optional": true,
                "computed": true
              },
              "disable_api_termination": {
                "type": "bool",
                "optional": true
              },
              "ebs_optimized": {
                "type": "bool",
                "optional": true
              },
              "get_password_data": {
                "type": "bool",
                "optional": true
              },
              "hibernation": {
                "type": "bool",
                "optional": true
              },
              "host_id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "iam_instance_profile": {
                "type": "string",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "instance_initiated_shutdown_behavior": {
                "type": "string",
                "optional": true
              },
              "instance_state": {
                "type": "string",
                "computed": true
              },
              "instance_type": {
                "type": "string",
                "required": true
              },
              "ipv6_address_count": {
                "type": "number",
                "optional": true,
                "computed": true
              },
              "ipv6_addresses": {
                "type": [
                  "list",
                  "string"
                ],
                "optional": true,
                "computed": true
              },
              "key_name": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "monitoring": {
                "type": "bool",
                "optional": true
              },
              "network_interface_id": {
                "type": "string",
                "computed": true
              },
              "password_data": {
                "type": "string",
                "computed": true
              },
              "placement_group": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "primary_network_interface_id": {
                "type": "string",
                "computed": true
              },
              "private_dns": {
                "type": "string",
                "computed": true
              },
              "private_ip": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "public_dns": {
                "type": "string",
                "computed": true
              },
              "public_ip": {
                "type": "string",
                "computed": true
              },
              "security_groups": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true,
                "computed": true
              },
              "source_dest_check": {
                "type": "bool",
                "optional": true
              },
              "subnet_id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              },
              "tenancy": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "user_data": {
                "type": "string",
                "optional": true
              },
              "user_data_base64": {
                "type": "string",
                "optional": true
              },
              "volume_tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true,
                "computed": true
              },
              "vpc_security_group_ids": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true,
                "computed": true
              }
            },
            "block_types": {
              "credit_specification": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "cpu_credits": {
                      "type": "string",
                      "optional": true
                    }
                  }
                },
                "max_items": 1
              },
              "ebs_block_device": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "delete_on_termination": {
                      "type": "bool",
                      "optional": true
                    },
                    "device_name": {
                      "type": "string",
                      "required": true
                    },
                    "encrypted": {
                      "type": "bool",
                      "optional": true,
                      "computed": true
                    },
                    "iops": {
                      "type": "number",
                      "optional": true,
                      "computed": true
                    },
                    "kms_key_id": {
                      "type": "string",
                      "optional": true,
                      "computed": true
                    },
                    "snapshot_id": {
                      "type": "string",
                      "optional": true,
                      "computed": true
                    },
                    "volume_id": {
                      "type": "string",
                      "computed": true
                    },
                    "volume_size": {
                      "type": "number",
                      "optional": true,
                      "computed": true
                    },
                    "volume_type": {
                      "type": "string",
                      "optional": true,
                      "computed": true
                    }
                  }
                }
              },
              "ephemeral_block_device": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "device_name": {
                      "type": "string",
                      "required": true
                    },
                    "no_device": {
                      "type": "bool",
                      "optional": true
                    },
                    "virtual_name": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              },
              "network_interface": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "delete_on_termination": {
                      "type": "bool",
                      "optional": true
                    },
                    "device_index": {
                      "type": "number",
                      "required": true
                    },
                    "network_interface_id": {
                      "type": "string",
                      "required": true
                    }
                  }
                }
              },
              "root_block_device": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "delete_on_termination": {
                      "type": "bool",
                      "optional": true
                    },
                    "encrypted": {
                      "type": "bool",
                      "optional": true,
                      "computed": true
                    },
                    "iops": {
                      "type": "number",
                      "optional": true,
                      "computed": true
                    },
                    "kms_key_id": {
                      "type": "string",
                      "optional": true,
                      "computed": true
                    },
                    "volume_id": {
                      "type": "string",
                      "computed": true
                    },
                    "volume_size": {
                      "type": "number",
                      "optional": true,
                      "computed": true
                    },
                    "volume_type": {
                      "type": "string",
                      "optional": true,
                      "computed": true
                    }
                  }
                },
                "max_items": 1
              },
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_internet_gateway": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "owner_id": {
                "type": "string",
                "computed": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              },
              "vpc_id": {
                "type": "string",
                "optional": true
              }
            }
          }
        },
        "aws_iot_certificate": {
          "version": 0,
          "block": {
            "attributes": {
              "active": {
                "type": "bool",
                "required": true
              },
              "arn": {
                "type": "string",
                "computed": true
              },
              "certificate_pem": {
                "type": "string",
                "computed": true,
                "sensitive": true
              },
              "csr": {
                "type": "string",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "private_key": {
                "type": "string",
                "computed": true,
                "sensitive": true
              },
              "public_key": {
                "type": "string",
                "computed": true,
                "sensitive": true
              }
            }
          }
        },
        "aws_iot_policy": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "default_version_id": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "policy": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "aws_iot_policy_attachment": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "policy": {
                "type": "string",
                "required": true
              },
              "target": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "aws_iot_role_alias": {
          "version": 0,
          "block": {
            "attributes": {
              "alias": {
                "type": "string",
                "required": true
              },
              "arn": {
                "type": "string",
                "computed": true
              },
              "credential_duration": {
                "type": "number",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "role_arn": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "aws_iot_thing": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "attributes": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              },
              "default_client_id": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "thing_type_name": {
                "type": "string",
                "optional": true
              },
              "version": {
                "type": "number",
                "computed": true
              }
            }
          }
        },
        "aws_iot_thing_principal_attachment": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "principal": {
                "type": "string",
                "required": true
              },
              "thing": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "aws_iot_thing_type": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "deprecated": {
                "type": "bool",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              }
            },
            "block_types": {
              "properties": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "description": {
                      "type": "string",
                      "optional": true
                    },
                    "searchable_attributes": {
                      "type": [
                        "set",
                        "string"
                      ],
                      "optional": true,
                      "computed": true
                    }
                  }
                },
                "max_items": 1
              }
            }
          }
        },
        "aws_iot_topic_rule": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "description": {
                "type": "string",
                "optional": true
              },
              "enabled": {
                "type": "bool",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "sql": {
                "type": "string",
                "required": true
              },
              "sql_version": {
                "type": "string",
                "required": true
              }
            },
            "block_types": {
              "cloudwatch_alarm": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "alarm_name": {
                      "type": "string",
                      "required": true
                    },
                    "role_arn": {
                      "type": "string",
                      "required": true
                    },
                    "state_reason": {
                      "type": "string",
                      "required": true
                    },
                    "state_value": {
                      "type": "string",
                      "required": true
                    }
                  }
                }
              },
              "cloudwatch_metric": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "metric_name": {
                      "type": "string",
                      "required": true
                    },
                    "metric_namespace": {
                      "type": "string",
                      "required": true
                    },
                    "metric_timestamp": {
                      "type": "string",
                      "optional": true
                    },
                    "metric_unit": {
                      "type": "string",
                      "required": true
                    },
                    "metric_value": {
                      "type": "string",
                      "required": true
                    },
                    "role_arn": {
                      "type": "string",
                      "required": true
                    }
                  }
                }
              },
              "dynamodb": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "hash_key_field": {
                      "type": "string",
                      "required": true
                    },
                    "hash_key_type": {
                      "type": "string",
                      "optional": true
                    },
                    "hash_key_value": {
                      "type": "string",
                      "required": true
                    },
                    "payload_field": {
                      "type": "string",
                      "optional": true
                    },
                    "range_key_field": {
                      "type": "string",
                      "optional": true
                    },
                    "range_key_type": {
                      "type": "string",
                      "optional": true
                    },
                    "range_key_value": {
                      "type": "string",
                      "optional": true
                    },
                    "role_arn": {
                      "type": "string",
                      "required": true
                    },
                    "table_name": {
                      "type": "string",
                      "required": true
                    }
                  }
                }
              },
              "elasticsearch": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "endpoint": {
                      "type": "string",
                      "required": true
                    },
                    "id": {
                      "type": "string",
                      "required": true
                    },
                    "index": {
                      "type": "string",
                      "required": true
                    },
                    "role_arn": {
                      "type": "string",
                      "required": true
                    },
                    "type": {
                      "type": "string",
                      "required": true
                    }
                  }
                }
              },
              "firehose": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "delivery_stream_name": {
                      "type": "string",
                      "required": true
                    },
                    "role_arn": {
                      "type": "string",
                      "required": true
                    },
                    "separator": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              },
              "kinesis": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "partition_key": {
                      "type": "string",
                      "optional": true
                    },
                    "role_arn": {
                      "type": "string",
                      "required": true
                    },
                    "stream_name": {
                      "type": "string",
                      "required": true
                    }
                  }
                }
              },
              "lambda": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "function_arn": {
                      "type": "string",
                      "required": true
                    }
                  }
                }
              },
              "republish": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "role_arn": {
                      "type": "string",
                      "required": true
                    },
                    "topic": {
                      "type": "string",
                      "required": true
                    }
                  }
                }
              },
              "s3": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "bucket_name": {
                      "type": "string",
                      "required": true
                    },
                    "key": {
                      "type": "string",
                      "required": true
                    },
                    "role_arn": {
                      "type": "string",
                      "required": true
                    }
                  }
                }
              },
              "sns": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "message_format": {
                      "type": "string",
                      "optional": true
                    },
                    "role_arn": {
                      "type": "string",
                      "required": true
                    },
                    "target_arn": {
                      "type": "string",
                      "required": true
                    }
                  }
                }
              },
              "sqs": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "queue_url": {
                      "type": "string",
                      "required": true
                    },
                    "role_arn": {
                      "type": "string",
                      "required": true
                    },
                    "use_base64": {
                      "type": "bool",
                      "required": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_key_pair": {
          "version": 1,
          "block": {
            "attributes": {
              "fingerprint": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "key_name": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "key_name_prefix": {
                "type": "string",
                "optional": true
              },
              "key_pair_id": {
                "type": "string",
                "computed": true
              },
              "public_key": {
                "type": "string",
                "required": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              }
            }
          }
        },
        "aws_kinesis_analytics_application": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "code": {
                "type": "string",
                "optional": true
              },
              "create_timestamp": {
                "type": "string",
                "computed": true
              },
              "description": {
                "type": "string",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "last_update_timestamp": {
                "type": "string",
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "status": {
                "type": "string",
                "computed": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              },
              "version": {
                "type": "number",
                "computed": true
              }
            },
            "block_types": {
              "cloudwatch_logging_options": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "computed": true
                    },
                    "log_stream_arn": {
                      "type": "string",
                      "required": true
                    },
                    "role_arn": {
                      "type": "string",
                      "required": true
                    }
                  }
                },
                "max_items": 1
              },
              "inputs": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "computed": true
                    },
                    "name_prefix": {
                      "type": "string",
                      "required": true
                    },
                    "starting_position_configuration": {
                      "type": [
                        "list",
                        [
                          "object",
                          {
                            "starting_position": "string"
                          }
                        ]
                      ],
                      "computed": true
                    },
                    "stream_names": {
                      "type": [
                        "set",
                        "string"
                      ],
                      "computed": true
                    }
                  },
                  "block_types": {
                    "kinesis_firehose": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "resource_arn": {
                            "type": "string",
                            "required": true
                          },
                          "role_arn": {
                            "type": "string",
                            "required": true
                          }
                        }
                      },
                      "max_items": 1
                    },
                    "kinesis_stream": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "resource_arn": {
                            "type": "string",
                            "required": true
                          },
                          "role_arn": {
                            "type": "string",
                            "required": true
                          }
                        }
                      },
                      "max_items": 1
                    },
                    "parallelism": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "count": {
                            "type": "number",
                            "required": true
                          }
                        }
                      },
                      "max_items": 1
                    },
                    "processing_configuration": {
                      "nesting_mode": "list",
                      "block": {
                        "block_types": {
                          "lambda": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "resource_arn": {
                                  "type": "string",
                                  "required": true
                                },
                                "role_arn": {
                                  "type": "string",
                                  "required": true
                                }
                              }
                            },
                            "min_items": 1,
                            "max_items": 1
                          }
                        }
                      },
                      "max_items": 1
                    },
                    "schema": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "record_encoding": {
                            "type": "string",
                            "optional": true
                          }
                        },
                        "block_types": {
                          "record_columns": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "mapping": {
                                  "type": "string",
                                  "optional": true
                                },
                                "name": {
                                  "type": "string",
                                  "required": true
                                },
                                "sql_type": {
                                  "type": "string",
                                  "required": true
                                }
                              }
                            },
                            "min_items": 1
                          },
                          "record_format": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "record_format_type": {
                                  "type": "string",
                                  "computed": true
                                }
                              },
                              "block_types": {
                                "mapping_parameters": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "block_types": {
                                      "csv": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "record_column_delimiter": {
                                              "type": "string",
                                              "required": true
                                            },
                                            "record_row_delimiter": {
                                              "type": "string",
                                              "required": true
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "json": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "record_row_path": {
                                              "type": "string",
                                              "required": true
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      }
                                    }
                                  },
                                  "max_items": 1
                                }
                              }
                            },
                            "min_items": 1,
                            "max_items": 1
                          }
                        }
                      },
                      "min_items": 1,
                      "max_items": 1
                    }
                  }
                },
                "max_items": 1
              },
              "outputs": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "computed": true
                    },
                    "name": {
                      "type": "string",
                      "required": true
                    }
                  },
                  "block_types": {
                    "kinesis_firehose": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "resource_arn": {
                            "type": "string",
                            "required": true
                          },
                          "role_arn": {
                            "type": "string",
                            "required": true
                          }
                        }
                      },
                      "max_items": 1
                    },
                    "kinesis_stream": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "resource_arn": {
                            "type": "string",
                            "required": true
                          },
                          "role_arn": {
                            "type": "string",
                            "required": true
                          }
                        }
                      },
                      "max_items": 1
                    },
                    "lambda": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "resource_arn": {
                            "type": "string",
                            "required": true
                          },
                          "role_arn": {
                            "type": "string",
                            "required": true
                          }
                        }
                      },
                      "max_items": 1
                    },
                    "schema": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "record_format_type": {
                            "type": "string",
                            "optional": true
                          }
                        }
                      },
                      "min_items": 1,
                      "max_items": 1
                    }
                  }
                },
                "max_items": 3
              },
              "reference_data_sources": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "computed": true
                    },
                    "table_name": {
                      "type": "string",
                      "required": true
                    }
                  },
                  "block_types": {
                    "s3": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "bucket_arn": {
                            "type": "string",
                            "required": true
                          },
                          "file_key": {
                            "type": "string",
                            "required": true
                          },
                          "role_arn": {
                            "type": "string",
                            "required": true
                          }
                        }
                      },
                      "min_items": 1,
                      "max_items": 1
                    },
                    "schema": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "record_encoding": {
                            "type": "string",
                            "optional": true
                          }
                        },
                        "block_types": {
                          "record_columns": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "mapping": {
                                  "type": "string",
                                  "optional": true
                                },
                                "name": {
                                  "type": "string",
                                  "required": true
                                },
                                "sql_type": {
                                  "type": "string",
                                  "required": true
                                }
                              }
                            },
                            "min_items": 1
                          },
                          "record_format": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "record_format_type": {
                                  "type": "string",
                                  "computed": true
                                }
                              },
                              "block_types": {
                                "mapping_parameters": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "block_types": {
                                      "csv": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "record_column_delimiter": {
                                              "type": "string",
                                              "required": true
                                            },
                                            "record_row_delimiter": {
                                              "type": "string",
                                              "required": true
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "json": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "record_row_path": {
                                              "type": "string",
                                              "required": true
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      }
                                    }
                                  },
                                  "max_items": 1
                                }
                              }
                            },
                            "min_items": 1,
                            "max_items": 1
                          }
                        }
                      },
                      "min_items": 1,
                      "max_items": 1
                    }
                  }
                },
                "max_items": 1
              }
            }
          }
        },
        "aws_kinesis_firehose_delivery_stream": {
          "version": 1,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "destination": {
                "type": "string",
                "required": true
              },
              "destination_id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              },
              "version_id": {
                "type": "string",
                "optional": true,
                "computed": true
              }
            },
            "block_types": {
              "elasticsearch_configuration": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "buffering_interval": {
                      "type": "number",
                      "optional": true
                    },
                    "buffering_size": {
                      "type": "number",
                      "optional": true
                    },
                    "domain_arn": {
                      "type": "string",
                      "required": true
                    },
                    "index_name": {
                      "type": "string",
                      "required": true
                    },
                    "index_rotation_period": {
                      "type": "string",
                      "optional": true
                    },
                    "retry_duration": {
                      "type": "number",
                      "optional": true
                    },
                    "role_arn": {
                      "type": "string",
                      "required": true
                    },
                    "s3_backup_mode": {
                      "type": "string",
                      "optional": true
                    },
                    "type_name": {
                      "type": "string",
                      "optional": true
                    }
                  },
                  "block_types": {
                    "cloudwatch_logging_options": {
                      "nesting_mode": "set",
                      "block": {
                        "attributes": {
                          "enabled": {
                            "type": "bool",
                            "optional": true
                          },
                          "log_group_name": {
                            "type": "string",
                            "optional": true
                          },
                          "log_stream_name": {
                            "type": "string",
                            "optional": true
                          }
                        }
                      },
                      "max_items": 1
                    },
                    "processing_configuration": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "enabled": {
                            "type": "bool",
                            "optional": true
                          }
                        },
                        "block_types": {
                          "processors": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "type": {
                                  "type": "string",
                                  "required": true
                                }
                              },
                              "block_types": {
                                "parameters": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "parameter_name": {
                                        "type": "string",
                                        "required": true
                                      },
                                      "parameter_value": {
                                        "type": "string",
                                        "required": true
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "max_items": 1
                    }
                  }
                },
                "max_items": 1
              },
              "extended_s3_configuration": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "bucket_arn": {
                      "type": "string",
                      "required": true
                    },
                    "buffer_interval": {
                      "type": "number",
                      "optional": true
                    },
                    "buffer_size": {
                      "type": "number",
                      "optional": true
                    },
                    "compression_format": {
                      "type": "string",
                      "optional": true
                    },
                    "error_output_prefix": {
                      "type": "string",
                      "optional": true
                    },
                    "kms_key_arn": {
                      "type": "string",
                      "optional": true
                    },
                    "prefix": {
                      "type": "string",
                      "optional": true
                    },
                    "role_arn": {
                      "type": "string",
                      "required": true
                    },
                    "s3_backup_mode": {
                      "type": "string",
                      "optional": true
                    }
                  },
                  "block_types": {
                    "cloudwatch_logging_options": {
                      "nesting_mode": "set",
                      "block": {
                        "attributes": {
                          "enabled": {
                            "type": "bool",
                            "optional": true
                          },
                          "log_group_name": {
                            "type": "string",
                            "optional": true
                          },
                          "log_stream_name": {
                            "type": "string",
                            "optional": true
                          }
                        }
                      },
                      "max_items": 1
                    },
                    "data_format_conversion_configuration": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "enabled": {
                            "type": "bool",
                            "optional": true
                          }
                        },
                        "block_types": {
                          "input_format_configuration": {
                            "nesting_mode": "list",
                            "block": {
                              "block_types": {
                                "deserializer": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "block_types": {
                                      "hive_json_ser_de": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "timestamp_formats": {
                                              "type": [
                                                "list",
                                                "string"
                                              ],
                                              "optional": true
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "open_x_json_ser_de": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "case_insensitive": {
                                              "type": "bool",
                                              "optional": true
                                            },
                                            "column_to_json_key_mappings": {
                                              "type": [
                                                "map",
                                                "string"
                                              ],
                                              "optional": true
                                            },
                                            "convert_dots_in_json_keys_to_underscores": {
                                              "type": "bool",
                                              "optional": true
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      }
                                    }
                                  },
                                  "min_items": 1,
                                  "max_items": 1
                                }
                              }
                            },
                            "min_items": 1,
                            "max_items": 1
                          },
                          "output_format_configuration": {
                            "nesting_mode": "list",
                            "block": {
                              "block_types": {
                                "serializer": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "block_types": {
                                      "orc_ser_de": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "block_size_bytes": {
                                              "type": "number",
                                              "optional": true
                                            },
                                            "bloom_filter_columns": {
                                              "type": [
                                                "list",
                                                "string"
                                              ],
                                              "optional": true
                                            },
                                            "bloom_filter_false_positive_probability": {
                                              "type": "number",
                                              "optional": true
                                            },
                                            "compression": {
                                              "type": "string",
                                              "optional": true
                                            },
                                            "dictionary_key_threshold": {
                                              "type": "number",
                                              "optional": true
                                            },
                                            "enable_padding": {
                                              "type": "bool",
                                              "optional": true
                                            },
                                            "format_version": {
                                              "type": "string",
                                              "optional": true
                                            },
                                            "padding_tolerance": {
                                              "type": "number",
                                              "optional": true
                                            },
                                            "row_index_stride": {
                                              "type": "number",
                                              "optional": true
                                            },
                                            "stripe_size_bytes": {
                                              "type": "number",
                                              "optional": true
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "parquet_ser_de": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "block_size_bytes": {
                                              "type": "number",
                                              "optional": true
                                            },
                                            "compression": {
                                              "type": "string",
                                              "optional": true
                                            },
                                            "enable_dictionary_compression": {
                                              "type": "bool",
                                              "optional": true
                                            },
                                            "max_padding_bytes": {
                                              "type": "number",
                                              "optional": true
                                            },
                                            "page_size_bytes": {
                                              "type": "number",
                                              "optional": true
                                            },
                                            "writer_version": {
                                              "type": "string",
                                              "optional": true
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      }
                                    }
                                  },
                                  "min_items": 1,
                                  "max_items": 1
                                }
                              }
                            },
                            "min_items": 1,
                            "max_items": 1
                          },
                          "schema_configuration": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "catalog_id": {
                                  "type": "string",
                                  "optional": true,
                                  "computed": true
                                },
                                "database_name": {
                                  "type": "string",
                                  "required": true
                                },
                                "region": {
                                  "type": "string",
                                  "optional": true,
                                  "computed": true
                                },
                                "role_arn": {
                                  "type": "string",
                                  "required": true
                                },
                                "table_name": {
                                  "type": "string",
                                  "required": true
                                },
                                "version_id": {
                                  "type": "string",
                                  "optional": true
                                }
                              }
                            },
                            "min_items": 1,
                            "max_items": 1
                          }
                        }
                      },
                      "max_items": 1
                    },
                    "processing_configuration": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "enabled": {
                            "type": "bool",
                            "optional": true
                          }
                        },
                        "block_types": {
                          "processors": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "type": {
                                  "type": "string",
                                  "required": true
                                }
                              },
                              "block_types": {
                                "parameters": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "parameter_name": {
                                        "type": "string",
                                        "required": true
                                      },
                                      "parameter_value": {
                                        "type": "string",
                                        "required": true
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "max_items": 1
                    },
                    "s3_backup_configuration": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "bucket_arn": {
                            "type": "string",
                            "required": true
                          },
                          "buffer_interval": {
                            "type": "number",
                            "optional": true
                          },
                          "buffer_size": {
                            "type": "number",
                            "optional": true
                          },
                          "compression_format": {
                            "type": "string",
                            "optional": true
                          },
                          "kms_key_arn": {
                            "type": "string",
                            "optional": true
                          },
                          "prefix": {
                            "type": "string",
                            "optional": true
                          },
                          "role_arn": {
                            "type": "string",
                            "required": true
                          }
                        },
                        "block_types": {
                          "cloudwatch_logging_options": {
                            "nesting_mode": "set",
                            "block": {
                              "attributes": {
                                "enabled": {
                                  "type": "bool",
                                  "optional": true
                                },
                                "log_group_name": {
                                  "type": "string",
                                  "optional": true
                                },
                                "log_stream_name": {
                                  "type": "string",
                                  "optional": true
                                }
                              }
                            },
                            "max_items": 1
                          }
                        }
                      },
                      "max_items": 1
                    }
                  }
                },
                "max_items": 1
              },
              "kinesis_source_configuration": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "kinesis_stream_arn": {
                      "type": "string",
                      "required": true
                    },
                    "role_arn": {
                      "type": "string",
                      "required": true
                    }
                  }
                },
                "max_items": 1
              },
              "redshift_configuration": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "cluster_jdbcurl": {
                      "type": "string",
                      "required": true
                    },
                    "copy_options": {
                      "type": "string",
                      "optional": true
                    },
                    "data_table_columns": {
                      "type": "string",
                      "optional": true
                    },
                    "data_table_name": {
                      "type": "string",
                      "required": true
                    },
                    "password": {
                      "type": "string",
                      "required": true,
                      "sensitive": true
                    },
                    "retry_duration": {
                      "type": "number",
                      "optional": true
                    },
                    "role_arn": {
                      "type": "string",
                      "required": true
                    },
                    "s3_backup_mode": {
                      "type": "string",
                      "optional": true
                    },
                    "username": {
                      "type": "string",
                      "required": true
                    }
                  },
                  "block_types": {
                    "cloudwatch_logging_options": {
                      "nesting_mode": "set",
                      "block": {
                        "attributes": {
                          "enabled": {
                            "type": "bool",
                            "optional": true
                          },
                          "log_group_name": {
                            "type": "string",
                            "optional": true
                          },
                          "log_stream_name": {
                            "type": "string",
                            "optional": true
                          }
                        }
                      },
                      "max_items": 1
                    },
                    "processing_configuration": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "enabled": {
                            "type": "bool",
                            "optional": true
                          }
                        },
                        "block_types": {
                          "processors": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "type": {
                                  "type": "string",
                                  "required": true
                                }
                              },
                              "block_types": {
                                "parameters": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "parameter_name": {
                                        "type": "string",
                                        "required": true
                                      },
                                      "parameter_value": {
                                        "type": "string",
                                        "required": true
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "max_items": 1
                    },
                    "s3_backup_configuration": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "bucket_arn": {
                            "type": "string",
                            "required": true
                          },
                          "buffer_interval": {
                            "type": "number",
                            "optional": true
                          },
                          "buffer_size": {
                            "type": "number",
                            "optional": true
                          },
                          "compression_format": {
                            "type": "string",
                            "optional": true
                          },
                          "kms_key_arn": {
                            "type": "string",
                            "optional": true
                          },
                          "prefix": {
                            "type": "string",
                            "optional": true
                          },
                          "role_arn": {
                            "type": "string",
                            "required": true
                          }
                        },
                        "block_types": {
                          "cloudwatch_logging_options": {
                            "nesting_mode": "set",
                            "block": {
                              "attributes": {
                                "enabled": {
                                  "type": "bool",
                                  "optional": true
                                },
                                "log_group_name": {
                                  "type": "string",
                                  "optional": true
                                },
                                "log_stream_name": {
                                  "type": "string",
                                  "optional": true
                                }
                              }
                            },
                            "max_items": 1
                          }
                        }
                      },
                      "max_items": 1
                    }
                  }
                },
                "max_items": 1
              },
              "s3_configuration": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "bucket_arn": {
                      "type": "string",
                      "required": true
                    },
                    "buffer_interval": {
                      "type": "number",
                      "optional": true
                    },
                    "buffer_size": {
                      "type": "number",
                      "optional": true
                    },
                    "compression_format": {
                      "type": "string",
                      "optional": true
                    },
                    "kms_key_arn": {
                      "type": "string",
                      "optional": true
                    },
                    "prefix": {
                      "type": "string",
                      "optional": true
                    },
                    "role_arn": {
                      "type": "string",
                      "required": true
                    }
                  },
                  "block_types": {
                    "cloudwatch_logging_options": {
                      "nesting_mode": "set",
                      "block": {
                        "attributes": {
                          "enabled": {
                            "type": "bool",
                            "optional": true
                          },
                          "log_group_name": {
                            "type": "string",
                            "optional": true
                          },
                          "log_stream_name": {
                            "type": "string",
                            "optional": true
                          }
                        }
                      },
                      "max_items": 1
                    }
                  }
                },
                "max_items": 1
              },
              "server_side_encryption": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "enabled": {
                      "type": "bool",
                      "optional": true
                    }
                  }
                },
                "max_items": 1
              },
              "splunk_configuration": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "hec_acknowledgment_timeout": {
                      "type": "number",
                      "optional": true
                    },
                    "hec_endpoint": {
                      "type": "string",
                      "required": true
                    },
                    "hec_endpoint_type": {
                      "type": "string",
                      "optional": true
                    },
                    "hec_token": {
                      "type": "string",
                      "required": true
                    },
                    "retry_duration": {
                      "type": "number",
                      "optional": true
                    },
                    "s3_backup_mode": {
                      "type": "string",
                      "optional": true
                    }
                  },
                  "block_types": {
                    "cloudwatch_logging_options": {
                      "nesting_mode": "set",
                      "block": {
                        "attributes": {
                          "enabled": {
                            "type": "bool",
                            "optional": true
                          },
                          "log_group_name": {
                            "type": "string",
                            "optional": true
                          },
                          "log_stream_name": {
                            "type": "string",
                            "optional": true
                          }
                        }
                      },
                      "max_items": 1
                    },
                    "processing_configuration": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "enabled": {
                            "type": "bool",
                            "optional": true
                          }
                        },
                        "block_types": {
                          "processors": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "type": {
                                  "type": "string",
                                  "required": true
                                }
                              },
                              "block_types": {
                                "parameters": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "parameter_name": {
                                        "type": "string",
                                        "required": true
                                      },
                                      "parameter_value": {
                                        "type": "string",
                                        "required": true
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "max_items": 1
                    }
                  }
                },
                "max_items": 1
              }
            }
          }
        },
        "aws_kinesis_stream": {
          "version": 1,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "encryption_type": {
                "type": "string",
                "optional": true
              },
              "enforce_consumer_deletion": {
                "type": "bool",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "kms_key_id": {
                "type": "string",
                "optional": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "retention_period": {
                "type": "number",
                "optional": true
              },
              "shard_count": {
                "type": "number",
                "required": true
              },
              "shard_level_metrics": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              }
            },
            "block_types": {
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_kms_alias": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "optional": true
              },
              "name_prefix": {
                "type": "string",
                "optional": true
              },
              "target_key_arn": {
                "type": "string",
                "computed": true
              },
              "target_key_id": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "aws_kms_ciphertext": {
          "version": 0,
          "block": {
            "attributes": {
              "ciphertext_blob": {
                "type": "string",
                "computed": true
              },
              "context": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "key_id": {
                "type": "string",
                "required": true
              },
              "plaintext": {
                "type": "string",
                "required": true,
                "sensitive": true
              }
            }
          }
        },
        "aws_kms_external_key": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "deletion_window_in_days": {
                "type": "number",
                "optional": true
              },
              "description": {
                "type": "string",
                "optional": true
              },
              "enabled": {
                "type": "bool",
                "optional": true,
                "computed": true
              },
              "expiration_model": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "key_material_base64": {
                "type": "string",
                "optional": true,
                "sensitive": true
              },
              "key_state": {
                "type": "string",
                "computed": true
              },
              "key_usage": {
                "type": "string",
                "computed": true
              },
              "policy": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              },
              "valid_to": {
                "type": "string",
                "optional": true
              }
            }
          }
        },
        "aws_kms_grant": {
          "version": 0,
          "block": {
            "attributes": {
              "grant_creation_tokens": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true
              },
              "grant_id": {
                "type": "string",
                "computed": true
              },
              "grant_token": {
                "type": "string",
                "computed": true
              },
              "grantee_principal": {
                "type": "string",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "key_id": {
                "type": "string",
                "required": true
              },
              "name": {
                "type": "string",
                "optional": true
              },
              "operations": {
                "type": [
                  "set",
                  "string"
                ],
                "required": true
              },
              "retire_on_delete": {
                "type": "bool",
                "optional": true
              },
              "retiring_principal": {
                "type": "string",
                "optional": true
              }
            },
            "block_types": {
              "constraints": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "encryption_context_equals": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "optional": true
                    },
                    "encryption_context_subset": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_kms_key": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "customer_master_key_spec": {
                "type": "string",
                "optional": true
              },
              "deletion_window_in_days": {
                "type": "number",
                "optional": true
              },
              "description": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "enable_key_rotation": {
                "type": "bool",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "is_enabled": {
                "type": "bool",
                "optional": true
              },
              "key_id": {
                "type": "string",
                "computed": true
              },
              "key_usage": {
                "type": "string",
                "optional": true
              },
              "policy": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              }
            }
          }
        },
        "aws_lambda_alias": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "description": {
                "type": "string",
                "optional": true
              },
              "function_name": {
                "type": "string",
                "required": true
              },
              "function_version": {
                "type": "string",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "invoke_arn": {
                "type": "string",
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              }
            },
            "block_types": {
              "routing_config": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "additional_version_weights": {
                      "type": [
                        "map",
                        "number"
                      ],
                      "optional": true
                    }
                  }
                },
                "max_items": 1
              }
            }
          }
        },
        "aws_lambda_event_source_mapping": {
          "version": 0,
          "block": {
            "attributes": {
              "batch_size": {
                "type": "number",
                "optional": true
              },
              "bisect_batch_on_function_error": {
                "type": "bool",
                "optional": true
              },
              "enabled": {
                "type": "bool",
                "optional": true
              },
              "event_source_arn": {
                "type": "string",
                "required": true
              },
              "function_arn": {
                "type": "string",
                "computed": true
              },
              "function_name": {
                "type": "string",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "last_modified": {
                "type": "string",
                "computed": true
              },
              "last_processing_result": {
                "type": "string",
                "computed": true
              },
              "maximum_batching_window_in_seconds": {
                "type": "number",
                "optional": true
              },
              "maximum_record_age_in_seconds": {
                "type": "number",
                "optional": true,
                "computed": true
              },
              "maximum_retry_attempts": {
                "type": "number",
                "optional": true,
                "computed": true
              },
              "parallelization_factor": {
                "type": "number",
                "optional": true,
                "computed": true
              },
              "starting_position": {
                "type": "string",
                "optional": true
              },
              "starting_position_timestamp": {
                "type": "string",
                "optional": true
              },
              "state": {
                "type": "string",
                "computed": true
              },
              "state_transition_reason": {
                "type": "string",
                "computed": true
              },
              "uuid": {
                "type": "string",
                "computed": true
              }
            },
            "block_types": {
              "destination_config": {
                "nesting_mode": "list",
                "block": {
                  "block_types": {
                    "on_failure": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "destination_arn": {
                            "type": "string",
                            "required": true
                          }
                        }
                      },
                      "max_items": 1
                    }
                  }
                },
                "max_items": 1
              }
            }
          }
        },
        "aws_lambda_function": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "description": {
                "type": "string",
                "optional": true
              },
              "filename": {
                "type": "string",
                "optional": true
              },
              "function_name": {
                "type": "string",
                "required": true
              },
              "handler": {
                "type": "string",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "invoke_arn": {
                "type": "string",
                "computed": true
              },
              "kms_key_arn": {
                "type": "string",
                "optional": true
              },
              "last_modified": {
                "type": "string",
                "computed": true
              },
              "layers": {
                "type": [
                  "list",
                  "string"
                ],
                "optional": true
              },
              "memory_size": {
                "type": "number",
                "optional": true
              },
              "publish": {
                "type": "bool",
                "optional": true
              },
              "qualified_arn": {
                "type": "string",
                "computed": true
              },
              "reserved_concurrent_executions": {
                "type": "number",
                "optional": true
              },
              "role": {
                "type": "string",
                "required": true
              },
              "runtime": {
                "type": "string",
                "required": true
              },
              "s3_bucket": {
                "type": "string",
                "optional": true
              },
              "s3_key": {
                "type": "string",
                "optional": true
              },
              "s3_object_version": {
                "type": "string",
                "optional": true
              },
              "source_code_hash": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "source_code_size": {
                "type": "number",
                "computed": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              },
              "timeout": {
                "type": "number",
                "optional": true
              },
              "version": {
                "type": "string",
                "computed": true
              }
            },
            "block_types": {
              "dead_letter_config": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "target_arn": {
                      "type": "string",
                      "required": true
                    }
                  }
                },
                "max_items": 1
              },
              "environment": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "variables": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "optional": true
                    }
                  }
                },
                "max_items": 1
              },
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              },
              "tracing_config": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "mode": {
                      "type": "string",
                      "required": true
                    }
                  }
                },
                "max_items": 1
              },
              "vpc_config": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "security_group_ids": {
                      "type": [
                        "set",
                        "string"
                      ],
                      "required": true
                    },
                    "subnet_ids": {
                      "type": [
                        "set",
                        "string"
                      ],
                      "required": true
                    },
                    "vpc_id": {
                      "type": "string",
                      "computed": true
                    }
                  }
                },
                "max_items": 1
              }
            }
          }
        },
        "aws_lambda_function_event_invoke_config": {
          "version": 0,
          "block": {
            "attributes": {
              "function_name": {
                "type": "string",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "maximum_event_age_in_seconds": {
                "type": "number",
                "optional": true
              },
              "maximum_retry_attempts": {
                "type": "number",
                "optional": true
              },
              "qualifier": {
                "type": "string",
                "optional": true
              }
            },
            "block_types": {
              "destination_config": {
                "nesting_mode": "list",
                "block": {
                  "block_types": {
                    "on_failure": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "destination": {
                            "type": "string",
                            "required": true
                          }
                        }
                      },
                      "max_items": 1
                    },
                    "on_success": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "destination": {
                            "type": "string",
                            "required": true
                          }
                        }
                      },
                      "max_items": 1
                    }
                  }
                },
                "max_items": 1
              }
            }
          }
        },
        "aws_lambda_layer_version": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "compatible_runtimes": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true
              },
              "created_date": {
                "type": "string",
                "computed": true
              },
              "description": {
                "type": "string",
                "optional": true
              },
              "filename": {
                "type": "string",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "layer_arn": {
                "type": "string",
                "computed": true
              },
              "layer_name": {
                "type": "string",
                "required": true
              },
              "license_info": {
                "type": "string",
                "optional": true
              },
              "s3_bucket": {
                "type": "string",
                "optional": true
              },
              "s3_key": {
                "type": "string",
                "optional": true
              },
              "s3_object_version": {
                "type": "string",
                "optional": true
              },
              "source_code_hash": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "source_code_size": {
                "type": "number",
                "computed": true
              },
              "version": {
                "type": "string",
                "computed": true
              }
            }
          }
        },
        "aws_lambda_permission": {
          "version": 0,
          "block": {
            "attributes": {
              "action": {
                "type": "string",
                "required": true
              },
              "event_source_token": {
                "type": "string",
                "optional": true
              },
              "function_name": {
                "type": "string",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "principal": {
                "type": "string",
                "required": true
              },
              "qualifier": {
                "type": "string",
                "optional": true
              },
              "source_account": {
                "type": "string",
                "optional": true
              },
              "source_arn": {
                "type": "string",
                "optional": true
              },
              "statement_id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "statement_id_prefix": {
                "type": "string",
                "optional": true
              }
            }
          }
        },
        "aws_lambda_provisioned_concurrency_config": {
          "version": 0,
          "block": {
            "attributes": {
              "function_name": {
                "type": "string",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "provisioned_concurrent_executions": {
                "type": "number",
                "required": true
              },
              "qualifier": {
                "type": "string",
                "required": true
              }
            },
            "block_types": {
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_launch_configuration": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "associate_public_ip_address": {
                "type": "bool",
                "optional": true
              },
              "ebs_optimized": {
                "type": "bool",
                "optional": true,
                "computed": true
              },
              "enable_monitoring": {
                "type": "bool",
                "optional": true
              },
              "iam_instance_profile": {
                "type": "string",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "image_id": {
                "type": "string",
                "required": true
              },
              "instance_type": {
                "type": "string",
                "required": true
              },
              "key_name": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name_prefix": {
                "type": "string",
                "optional": true
              },
              "placement_tenancy": {
                "type": "string",
                "optional": true
              },
              "security_groups": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true
              },
              "spot_price": {
                "type": "string",
                "optional": true
              },
              "user_data": {
                "type": "string",
                "optional": true
              },
              "user_data_base64": {
                "type": "string",
                "optional": true
              },
              "vpc_classic_link_id": {
                "type": "string",
                "optional": true
              },
              "vpc_classic_link_security_groups": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true
              }
            },
            "block_types": {
              "ebs_block_device": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "delete_on_termination": {
                      "type": "bool",
                      "optional": true
                    },
                    "device_name": {
                      "type": "string",
                      "required": true
                    },
                    "encrypted": {
                      "type": "bool",
                      "optional": true,
                      "computed": true
                    },
                    "iops": {
                      "type": "number",
                      "optional": true,
                      "computed": true
                    },
                    "no_device": {
                      "type": "bool",
                      "optional": true
                    },
                    "snapshot_id": {
                      "type": "string",
                      "optional": true,
                      "computed": true
                    },
                    "volume_size": {
                      "type": "number",
                      "optional": true,
                      "computed": true
                    },
                    "volume_type": {
                      "type": "string",
                      "optional": true,
                      "computed": true
                    }
                  }
                }
              },
              "ephemeral_block_device": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "device_name": {
                      "type": "string",
                      "required": true
                    },
                    "virtual_name": {
                      "type": "string",
                      "required": true
                    }
                  }
                }
              },
              "root_block_device": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "delete_on_termination": {
                      "type": "bool",
                      "optional": true
                    },
                    "encrypted": {
                      "type": "bool",
                      "optional": true,
                      "computed": true
                    },
                    "iops": {
                      "type": "number",
                      "optional": true,
                      "computed": true
                    },
                    "volume_size": {
                      "type": "number",
                      "optional": true,
                      "computed": true
                    },
                    "volume_type": {
                      "type": "string",
                      "optional": true,
                      "computed": true
                    }
                  }
                },
                "max_items": 1
              }
            }
          }
        },
        "aws_launch_template": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "default_version": {
                "type": "number",
                "computed": true
              },
              "description": {
                "type": "string",
                "optional": true
              },
              "disable_api_termination": {
                "type": "bool",
                "optional": true
              },
              "ebs_optimized": {
                "type": "string",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "image_id": {
                "type": "string",
                "optional": true
              },
              "instance_initiated_shutdown_behavior": {
                "type": "string",
                "optional": true
              },
              "instance_type": {
                "type": "string",
                "optional": true
              },
              "kernel_id": {
                "type": "string",
                "optional": true
              },
              "key_name": {
                "type": "string",
                "optional": true
              },
              "latest_version": {
                "type": "number",
                "computed": true
              },
              "name": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name_prefix": {
                "type": "string",
                "optional": true
              },
              "ram_disk_id": {
                "type": "string",
                "optional": true
              },
              "security_group_names": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              },
              "user_data": {
                "type": "string",
                "optional": true
              },
              "vpc_security_group_ids": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true
              }
            },
            "block_types": {
              "block_device_mappings": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "device_name": {
                      "type": "string",
                      "optional": true
                    },
                    "no_device": {
                      "type": "string",
                      "optional": true
                    },
                    "virtual_name": {
                      "type": "string",
                      "optional": true
                    }
                  },
                  "block_types": {
                    "ebs": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "delete_on_termination": {
                            "type": "string",
                            "optional": true
                          },
                          "encrypted": {
                            "type": "string",
                            "optional": true
                          },
                          "iops": {
                            "type": "number",
                            "optional": true,
                            "computed": true
                          },
                          "kms_key_id": {
                            "type": "string",
                            "optional": true
                          },
                          "snapshot_id": {
                            "type": "string",
                            "optional": true
                          },
                          "volume_size": {
                            "type": "number",
                            "optional": true,
                            "computed": true
                          },
                          "volume_type": {
                            "type": "string",
                            "optional": true,
                            "computed": true
                          }
                        }
                      },
                      "max_items": 1
                    }
                  }
                }
              },
              "capacity_reservation_specification": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "capacity_reservation_preference": {
                      "type": "string",
                      "optional": true
                    }
                  },
                  "block_types": {
                    "capacity_reservation_target": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "capacity_reservation_id": {
                            "type": "string",
                            "optional": true
                          }
                        }
                      },
                      "max_items": 1
                    }
                  }
                },
                "max_items": 1
              },
              "cpu_options": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "core_count": {
                      "type": "number",
                      "optional": true
                    },
                    "threads_per_core": {
                      "type": "number",
                      "optional": true
                    }
                  }
                },
                "max_items": 1
              },
              "credit_specification": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "cpu_credits": {
                      "type": "string",
                      "optional": true
                    }
                  }
                },
                "max_items": 1
              },
              "elastic_gpu_specifications": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "type": {
                      "type": "string",
                      "required": true
                    }
                  }
                }
              },
              "elastic_inference_accelerator": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "type": {
                      "type": "string",
                      "required": true
                    }
                  }
                },
                "max_items": 1
              },
              "iam_instance_profile": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "arn": {
                      "type": "string",
                      "optional": true
                    },
                    "name": {
                      "type": "string",
                      "optional": true
                    }
                  }
                },
                "max_items": 1
              },
              "instance_market_options": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "market_type": {
                      "type": "string",
                      "optional": true
                    }
                  },
                  "block_types": {
                    "spot_options": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "block_duration_minutes": {
                            "type": "number",
                            "optional": true
                          },
                          "instance_interruption_behavior": {
                            "type": "string",
                            "optional": true
                          },
                          "max_price": {
                            "type": "string",
                            "optional": true
                          },
                          "spot_instance_type": {
                            "type": "string",
                            "optional": true
                          },
                          "valid_until": {
                            "type": "string",
                            "optional": true,
                            "computed": true
                          }
                        }
                      },
                      "max_items": 1
                    }
                  }
                },
                "max_items": 1
              },
              "license_specification": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "license_configuration_arn": {
                      "type": "string",
                      "required": true
                    }
                  }
                }
              },
              "monitoring": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "enabled": {
                      "type": "bool",
                      "optional": true
                    }
                  }
                },
                "max_items": 1
              },
              "network_interfaces": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "associate_public_ip_address": {
                      "type": "string",
                      "optional": true
                    },
                    "delete_on_termination": {
                      "type": "bool",
                      "optional": true
                    },
                    "description": {
                      "type": "string",
                      "optional": true
                    },
                    "device_index": {
                      "type": "number",
                      "optional": true
                    },
                    "ipv4_address_count": {
                      "type": "number",
                      "optional": true
                    },
                    "ipv4_addresses": {
                      "type": [
                        "set",
                        "string"
                      ],
                      "optional": true
                    },
                    "ipv6_address_count": {
                      "type": "number",
                      "optional": true
                    },
                    "ipv6_addresses": {
                      "type": [
                        "set",
                        "string"
                      ],
                      "optional": true
                    },
                    "network_interface_id": {
                      "type": "string",
                      "optional": true
                    },
                    "private_ip_address": {
                      "type": "string",
                      "optional": true
                    },
                    "security_groups": {
                      "type": [
                        "set",
                        "string"
                      ],
                      "optional": true
                    },
                    "subnet_id": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              },
              "placement": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "affinity": {
                      "type": "string",
                      "optional": true
                    },
                    "availability_zone": {
                      "type": "string",
                      "optional": true
                    },
                    "group_name": {
                      "type": "string",
                      "optional": true
                    },
                    "host_id": {
                      "type": "string",
                      "optional": true
                    },
                    "spread_domain": {
                      "type": "string",
                      "optional": true
                    },
                    "tenancy": {
                      "type": "string",
                      "optional": true
                    }
                  }
                },
                "max_items": 1
              },
              "tag_specifications": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "resource_type": {
                      "type": "string",
                      "optional": true
                    },
                    "tags": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_lb": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "arn_suffix": {
                "type": "string",
                "computed": true
              },
              "dns_name": {
                "type": "string",
                "computed": true
              },
              "enable_cross_zone_load_balancing": {
                "type": "bool",
                "optional": true
              },
              "enable_deletion_protection": {
                "type": "bool",
                "optional": true
              },
              "enable_http2": {
                "type": "bool",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "idle_timeout": {
                "type": "number",
                "optional": true
              },
              "internal": {
                "type": "bool",
                "optional": true,
                "computed": true
              },
              "ip_address_type": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "load_balancer_type": {
                "type": "string",
                "optional": true
              },
              "name": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name_prefix": {
                "type": "string",
                "optional": true
              },
              "security_groups": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true,
                "computed": true
              },
              "subnets": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              },
              "vpc_id": {
                "type": "string",
                "computed": true
              },
              "zone_id": {
                "type": "string",
                "computed": true
              }
            },
            "block_types": {
              "access_logs": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "bucket": {
                      "type": "string",
                      "required": true
                    },
                    "enabled": {
                      "type": "bool",
                      "optional": true
                    },
                    "prefix": {
                      "type": "string",
                      "optional": true
                    }
                  }
                },
                "max_items": 1
              },
              "subnet_mapping": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "allocation_id": {
                      "type": "string",
                      "optional": true
                    },
                    "subnet_id": {
                      "type": "string",
                      "required": true
                    }
                  }
                }
              },
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_lb_cookie_stickiness_policy": {
          "version": 0,
          "block": {
            "attributes": {
              "cookie_expiration_period": {
                "type": "number",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "lb_port": {
                "type": "number",
                "required": true
              },
              "load_balancer": {
                "type": "string",
                "required": true
              },
              "name": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "aws_lb_listener": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "certificate_arn": {
                "type": "string",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "load_balancer_arn": {
                "type": "string",
                "required": true
              },
              "port": {
                "type": "number",
                "required": true
              },
              "protocol": {
                "type": "string",
                "optional": true
              },
              "ssl_policy": {
                "type": "string",
                "optional": true,
                "computed": true
              }
            },
            "block_types": {
              "default_action": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "order": {
                      "type": "number",
                      "optional": true,
                      "computed": true
                    },
                    "target_group_arn": {
                      "type": "string",
                      "optional": true
                    },
                    "type": {
                      "type": "string",
                      "required": true
                    }
                  },
                  "block_types": {
                    "authenticate_cognito": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "authentication_request_extra_params": {
                            "type": [
                              "map",
                              "string"
                            ],
                            "optional": true
                          },
                          "on_unauthenticated_request": {
                            "type": "string",
                            "optional": true,
                            "computed": true
                          },
                          "scope": {
                            "type": "string",
                            "optional": true,
                            "computed": true
                          },
                          "session_cookie_name": {
                            "type": "string",
                            "optional": true,
                            "computed": true
                          },
                          "session_timeout": {
                            "type": "number",
                            "optional": true,
                            "computed": true
                          },
                          "user_pool_arn": {
                            "type": "string",
                            "required": true
                          },
                          "user_pool_client_id": {
                            "type": "string",
                            "required": true
                          },
                          "user_pool_domain": {
                            "type": "string",
                            "required": true
                          }
                        }
                      },
                      "max_items": 1
                    },
                    "authenticate_oidc": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "authentication_request_extra_params": {
                            "type": [
                              "map",
                              "string"
                            ],
                            "optional": true
                          },
                          "authorization_endpoint": {
                            "type": "string",
                            "required": true
                          },
                          "client_id": {
                            "type": "string",
                            "required": true
                          },
                          "client_secret": {
                            "type": "string",
                            "required": true,
                            "sensitive": true
                          },
                          "issuer": {
                            "type": "string",
                            "required": true
                          },
                          "on_unauthenticated_request": {
                            "type": "string",
                            "optional": true,
                            "computed": true
                          },
                          "scope": {
                            "type": "string",
                            "optional": true,
                            "computed": true
                          },
                          "session_cookie_name": {
                            "type": "string",
                            "optional": true,
                            "computed": true
                          },
                          "session_timeout": {
                            "type": "number",
                            "optional": true,
                            "computed": true
                          },
                          "token_endpoint": {
                            "type": "string",
                            "required": true
                          },
                          "user_info_endpoint": {
                            "type": "string",
                            "required": true
                          }
                        }
                      },
                      "max_items": 1
                    },
                    "fixed_response": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "content_type": {
                            "type": "string",
                            "required": true
                          },
                          "message_body": {
                            "type": "string",
                            "optional": true
                          },
                          "status_code": {
                            "type": "string",
                            "optional": true,
                            "computed": true
                          }
                        }
                      },
                      "max_items": 1
                    },
                    "redirect": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "host": {
                            "type": "string",
                            "optional": true
                          },
                          "path": {
                            "type": "string",
                            "optional": true
                          },
                          "port": {
                            "type": "string",
                            "optional": true
                          },
                          "protocol": {
                            "type": "string",
                            "optional": true
                          },
                          "query": {
                            "type": "string",
                            "optional": true
                          },
                          "status_code": {
                            "type": "string",
                            "required": true
                          }
                        }
                      },
                      "max_items": 1
                    }
                  }
                },
                "min_items": 1
              },
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "read": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_lb_listener_certificate": {
          "version": 0,
          "block": {
            "attributes": {
              "certificate_arn": {
                "type": "string",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "listener_arn": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "aws_lb_listener_rule": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "listener_arn": {
                "type": "string",
                "required": true
              },
              "priority": {
                "type": "number",
                "optional": true,
                "computed": true
              }
            },
            "block_types": {
              "action": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "order": {
                      "type": "number",
                      "optional": true,
                      "computed": true
                    },
                    "target_group_arn": {
                      "type": "string",
                      "optional": true
                    },
                    "type": {
                      "type": "string",
                      "required": true
                    }
                  },
                  "block_types": {
                    "authenticate_cognito": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "authentication_request_extra_params": {
                            "type": [
                              "map",
                              "string"
                            ],
                            "optional": true
                          },
                          "on_unauthenticated_request": {
                            "type": "string",
                            "optional": true,
                            "computed": true
                          },
                          "scope": {
                            "type": "string",
                            "optional": true,
                            "computed": true
                          },
                          "session_cookie_name": {
                            "type": "string",
                            "optional": true,
                            "computed": true
                          },
                          "session_timeout": {
                            "type": "number",
                            "optional": true,
                            "computed": true
                          },
                          "user_pool_arn": {
                            "type": "string",
                            "required": true
                          },
                          "user_pool_client_id": {
                            "type": "string",
                            "required": true
                          },
                          "user_pool_domain": {
                            "type": "string",
                            "required": true
                          }
                        }
                      },
                      "max_items": 1
                    },
                    "authenticate_oidc": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "authentication_request_extra_params": {
                            "type": [
                              "map",
                              "string"
                            ],
                            "optional": true
                          },
                          "authorization_endpoint": {
                            "type": "string",
                            "required": true
                          },
                          "client_id": {
                            "type": "string",
                            "required": true
                          },
                          "client_secret": {
                            "type": "string",
                            "required": true,
                            "sensitive": true
                          },
                          "issuer": {
                            "type": "string",
                            "required": true
                          },
                          "on_unauthenticated_request": {
                            "type": "string",
                            "optional": true,
                            "computed": true
                          },
                          "scope": {
                            "type": "string",
                            "optional": true,
                            "computed": true
                          },
                          "session_cookie_name": {
                            "type": "string",
                            "optional": true,
                            "computed": true
                          },
                          "session_timeout": {
                            "type": "number",
                            "optional": true,
                            "computed": true
                          },
                          "token_endpoint": {
                            "type": "string",
                            "required": true
                          },
                          "user_info_endpoint": {
                            "type": "string",
                            "required": true
                          }
                        }
                      },
                      "max_items": 1
                    },
                    "fixed_response": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "content_type": {
                            "type": "string",
                            "required": true
                          },
                          "message_body": {
                            "type": "string",
                            "optional": true
                          },
                          "status_code": {
                            "type": "string",
                            "optional": true,
                            "computed": true
                          }
                        }
                      },
                      "max_items": 1
                    },
                    "redirect": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "host": {
                            "type": "string",
                            "optional": true
                          },
                          "path": {
                            "type": "string",
                            "optional": true
                          },
                          "port": {
                            "type": "string",
                            "optional": true
                          },
                          "protocol": {
                            "type": "string",
                            "optional": true
                          },
                          "query": {
                            "type": "string",
                            "optional": true
                          },
                          "status_code": {
                            "type": "string",
                            "required": true
                          }
                        }
                      },
                      "max_items": 1
                    }
                  }
                },
                "min_items": 1
              },
              "condition": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "field": {
                      "type": "string",
                      "optional": true,
                      "computed": true
                    },
                    "values": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "optional": true,
                      "computed": true
                    }
                  },
                  "block_types": {
                    "host_header": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "values": {
                            "type": [
                              "set",
                              "string"
                            ],
                            "optional": true,
                            "computed": true
                          }
                        }
                      },
                      "max_items": 1
                    },
                    "http_header": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "http_header_name": {
                            "type": "string",
                            "required": true
                          },
                          "values": {
                            "type": [
                              "set",
                              "string"
                            ],
                            "required": true
                          }
                        }
                      },
                      "max_items": 1
                    },
                    "http_request_method": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "values": {
                            "type": [
                              "set",
                              "string"
                            ],
                            "required": true
                          }
                        }
                      },
                      "max_items": 1
                    },
                    "path_pattern": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "values": {
                            "type": [
                              "set",
                              "string"
                            ],
                            "optional": true,
                            "computed": true
                          }
                        }
                      },
                      "max_items": 1
                    },
                    "query_string": {
                      "nesting_mode": "set",
                      "block": {
                        "attributes": {
                          "key": {
                            "type": "string",
                            "optional": true
                          },
                          "value": {
                            "type": "string",
                            "required": true
                          }
                        }
                      }
                    },
                    "source_ip": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "values": {
                            "type": [
                              "set",
                              "string"
                            ],
                            "required": true
                          }
                        }
                      },
                      "max_items": 1
                    }
                  }
                },
                "min_items": 1
              }
            }
          }
        },
        "aws_lb_ssl_negotiation_policy": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "lb_port": {
                "type": "number",
                "required": true
              },
              "load_balancer": {
                "type": "string",
                "required": true
              },
              "name": {
                "type": "string",
                "required": true
              }
            },
            "block_types": {
              "attribute": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "name": {
                      "type": "string",
                      "required": true
                    },
                    "value": {
                      "type": "string",
                      "required": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_lb_target_group": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "arn_suffix": {
                "type": "string",
                "computed": true
              },
              "deregistration_delay": {
                "type": "number",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "lambda_multi_value_headers_enabled": {
                "type": "bool",
                "optional": true
              },
              "load_balancing_algorithm_type": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name_prefix": {
                "type": "string",
                "optional": true
              },
              "port": {
                "type": "number",
                "optional": true
              },
              "protocol": {
                "type": "string",
                "optional": true
              },
              "proxy_protocol_v2": {
                "type": "bool",
                "optional": true
              },
              "slow_start": {
                "type": "number",
                "optional": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              },
              "target_type": {
                "type": "string",
                "optional": true
              },
              "vpc_id": {
                "type": "string",
                "optional": true
              }
            },
            "block_types": {
              "health_check": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "enabled": {
                      "type": "bool",
                      "optional": true
                    },
                    "healthy_threshold": {
                      "type": "number",
                      "optional": true
                    },
                    "interval": {
                      "type": "number",
                      "optional": true
                    },
                    "matcher": {
                      "type": "string",
                      "optional": true,
                      "computed": true
                    },
                    "path": {
                      "type": "string",
                      "optional": true,
                      "computed": true
                    },
                    "port": {
                      "type": "string",
                      "optional": true
                    },
                    "protocol": {
                      "type": "string",
                      "optional": true
                    },
                    "timeout": {
                      "type": "number",
                      "optional": true,
                      "computed": true
                    },
                    "unhealthy_threshold": {
                      "type": "number",
                      "optional": true
                    }
                  }
                },
                "max_items": 1
              },
              "stickiness": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "cookie_duration": {
                      "type": "number",
                      "optional": true
                    },
                    "enabled": {
                      "type": "bool",
                      "optional": true
                    },
                    "type": {
                      "type": "string",
                      "required": true
                    }
                  }
                },
                "max_items": 1
              }
            }
          }
        },
        "aws_lb_target_group_attachment": {
          "version": 0,
          "block": {
            "attributes": {
              "availability_zone": {
                "type": "string",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "port": {
                "type": "number",
                "optional": true
              },
              "target_group_arn": {
                "type": "string",
                "required": true
              },
              "target_id": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "aws_licensemanager_association": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "license_configuration_arn": {
                "type": "string",
                "required": true
              },
              "resource_arn": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "aws_licensemanager_license_configuration": {
          "version": 0,
          "block": {
            "attributes": {
              "description": {
                "type": "string",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "license_count": {
                "type": "number",
                "optional": true
              },
              "license_count_hard_limit": {
                "type": "bool",
                "optional": true
              },
              "license_counting_type": {
                "type": "string",
                "required": true
              },
              "license_rules": {
                "type": [
                  "list",
                  "string"
                ],
                "optional": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              }
            }
          }
        },
        "aws_lightsail_domain": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "domain_name": {
                "type": "string",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              }
            }
          }
        },
        "aws_lightsail_instance": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "availability_zone": {
                "type": "string",
                "required": true
              },
              "blueprint_id": {
                "type": "string",
                "required": true
              },
              "bundle_id": {
                "type": "string",
                "required": true
              },
              "cpu_count": {
                "type": "number",
                "computed": true
              },
              "created_at": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "ipv6_address": {
                "type": "string",
                "computed": true
              },
              "is_static_ip": {
                "type": "bool",
                "computed": true
              },
              "key_pair_name": {
                "type": "string",
                "optional": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "private_ip_address": {
                "type": "string",
                "computed": true
              },
              "public_ip_address": {
                "type": "string",
                "computed": true
              },
              "ram_size": {
                "type": "number",
                "computed": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              },
              "user_data": {
                "type": "string",
                "optional": true
              },
              "username": {
                "type": "string",
                "computed": true
              }
            }
          }
        },
        "aws_lightsail_key_pair": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "encrypted_fingerprint": {
                "type": "string",
                "computed": true
              },
              "encrypted_private_key": {
                "type": "string",
                "computed": true
              },
              "fingerprint": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name_prefix": {
                "type": "string",
                "optional": true
              },
              "pgp_key": {
                "type": "string",
                "optional": true
              },
              "private_key": {
                "type": "string",
                "computed": true
              },
              "public_key": {
                "type": "string",
                "optional": true,
                "computed": true
              }
            }
          }
        },
        "aws_lightsail_static_ip": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "ip_address": {
                "type": "string",
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "support_code": {
                "type": "string",
                "computed": true
              }
            }
          }
        },
        "aws_lightsail_static_ip_attachment": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "instance_name": {
                "type": "string",
                "required": true
              },
              "ip_address": {
                "type": "string",
                "computed": true
              },
              "static_ip_name": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "aws_load_balancer_backend_server_policy": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "instance_port": {
                "type": "number",
                "required": true
              },
              "load_balancer_name": {
                "type": "string",
                "required": true
              },
              "policy_names": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true
              }
            }
          }
        },
        "aws_load_balancer_listener_policy": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "load_balancer_name": {
                "type": "string",
                "required": true
              },
              "load_balancer_port": {
                "type": "number",
                "required": true
              },
              "policy_names": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true
              }
            }
          }
        },
        "aws_load_balancer_policy": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "load_balancer_name": {
                "type": "string",
                "required": true
              },
              "policy_name": {
                "type": "string",
                "required": true
              },
              "policy_type_name": {
                "type": "string",
                "required": true
              }
            },
            "block_types": {
              "policy_attribute": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "name": {
                      "type": "string",
                      "optional": true
                    },
                    "value": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_macie_member_account_association": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "member_account_id": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "aws_macie_s3_bucket_association": {
          "version": 0,
          "block": {
            "attributes": {
              "bucket_name": {
                "type": "string",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "member_account_id": {
                "type": "string",
                "optional": true
              },
              "prefix": {
                "type": "string",
                "optional": true
              }
            },
            "block_types": {
              "classification_type": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "continuous": {
                      "type": "string",
                      "optional": true
                    },
                    "one_time": {
                      "type": "string",
                      "optional": true
                    }
                  }
                },
                "max_items": 1
              }
            }
          }
        },
        "aws_main_route_table_association": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "original_route_table_id": {
                "type": "string",
                "computed": true
              },
              "route_table_id": {
                "type": "string",
                "required": true
              },
              "vpc_id": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "aws_media_convert_queue": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "description": {
                "type": "string",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "pricing_plan": {
                "type": "string",
                "optional": true
              },
              "status": {
                "type": "string",
                "optional": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              }
            },
            "block_types": {
              "reservation_plan_settings": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "commitment": {
                      "type": "string",
                      "required": true
                    },
                    "renewal_type": {
                      "type": "string",
                      "required": true
                    },
                    "reserved_slots": {
                      "type": "number",
                      "required": true
                    }
                  }
                },
                "max_items": 1
              }
            }
          }
        },
        "aws_media_package_channel": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "channel_id": {
                "type": "string",
                "required": true
              },
              "description": {
                "type": "string",
                "optional": true
              },
              "hls_ingest": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "ingest_endpoints": [
                        "list",
                        [
                          "object",
                          {
                            "password": "string",
                            "url": "string",
                            "username": "string"
                          }
                        ]
                      ]
                    }
                  ]
                ],
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              }
            }
          }
        },
        "aws_media_store_container": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "endpoint": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              }
            }
          }
        },
        "aws_media_store_container_policy": {
          "version": 0,
          "block": {
            "attributes": {
              "container_name": {
                "type": "string",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "policy": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "aws_mq_broker": {
          "version": 0,
          "block": {
            "attributes": {
              "apply_immediately": {
                "type": "bool",
                "optional": true
              },
              "arn": {
                "type": "string",
                "computed": true
              },
              "auto_minor_version_upgrade": {
                "type": "bool",
                "optional": true
              },
              "broker_name": {
                "type": "string",
                "required": true
              },
              "deployment_mode": {
                "type": "string",
                "optional": true
              },
              "engine_type": {
                "type": "string",
                "required": true
              },
              "engine_version": {
                "type": "string",
                "required": true
              },
              "host_instance_type": {
                "type": "string",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "instances": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "console_url": "string",
                      "endpoints": [
                        "list",
                        "string"
                      ],
                      "ip_address": "string"
                    }
                  ]
                ],
                "computed": true
              },
              "publicly_accessible": {
                "type": "bool",
                "optional": true
              },
              "security_groups": {
                "type": [
                  "set",
                  "string"
                ],
                "required": true
              },
              "subnet_ids": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              }
            },
            "block_types": {
              "configuration": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "optional": true,
                      "computed": true
                    },
                    "revision": {
                      "type": "number",
                      "optional": true,
                      "computed": true
                    }
                  }
                },
                "max_items": 1
              },
              "encryption_options": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "kms_key_id": {
                      "type": "string",
                      "optional": true,
                      "computed": true
                    },
                    "use_aws_owned_key": {
                      "type": "bool",
                      "optional": true
                    }
                  }
                },
                "max_items": 1
              },
              "logs": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "audit": {
                      "type": "bool",
                      "optional": true
                    },
                    "general": {
                      "type": "bool",
                      "optional": true
                    }
                  }
                },
                "max_items": 1
              },
              "maintenance_window_start_time": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "day_of_week": {
                      "type": "string",
                      "required": true
                    },
                    "time_of_day": {
                      "type": "string",
                      "required": true
                    },
                    "time_zone": {
                      "type": "string",
                      "required": true
                    }
                  }
                },
                "max_items": 1
              },
              "user": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "console_access": {
                      "type": "bool",
                      "optional": true
                    },
                    "groups": {
                      "type": [
                        "set",
                        "string"
                      ],
                      "optional": true
                    },
                    "password": {
                      "type": "string",
                      "required": true,
                      "sensitive": true
                    },
                    "username": {
                      "type": "string",
                      "required": true
                    }
                  }
                },
                "min_items": 1
              }
            }
          }
        },
        "aws_mq_configuration": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "data": {
                "type": "string",
                "required": true
              },
              "description": {
                "type": "string",
                "optional": true
              },
              "engine_type": {
                "type": "string",
                "required": true
              },
              "engine_version": {
                "type": "string",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "latest_revision": {
                "type": "number",
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              }
            }
          }
        },
        "aws_msk_cluster": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "bootstrap_brokers": {
                "type": "string",
                "computed": true
              },
              "bootstrap_brokers_tls": {
                "type": "string",
                "computed": true
              },
              "cluster_name": {
                "type": "string",
                "required": true
              },
              "current_version": {
                "type": "string",
                "computed": true
              },
              "enhanced_monitoring": {
                "type": "string",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "kafka_version": {
                "type": "string",
                "required": true
              },
              "number_of_broker_nodes": {
                "type": "number",
                "required": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              },
              "zookeeper_connect_string": {
                "type": "string",
                "computed": true
              }
            },
            "block_types": {
              "broker_node_group_info": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "az_distribution": {
                      "type": "string",
                      "optional": true
                    },
                    "client_subnets": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "required": true
                    },
                    "ebs_volume_size": {
                      "type": "number",
                      "required": true
                    },
                    "instance_type": {
                      "type": "string",
                      "required": true
                    },
                    "security_groups": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "required": true
                    }
                  }
                },
                "min_items": 1,
                "max_items": 1
              },
              "client_authentication": {
                "nesting_mode": "list",
                "block": {
                  "block_types": {
                    "tls": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "certificate_authority_arns": {
                            "type": [
                              "set",
                              "string"
                            ],
                            "optional": true
                          }
                        }
                      },
                      "max_items": 1
                    }
                  }
                },
                "max_items": 1
              },
              "configuration_info": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "arn": {
                      "type": "string",
                      "required": true
                    },
                    "revision": {
                      "type": "number",
                      "required": true
                    }
                  }
                },
                "max_items": 1
              },
              "encryption_info": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "encryption_at_rest_kms_key_arn": {
                      "type": "string",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "block_types": {
                    "encryption_in_transit": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "client_broker": {
                            "type": "string",
                            "optional": true
                          },
                          "in_cluster": {
                            "type": "bool",
                            "optional": true
                          }
                        }
                      },
                      "max_items": 1
                    }
                  }
                },
                "max_items": 1
              },
              "open_monitoring": {
                "nesting_mode": "list",
                "block": {
                  "block_types": {
                    "prometheus": {
                      "nesting_mode": "list",
                      "block": {
                        "block_types": {
                          "jmx_exporter": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "enabled_in_broker": {
                                  "type": "bool",
                                  "required": true
                                }
                              }
                            },
                            "max_items": 1
                          },
                          "node_exporter": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "enabled_in_broker": {
                                  "type": "bool",
                                  "required": true
                                }
                              }
                            },
                            "max_items": 1
                          }
                        }
                      },
                      "min_items": 1,
                      "max_items": 1
                    }
                  }
                },
                "max_items": 1
              }
            }
          }
        },
        "aws_msk_configuration": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "description": {
                "type": "string",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "kafka_versions": {
                "type": [
                  "set",
                  "string"
                ],
                "required": true
              },
              "latest_revision": {
                "type": "number",
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "server_properties": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "aws_nat_gateway": {
          "version": 0,
          "block": {
            "attributes": {
              "allocation_id": {
                "type": "string",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "network_interface_id": {
                "type": "string",
                "computed": true
              },
              "private_ip": {
                "type": "string",
                "computed": true
              },
              "public_ip": {
                "type": "string",
                "computed": true
              },
              "subnet_id": {
                "type": "string",
                "required": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              }
            }
          }
        },
        "aws_neptune_cluster": {
          "version": 0,
          "block": {
            "attributes": {
              "apply_immediately": {
                "type": "bool",
                "optional": true,
                "computed": true
              },
              "arn": {
                "type": "string",
                "computed": true
              },
              "availability_zones": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true,
                "computed": true
              },
              "backup_retention_period": {
                "type": "number",
                "optional": true
              },
              "cluster_identifier": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "cluster_identifier_prefix": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "cluster_members": {
                "type": [
                  "set",
                  "string"
                ],
                "computed": true
              },
              "cluster_resource_id": {
                "type": "string",
                "computed": true
              },
              "deletion_protection": {
                "type": "bool",
                "optional": true
              },
              "enable_cloudwatch_logs_exports": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true
              },
              "endpoint": {
                "type": "string",
                "computed": true
              },
              "engine": {
                "type": "string",
                "optional": true
              },
              "engine_version": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "final_snapshot_identifier": {
                "type": "string",
                "optional": true
              },
              "hosted_zone_id": {
                "type": "string",
                "computed": true
              },
              "iam_database_authentication_enabled": {
                "type": "bool",
                "optional": true
              },
              "iam_roles": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "kms_key_arn": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "neptune_cluster_parameter_group_name": {
                "type": "string",
                "optional": true
              },
              "neptune_subnet_group_name": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "port": {
                "type": "number",
                "optional": true
              },
              "preferred_backup_window": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "preferred_maintenance_window": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "reader_endpoint": {
                "type": "string",
                "computed": true
              },
              "replication_source_identifier": {
                "type": "string",
                "optional": true
              },
              "skip_final_snapshot": {
                "type": "bool",
                "optional": true
              },
              "snapshot_identifier": {
                "type": "string",
                "optional": true
              },
              "storage_encrypted": {
                "type": "bool",
                "optional": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              },
              "vpc_security_group_ids": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true,
                "computed": true
              }
            },
            "block_types": {
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_neptune_cluster_instance": {
          "version": 0,
          "block": {
            "attributes": {
              "address": {
                "type": "string",
                "computed": true
              },
              "apply_immediately": {
                "type": "bool",
                "optional": true,
                "computed": true
              },
              "arn": {
                "type": "string",
                "computed": true
              },
              "auto_minor_version_upgrade": {
                "type": "bool",
                "optional": true
              },
              "availability_zone": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "cluster_identifier": {
                "type": "string",
                "required": true
              },
              "dbi_resource_id": {
                "type": "string",
                "computed": true
              },
              "endpoint": {
                "type": "string",
                "computed": true
              },
              "engine": {
                "type": "string",
                "optional": true
              },
              "engine_version": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "identifier": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "identifier_prefix": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "instance_class": {
                "type": "string",
                "required": true
              },
              "kms_key_arn": {
                "type": "string",
                "computed": true
              },
              "neptune_parameter_group_name": {
                "type": "string",
                "optional": true
              },
              "neptune_subnet_group_name": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "port": {
                "type": "number",
                "optional": true
              },
              "preferred_backup_window": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "preferred_maintenance_window": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "promotion_tier": {
                "type": "number",
                "optional": true
              },
              "publicly_accessible": {
                "type": "bool",
                "optional": true
              },
              "storage_encrypted": {
                "type": "bool",
                "computed": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              },
              "writer": {
                "type": "bool",
                "computed": true
              }
            },
            "block_types": {
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_neptune_cluster_parameter_group": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "description": {
                "type": "string",
                "optional": true
              },
              "family": {
                "type": "string",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name_prefix": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              }
            },
            "block_types": {
              "parameter": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "apply_method": {
                      "type": "string",
                      "optional": true
                    },
                    "name": {
                      "type": "string",
                      "required": true
                    },
                    "value": {
                      "type": "string",
                      "required": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_neptune_cluster_snapshot": {
          "version": 0,
          "block": {
            "attributes": {
              "allocated_storage": {
                "type": "number",
                "computed": true
              },
              "availability_zones": {
                "type": [
                  "list",
                  "string"
                ],
                "computed": true
              },
              "db_cluster_identifier": {
                "type": "string",
                "required": true
              },
              "db_cluster_snapshot_arn": {
                "type": "string",
                "computed": true
              },
              "db_cluster_snapshot_identifier": {
                "type": "string",
                "required": true
              },
              "engine": {
                "type": "string",
                "computed": true
              },
              "engine_version": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "kms_key_id": {
                "type": "string",
                "computed": true
              },
              "license_model": {
                "type": "string",
                "computed": true
              },
              "port": {
                "type": "number",
                "computed": true
              },
              "snapshot_type": {
                "type": "string",
                "computed": true
              },
              "source_db_cluster_snapshot_arn": {
                "type": "string",
                "computed": true
              },
              "status": {
                "type": "string",
                "computed": true
              },
              "storage_encrypted": {
                "type": "bool",
                "computed": true
              },
              "vpc_id": {
                "type": "string",
                "computed": true
              }
            },
            "block_types": {
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_neptune_event_subscription": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "customer_aws_id": {
                "type": "string",
                "computed": true
              },
              "enabled": {
                "type": "bool",
                "optional": true
              },
              "event_categories": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name_prefix": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "sns_topic_arn": {
                "type": "string",
                "required": true
              },
              "source_ids": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true
              },
              "source_type": {
                "type": "string",
                "optional": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              }
            },
            "block_types": {
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_neptune_parameter_group": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "description": {
                "type": "string",
                "optional": true
              },
              "family": {
                "type": "string",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              }
            },
            "block_types": {
              "parameter": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "apply_method": {
                      "type": "string",
                      "optional": true
                    },
                    "name": {
                      "type": "string",
                      "required": true
                    },
                    "value": {
                      "type": "string",
                      "required": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_neptune_subnet_group": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "description": {
                "type": "string",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name_prefix": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "subnet_ids": {
                "type": [
                  "set",
                  "string"
                ],
                "required": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              }
            }
          }
        },
        "aws_network_acl": {
          "version": 0,
          "block": {
            "attributes": {
              "egress": {
                "type": [
                  "set",
                  [
                    "object",
                    {
                      "action": "string",
                      "cidr_block": "string",
                      "from_port": "number",
                      "icmp_code": "number",
                      "icmp_type": "number",
                      "ipv6_cidr_block": "string",
                      "protocol": "string",
                      "rule_no": "number",
                      "to_port": "number"
                    }
                  ]
                ],
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "ingress": {
                "type": [
                  "set",
                  [
                    "object",
                    {
                      "action": "string",
                      "cidr_block": "string",
                      "from_port": "number",
                      "icmp_code": "number",
                      "icmp_type": "number",
                      "ipv6_cidr_block": "string",
                      "protocol": "string",
                      "rule_no": "number",
                      "to_port": "number"
                    }
                  ]
                ],
                "optional": true,
                "computed": true
              },
              "owner_id": {
                "type": "string",
                "computed": true
              },
              "subnet_id": {
                "type": "string",
                "optional": true
              },
              "subnet_ids": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              },
              "vpc_id": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "aws_network_acl_rule": {
          "version": 0,
          "block": {
            "attributes": {
              "cidr_block": {
                "type": "string",
                "optional": true
              },
              "egress": {
                "type": "bool",
                "optional": true
              },
              "from_port": {
                "type": "number",
                "optional": true
              },
              "icmp_code": {
                "type": "string",
                "optional": true
              },
              "icmp_type": {
                "type": "string",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "ipv6_cidr_block": {
                "type": "string",
                "optional": true
              },
              "network_acl_id": {
                "type": "string",
                "required": true
              },
              "protocol": {
                "type": "string",
                "required": true
              },
              "rule_action": {
                "type": "string",
                "required": true
              },
              "rule_number": {
                "type": "number",
                "required": true
              },
              "to_port": {
                "type": "number",
                "optional": true
              }
            }
          }
        },
        "aws_network_interface": {
          "version": 0,
          "block": {
            "attributes": {
              "description": {
                "type": "string",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "mac_address": {
                "type": "string",
                "computed": true
              },
              "private_dns_name": {
                "type": "string",
                "computed": true
              },
              "private_ip": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "private_ips": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true,
                "computed": true
              },
              "private_ips_count": {
                "type": "number",
                "optional": true,
                "computed": true
              },
              "security_groups": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true,
                "computed": true
              },
              "source_dest_check": {
                "type": "bool",
                "optional": true
              },
              "subnet_id": {
                "type": "string",
                "required": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              }
            },
            "block_types": {
              "attachment": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "attachment_id": {
                      "type": "string",
                      "computed": true
                    },
                    "device_index": {
                      "type": "number",
                      "required": true
                    },
                    "instance": {
                      "type": "string",
                      "required": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_network_interface_attachment": {
          "version": 0,
          "block": {
            "attributes": {
              "attachment_id": {
                "type": "string",
                "computed": true
              },
              "device_index": {
                "type": "number",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "instance_id": {
                "type": "string",
                "required": true
              },
              "network_interface_id": {
                "type": "string",
                "required": true
              },
              "status": {
                "type": "string",
                "computed": true
              }
            }
          }
        },
        "aws_network_interface_sg_attachment": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "network_interface_id": {
                "type": "string",
                "required": true
              },
              "security_group_id": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "aws_opsworks_application": {
          "version": 0,
          "block": {
            "attributes": {
              "auto_bundle_on_deploy": {
                "type": "string",
                "optional": true
              },
              "aws_flow_ruby_settings": {
                "type": "string",
                "optional": true
              },
              "data_source_arn": {
                "type": "string",
                "optional": true
              },
              "data_source_database_name": {
                "type": "string",
                "optional": true
              },
              "data_source_type": {
                "type": "string",
                "optional": true
              },
              "description": {
                "type": "string",
                "optional": true
              },
              "document_root": {
                "type": "string",
                "optional": true
              },
              "domains": {
                "type": [
                  "list",
                  "string"
                ],
                "optional": true
              },
              "enable_ssl": {
                "type": "bool",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "rails_env": {
                "type": "string",
                "optional": true
              },
              "short_name": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "stack_id": {
                "type": "string",
                "required": true
              },
              "type": {
                "type": "string",
                "required": true
              }
            },
            "block_types": {
              "app_source": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "password": {
                      "type": "string",
                      "optional": true,
                      "sensitive": true
                    },
                    "revision": {
                      "type": "string",
                      "optional": true
                    },
                    "ssh_key": {
                      "type": "string",
                      "optional": true
                    },
                    "type": {
                      "type": "string",
                      "required": true
                    },
                    "url": {
                      "type": "string",
                      "optional": true
                    },
                    "username": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              },
              "environment": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "key": {
                      "type": "string",
                      "required": true
                    },
                    "secure": {
                      "type": "bool",
                      "optional": true
                    },
                    "value": {
                      "type": "string",
                      "required": true
                    }
                  }
                }
              },
              "ssl_configuration": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "certificate": {
                      "type": "string",
                      "required": true
                    },
                    "chain": {
                      "type": "string",
                      "optional": true
                    },
                    "private_key": {
                      "type": "string",
                      "required": true,
                      "sensitive": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_opsworks_custom_layer": {
          "version": 0,
          "block": {
            "attributes": {
              "auto_assign_elastic_ips": {
                "type": "bool",
                "optional": true
              },
              "auto_assign_public_ips": {
                "type": "bool",
                "optional": true
              },
              "auto_healing": {
                "type": "bool",
                "optional": true
              },
              "custom_configure_recipes": {
                "type": [
                  "list",
                  "string"
                ],
                "optional": true
              },
              "custom_deploy_recipes": {
                "type": [
                  "list",
                  "string"
                ],
                "optional": true
              },
              "custom_instance_profile_arn": {
                "type": "string",
                "optional": true
              },
              "custom_json": {
                "type": "string",
                "optional": true
              },
              "custom_security_group_ids": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true
              },
              "custom_setup_recipes": {
                "type": [
                  "list",
                  "string"
                ],
                "optional": true
              },
              "custom_shutdown_recipes": {
                "type": [
                  "list",
                  "string"
                ],
                "optional": true
              },
              "custom_undeploy_recipes": {
                "type": [
                  "list",
                  "string"
                ],
                "optional": true
              },
              "drain_elb_on_shutdown": {
                "type": "bool",
                "optional": true
              },
              "elastic_load_balancer": {
                "type": "string",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "install_updates_on_boot": {
                "type": "bool",
                "optional": true
              },
              "instance_shutdown_timeout": {
                "type": "number",
                "optional": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "short_name": {
                "type": "string",
                "required": true
              },
              "stack_id": {
                "type": "string",
                "required": true
              },
              "system_packages": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true
              },
              "use_ebs_optimized_instances": {
                "type": "bool",
                "optional": true
              }
            },
            "block_types": {
              "ebs_volume": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "encrypted": {
                      "type": "bool",
                      "optional": true
                    },
                    "iops": {
                      "type": "number",
                      "optional": true
                    },
                    "mount_point": {
                      "type": "string",
                      "required": true
                    },
                    "number_of_disks": {
                      "type": "number",
                      "required": true
                    },
                    "raid_level": {
                      "type": "string",
                      "optional": true
                    },
                    "size": {
                      "type": "number",
                      "required": true
                    },
                    "type": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_opsworks_ganglia_layer": {
          "version": 0,
          "block": {
            "attributes": {
              "auto_assign_elastic_ips": {
                "type": "bool",
                "optional": true
              },
              "auto_assign_public_ips": {
                "type": "bool",
                "optional": true
              },
              "auto_healing": {
                "type": "bool",
                "optional": true
              },
              "custom_configure_recipes": {
                "type": [
                  "list",
                  "string"
                ],
                "optional": true
              },
              "custom_deploy_recipes": {
                "type": [
                  "list",
                  "string"
                ],
                "optional": true
              },
              "custom_instance_profile_arn": {
                "type": "string",
                "optional": true
              },
              "custom_json": {
                "type": "string",
                "optional": true
              },
              "custom_security_group_ids": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true
              },
              "custom_setup_recipes": {
                "type": [
                  "list",
                  "string"
                ],
                "optional": true
              },
              "custom_shutdown_recipes": {
                "type": [
                  "list",
                  "string"
                ],
                "optional": true
              },
              "custom_undeploy_recipes": {
                "type": [
                  "list",
                  "string"
                ],
                "optional": true
              },
              "drain_elb_on_shutdown": {
                "type": "bool",
                "optional": true
              },
              "elastic_load_balancer": {
                "type": "string",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "install_updates_on_boot": {
                "type": "bool",
                "optional": true
              },
              "instance_shutdown_timeout": {
                "type": "number",
                "optional": true
              },
              "name": {
                "type": "string",
                "optional": true
              },
              "password": {
                "type": "string",
                "required": true
              },
              "stack_id": {
                "type": "string",
                "required": true
              },
              "system_packages": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true
              },
              "url": {
                "type": "string",
                "optional": true
              },
              "use_ebs_optimized_instances": {
                "type": "bool",
                "optional": true
              },
              "username": {
                "type": "string",
                "optional": true
              }
            },
            "block_types": {
              "ebs_volume": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "encrypted": {
                      "type": "bool",
                      "optional": true
                    },
                    "iops": {
                      "type": "number",
                      "optional": true
                    },
                    "mount_point": {
                      "type": "string",
                      "required": true
                    },
                    "number_of_disks": {
                      "type": "number",
                      "required": true
                    },
                    "raid_level": {
                      "type": "string",
                      "optional": true
                    },
                    "size": {
                      "type": "number",
                      "required": true
                    },
                    "type": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_opsworks_haproxy_layer": {
          "version": 0,
          "block": {
            "attributes": {
              "auto_assign_elastic_ips": {
                "type": "bool",
                "optional": true
              },
              "auto_assign_public_ips": {
                "type": "bool",
                "optional": true
              },
              "auto_healing": {
                "type": "bool",
                "optional": true
              },
              "custom_configure_recipes": {
                "type": [
                  "list",
                  "string"
                ],
                "optional": true
              },
              "custom_deploy_recipes": {
                "type": [
                  "list",
                  "string"
                ],
                "optional": true
              },
              "custom_instance_profile_arn": {
                "type": "string",
                "optional": true
              },
              "custom_json": {
                "type": "string",
                "optional": true
              },
              "custom_security_group_ids": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true
              },
              "custom_setup_recipes": {
                "type": [
                  "list",
                  "string"
                ],
                "optional": true
              },
              "custom_shutdown_recipes": {
                "type": [
                  "list",
                  "string"
                ],
                "optional": true
              },
              "custom_undeploy_recipes": {
                "type": [
                  "list",
                  "string"
                ],
                "optional": true
              },
              "drain_elb_on_shutdown": {
                "type": "bool",
                "optional": true
              },
              "elastic_load_balancer": {
                "type": "string",
                "optional": true
              },
              "healthcheck_method": {
                "type": "string",
                "optional": true
              },
              "healthcheck_url": {
                "type": "string",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "install_updates_on_boot": {
                "type": "bool",
                "optional": true
              },
              "instance_shutdown_timeout": {
                "type": "number",
                "optional": true
              },
              "name": {
                "type": "string",
                "optional": true
              },
              "stack_id": {
                "type": "string",
                "required": true
              },
              "stats_enabled": {
                "type": "bool",
                "optional": true
              },
              "stats_password": {
                "type": "string",
                "required": true
              },
              "stats_url": {
                "type": "string",
                "optional": true
              },
              "stats_user": {
                "type": "string",
                "optional": true
              },
              "system_packages": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true
              },
              "use_ebs_optimized_instances": {
                "type": "bool",
                "optional": true
              }
            },
            "block_types": {
              "ebs_volume": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "encrypted": {
                      "type": "bool",
                      "optional": true
                    },
                    "iops": {
                      "type": "number",
                      "optional": true
                    },
                    "mount_point": {
                      "type": "string",
                      "required": true
                    },
                    "number_of_disks": {
                      "type": "number",
                      "required": true
                    },
                    "raid_level": {
                      "type": "string",
                      "optional": true
                    },
                    "size": {
                      "type": "number",
                      "required": true
                    },
                    "type": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_opsworks_instance": {
          "version": 0,
          "block": {
            "attributes": {
              "agent_version": {
                "type": "string",
                "optional": true
              },
              "ami_id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "architecture": {
                "type": "string",
                "optional": true
              },
              "auto_scaling_type": {
                "type": "string",
                "optional": true
              },
              "availability_zone": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "created_at": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "delete_ebs": {
                "type": "bool",
                "optional": true
              },
              "delete_eip": {
                "type": "bool",
                "optional": true
              },
              "ebs_optimized": {
                "type": "bool",
                "optional": true
              },
              "ec2_instance_id": {
                "type": "string",
                "computed": true
              },
              "ecs_cluster_arn": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "elastic_ip": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "hostname": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "infrastructure_class": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "install_updates_on_boot": {
                "type": "bool",
                "optional": true
              },
              "instance_profile_arn": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "instance_type": {
                "type": "string",
                "optional": true
              },
              "last_service_error_id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "layer_ids": {
                "type": [
                  "list",
                  "string"
                ],
                "required": true
              },
              "os": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "platform": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "private_dns": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "private_ip": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "public_dns": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "public_ip": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "registered_by": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "reported_agent_version": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "reported_os_family": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "reported_os_name": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "reported_os_version": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "root_device_type": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "root_device_volume_id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "security_group_ids": {
                "type": [
                  "list",
                  "string"
                ],
                "optional": true,
                "computed": true
              },
              "ssh_host_dsa_key_fingerprint": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "ssh_host_rsa_key_fingerprint": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "ssh_key_name": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "stack_id": {
                "type": "string",
                "required": true
              },
              "state": {
                "type": "string",
                "optional": true
              },
              "status": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "subnet_id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "tenancy": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "virtualization_type": {
                "type": "string",
                "optional": true,
                "computed": true
              }
            },
            "block_types": {
              "ebs_block_device": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "delete_on_termination": {
                      "type": "bool",
                      "optional": true
                    },
                    "device_name": {
                      "type": "string",
                      "required": true
                    },
                    "iops": {
                      "type": "number",
                      "optional": true,
                      "computed": true
                    },
                    "snapshot_id": {
                      "type": "string",
                      "optional": true,
                      "computed": true
                    },
                    "volume_size": {
                      "type": "number",
                      "optional": true,
                      "computed": true
                    },
                    "volume_type": {
                      "type": "string",
                      "optional": true,
                      "computed": true
                    }
                  }
                }
              },
              "ephemeral_block_device": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "device_name": {
                      "type": "string",
                      "required": true
                    },
                    "virtual_name": {
                      "type": "string",
                      "required": true
                    }
                  }
                }
              },
              "root_block_device": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "delete_on_termination": {
                      "type": "bool",
                      "optional": true
                    },
                    "iops": {
                      "type": "number",
                      "optional": true,
                      "computed": true
                    },
                    "volume_size": {
                      "type": "number",
                      "optional": true,
                      "computed": true
                    },
                    "volume_type": {
                      "type": "string",
                      "optional": true,
                      "computed": true
                    }
                  }
                }
              },
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_opsworks_java_app_layer": {
          "version": 0,
          "block": {
            "attributes": {
              "app_server": {
                "type": "string",
                "optional": true
              },
              "app_server_version": {
                "type": "string",
                "optional": true
              },
              "auto_assign_elastic_ips": {
                "type": "bool",
                "optional": true
              },
              "auto_assign_public_ips": {
                "type": "bool",
                "optional": true
              },
              "auto_healing": {
                "type": "bool",
                "optional": true
              },
              "custom_configure_recipes": {
                "type": [
                  "list",
                  "string"
                ],
                "optional": true
              },
              "custom_deploy_recipes": {
                "type": [
                  "list",
                  "string"
                ],
                "optional": true
              },
              "custom_instance_profile_arn": {
                "type": "string",
                "optional": true
              },
              "custom_json": {
                "type": "string",
                "optional": true
              },
              "custom_security_group_ids": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true
              },
              "custom_setup_recipes": {
                "type": [
                  "list",
                  "string"
                ],
                "optional": true
              },
              "custom_shutdown_recipes": {
                "type": [
                  "list",
                  "string"
                ],
                "optional": true
              },
              "custom_undeploy_recipes": {
                "type": [
                  "list",
                  "string"
                ],
                "optional": true
              },
              "drain_elb_on_shutdown": {
                "type": "bool",
                "optional": true
              },
              "elastic_load_balancer": {
                "type": "string",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "install_updates_on_boot": {
                "type": "bool",
                "optional": true
              },
              "instance_shutdown_timeout": {
                "type": "number",
                "optional": true
              },
              "jvm_options": {
                "type": "string",
                "optional": true
              },
              "jvm_type": {
                "type": "string",
                "optional": true
              },
              "jvm_version": {
                "type": "string",
                "optional": true
              },
              "name": {
                "type": "string",
                "optional": true
              },
              "stack_id": {
                "type": "string",
                "required": true
              },
              "system_packages": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true
              },
              "use_ebs_optimized_instances": {
                "type": "bool",
                "optional": true
              }
            },
            "block_types": {
              "ebs_volume": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "encrypted": {
                      "type": "bool",
                      "optional": true
                    },
                    "iops": {
                      "type": "number",
                      "optional": true
                    },
                    "mount_point": {
                      "type": "string",
                      "required": true
                    },
                    "number_of_disks": {
                      "type": "number",
                      "required": true
                    },
                    "raid_level": {
                      "type": "string",
                      "optional": true
                    },
                    "size": {
                      "type": "number",
                      "required": true
                    },
                    "type": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_opsworks_memcached_layer": {
          "version": 0,
          "block": {
            "attributes": {
              "allocated_memory": {
                "type": "number",
                "optional": true
              },
              "auto_assign_elastic_ips": {
                "type": "bool",
                "optional": true
              },
              "auto_assign_public_ips": {
                "type": "bool",
                "optional": true
              },
              "auto_healing": {
                "type": "bool",
                "optional": true
              },
              "custom_configure_recipes": {
                "type": [
                  "list",
                  "string"
                ],
                "optional": true
              },
              "custom_deploy_recipes": {
                "type": [
                  "list",
                  "string"
                ],
                "optional": true
              },
              "custom_instance_profile_arn": {
                "type": "string",
                "optional": true
              },
              "custom_json": {
                "type": "string",
                "optional": true
              },
              "custom_security_group_ids": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true
              },
              "custom_setup_recipes": {
                "type": [
                  "list",
                  "string"
                ],
                "optional": true
              },
              "custom_shutdown_recipes": {
                "type": [
                  "list",
                  "string"
                ],
                "optional": true
              },
              "custom_undeploy_recipes": {
                "type": [
                  "list",
                  "string"
                ],
                "optional": true
              },
              "drain_elb_on_shutdown": {
                "type": "bool",
                "optional": true
              },
              "elastic_load_balancer": {
                "type": "string",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "install_updates_on_boot": {
                "type": "bool",
                "optional": true
              },
              "instance_shutdown_timeout": {
                "type": "number",
                "optional": true
              },
              "name": {
                "type": "string",
                "optional": true
              },
              "stack_id": {
                "type": "string",
                "required": true
              },
              "system_packages": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true
              },
              "use_ebs_optimized_instances": {
                "type": "bool",
                "optional": true
              }
            },
            "block_types": {
              "ebs_volume": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "encrypted": {
                      "type": "bool",
                      "optional": true
                    },
                    "iops": {
                      "type": "number",
                      "optional": true
                    },
                    "mount_point": {
                      "type": "string",
                      "required": true
                    },
                    "number_of_disks": {
                      "type": "number",
                      "required": true
                    },
                    "raid_level": {
                      "type": "string",
                      "optional": true
                    },
                    "size": {
                      "type": "number",
                      "required": true
                    },
                    "type": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_opsworks_mysql_layer": {
          "version": 0,
          "block": {
            "attributes": {
              "auto_assign_elastic_ips": {
                "type": "bool",
                "optional": true
              },
              "auto_assign_public_ips": {
                "type": "bool",
                "optional": true
              },
              "auto_healing": {
                "type": "bool",
                "optional": true
              },
              "custom_configure_recipes": {
                "type": [
                  "list",
                  "string"
                ],
                "optional": true
              },
              "custom_deploy_recipes": {
                "type": [
                  "list",
                  "string"
                ],
                "optional": true
              },
              "custom_instance_profile_arn": {
                "type": "string",
                "optional": true
              },
              "custom_json": {
                "type": "string",
                "optional": true
              },
              "custom_security_group_ids": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true
              },
              "custom_setup_recipes": {
                "type": [
                  "list",
                  "string"
                ],
                "optional": true
              },
              "custom_shutdown_recipes": {
                "type": [
                  "list",
                  "string"
                ],
                "optional": true
              },
              "custom_undeploy_recipes": {
                "type": [
                  "list",
                  "string"
                ],
                "optional": true
              },
              "drain_elb_on_shutdown": {
                "type": "bool",
                "optional": true
              },
              "elastic_load_balancer": {
                "type": "string",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "install_updates_on_boot": {
                "type": "bool",
                "optional": true
              },
              "instance_shutdown_timeout": {
                "type": "number",
                "optional": true
              },
              "name": {
                "type": "string",
                "optional": true
              },
              "root_password": {
                "type": "string",
                "optional": true
              },
              "root_password_on_all_instances": {
                "type": "bool",
                "optional": true
              },
              "stack_id": {
                "type": "string",
                "required": true
              },
              "system_packages": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true
              },
              "use_ebs_optimized_instances": {
                "type": "bool",
                "optional": true
              }
            },
            "block_types": {
              "ebs_volume": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "encrypted": {
                      "type": "bool",
                      "optional": true
                    },
                    "iops": {
                      "type": "number",
                      "optional": true
                    },
                    "mount_point": {
                      "type": "string",
                      "required": true
                    },
                    "number_of_disks": {
                      "type": "number",
                      "required": true
                    },
                    "raid_level": {
                      "type": "string",
                      "optional": true
                    },
                    "size": {
                      "type": "number",
                      "required": true
                    },
                    "type": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_opsworks_nodejs_app_layer": {
          "version": 0,
          "block": {
            "attributes": {
              "auto_assign_elastic_ips": {
                "type": "bool",
                "optional": true
              },
              "auto_assign_public_ips": {
                "type": "bool",
                "optional": true
              },
              "auto_healing": {
                "type": "bool",
                "optional": true
              },
              "custom_configure_recipes": {
                "type": [
                  "list",
                  "string"
                ],
                "optional": true
              },
              "custom_deploy_recipes": {
                "type": [
                  "list",
                  "string"
                ],
                "optional": true
              },
              "custom_instance_profile_arn": {
                "type": "string",
                "optional": true
              },
              "custom_json": {
                "type": "string",
                "optional": true
              },
              "custom_security_group_ids": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true
              },
              "custom_setup_recipes": {
                "type": [
                  "list",
                  "string"
                ],
                "optional": true
              },
              "custom_shutdown_recipes": {
                "type": [
                  "list",
                  "string"
                ],
                "optional": true
              },
              "custom_undeploy_recipes": {
                "type": [
                  "list",
                  "string"
                ],
                "optional": true
              },
              "drain_elb_on_shutdown": {
                "type": "bool",
                "optional": true
              },
              "elastic_load_balancer": {
                "type": "string",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "install_updates_on_boot": {
                "type": "bool",
                "optional": true
              },
              "instance_shutdown_timeout": {
                "type": "number",
                "optional": true
              },
              "name": {
                "type": "string",
                "optional": true
              },
              "nodejs_version": {
                "type": "string",
                "optional": true
              },
              "stack_id": {
                "type": "string",
                "required": true
              },
              "system_packages": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true
              },
              "use_ebs_optimized_instances": {
                "type": "bool",
                "optional": true
              }
            },
            "block_types": {
              "ebs_volume": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "encrypted": {
                      "type": "bool",
                      "optional": true
                    },
                    "iops": {
                      "type": "number",
                      "optional": true
                    },
                    "mount_point": {
                      "type": "string",
                      "required": true
                    },
                    "number_of_disks": {
                      "type": "number",
                      "required": true
                    },
                    "raid_level": {
                      "type": "string",
                      "optional": true
                    },
                    "size": {
                      "type": "number",
                      "required": true
                    },
                    "type": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_opsworks_permission": {
          "version": 0,
          "block": {
            "attributes": {
              "allow_ssh": {
                "type": "bool",
                "optional": true,
                "computed": true
              },
              "allow_sudo": {
                "type": "bool",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "level": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "stack_id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "user_arn": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "aws_opsworks_php_app_layer": {
          "version": 0,
          "block": {
            "attributes": {
              "auto_assign_elastic_ips": {
                "type": "bool",
                "optional": true
              },
              "auto_assign_public_ips": {
                "type": "bool",
                "optional": true
              },
              "auto_healing": {
                "type": "bool",
                "optional": true
              },
              "custom_configure_recipes": {
                "type": [
                  "list",
                  "string"
                ],
                "optional": true
              },
              "custom_deploy_recipes": {
                "type": [
                  "list",
                  "string"
                ],
                "optional": true
              },
              "custom_instance_profile_arn": {
                "type": "string",
                "optional": true
              },
              "custom_json": {
                "type": "string",
                "optional": true
              },
              "custom_security_group_ids": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true
              },
              "custom_setup_recipes": {
                "type": [
                  "list",
                  "string"
                ],
                "optional": true
              },
              "custom_shutdown_recipes": {
                "type": [
                  "list",
                  "string"
                ],
                "optional": true
              },
              "custom_undeploy_recipes": {
                "type": [
                  "list",
                  "string"
                ],
                "optional": true
              },
              "drain_elb_on_shutdown": {
                "type": "bool",
                "optional": true
              },
              "elastic_load_balancer": {
                "type": "string",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "install_updates_on_boot": {
                "type": "bool",
                "optional": true
              },
              "instance_shutdown_timeout": {
                "type": "number",
                "optional": true
              },
              "name": {
                "type": "string",
                "optional": true
              },
              "stack_id": {
                "type": "string",
                "required": true
              },
              "system_packages": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true
              },
              "use_ebs_optimized_instances": {
                "type": "bool",
                "optional": true
              }
            },
            "block_types": {
              "ebs_volume": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "encrypted": {
                      "type": "bool",
                      "optional": true
                    },
                    "iops": {
                      "type": "number",
                      "optional": true
                    },
                    "mount_point": {
                      "type": "string",
                      "required": true
                    },
                    "number_of_disks": {
                      "type": "number",
                      "required": true
                    },
                    "raid_level": {
                      "type": "string",
                      "optional": true
                    },
                    "size": {
                      "type": "number",
                      "required": true
                    },
                    "type": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_opsworks_rails_app_layer": {
          "version": 0,
          "block": {
            "attributes": {
              "app_server": {
                "type": "string",
                "optional": true
              },
              "auto_assign_elastic_ips": {
                "type": "bool",
                "optional": true
              },
              "auto_assign_public_ips": {
                "type": "bool",
                "optional": true
              },
              "auto_healing": {
                "type": "bool",
                "optional": true
              },
              "bundler_version": {
                "type": "string",
                "optional": true
              },
              "custom_configure_recipes": {
                "type": [
                  "list",
                  "string"
                ],
                "optional": true
              },
              "custom_deploy_recipes": {
                "type": [
                  "list",
                  "string"
                ],
                "optional": true
              },
              "custom_instance_profile_arn": {
                "type": "string",
                "optional": true
              },
              "custom_json": {
                "type": "string",
                "optional": true
              },
              "custom_security_group_ids": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true
              },
              "custom_setup_recipes": {
                "type": [
                  "list",
                  "string"
                ],
                "optional": true
              },
              "custom_shutdown_recipes": {
                "type": [
                  "list",
                  "string"
                ],
                "optional": true
              },
              "custom_undeploy_recipes": {
                "type": [
                  "list",
                  "string"
                ],
                "optional": true
              },
              "drain_elb_on_shutdown": {
                "type": "bool",
                "optional": true
              },
              "elastic_load_balancer": {
                "type": "string",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "install_updates_on_boot": {
                "type": "bool",
                "optional": true
              },
              "instance_shutdown_timeout": {
                "type": "number",
                "optional": true
              },
              "manage_bundler": {
                "type": "bool",
                "optional": true
              },
              "name": {
                "type": "string",
                "optional": true
              },
              "passenger_version": {
                "type": "string",
                "optional": true
              },
              "ruby_version": {
                "type": "string",
                "optional": true
              },
              "rubygems_version": {
                "type": "string",
                "optional": true
              },
              "stack_id": {
                "type": "string",
                "required": true
              },
              "system_packages": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true
              },
              "use_ebs_optimized_instances": {
                "type": "bool",
                "optional": true
              }
            },
            "block_types": {
              "ebs_volume": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "encrypted": {
                      "type": "bool",
                      "optional": true
                    },
                    "iops": {
                      "type": "number",
                      "optional": true
                    },
                    "mount_point": {
                      "type": "string",
                      "required": true
                    },
                    "number_of_disks": {
                      "type": "number",
                      "required": true
                    },
                    "raid_level": {
                      "type": "string",
                      "optional": true
                    },
                    "size": {
                      "type": "number",
                      "required": true
                    },
                    "type": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_opsworks_rds_db_instance": {
          "version": 0,
          "block": {
            "attributes": {
              "db_password": {
                "type": "string",
                "required": true,
                "sensitive": true
              },
              "db_user": {
                "type": "string",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "rds_db_instance_arn": {
                "type": "string",
                "required": true
              },
              "stack_id": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "aws_opsworks_stack": {
          "version": 0,
          "block": {
            "attributes": {
              "agent_version": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "arn": {
                "type": "string",
                "computed": true
              },
              "berkshelf_version": {
                "type": "string",
                "optional": true
              },
              "color": {
                "type": "string",
                "optional": true
              },
              "configuration_manager_name": {
                "type": "string",
                "optional": true
              },
              "configuration_manager_version": {
                "type": "string",
                "optional": true
              },
              "custom_json": {
                "type": "string",
                "optional": true
              },
              "default_availability_zone": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "default_instance_profile_arn": {
                "type": "string",
                "required": true
              },
              "default_os": {
                "type": "string",
                "optional": true
              },
              "default_root_device_type": {
                "type": "string",
                "optional": true
              },
              "default_ssh_key_name": {
                "type": "string",
                "optional": true
              },
              "default_subnet_id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "hostname_theme": {
                "type": "string",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "manage_berkshelf": {
                "type": "bool",
                "optional": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "region": {
                "type": "string",
                "required": true
              },
              "service_role_arn": {
                "type": "string",
                "required": true
              },
              "stack_endpoint": {
                "type": "string",
                "computed": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              },
              "use_custom_cookbooks": {
                "type": "bool",
                "optional": true
              },
              "use_opsworks_security_groups": {
                "type": "bool",
                "optional": true
              },
              "vpc_id": {
                "type": "string",
                "optional": true,
                "computed": true
              }
            },
            "block_types": {
              "custom_cookbooks_source": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "password": {
                      "type": "string",
                      "optional": true,
                      "sensitive": true
                    },
                    "revision": {
                      "type": "string",
                      "optional": true
                    },
                    "ssh_key": {
                      "type": "string",
                      "optional": true
                    },
                    "type": {
                      "type": "string",
                      "required": true
                    },
                    "url": {
                      "type": "string",
                      "required": true
                    },
                    "username": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_opsworks_static_web_layer": {
          "version": 0,
          "block": {
            "attributes": {
              "auto_assign_elastic_ips": {
                "type": "bool",
                "optional": true
              },
              "auto_assign_public_ips": {
                "type": "bool",
                "optional": true
              },
              "auto_healing": {
                "type": "bool",
                "optional": true
              },
              "custom_configure_recipes": {
                "type": [
                  "list",
                  "string"
                ],
                "optional": true
              },
              "custom_deploy_recipes": {
                "type": [
                  "list",
                  "string"
                ],
                "optional": true
              },
              "custom_instance_profile_arn": {
                "type": "string",
                "optional": true
              },
              "custom_json": {
                "type": "string",
                "optional": true
              },
              "custom_security_group_ids": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true
              },
              "custom_setup_recipes": {
                "type": [
                  "list",
                  "string"
                ],
                "optional": true
              },
              "custom_shutdown_recipes": {
                "type": [
                  "list",
                  "string"
                ],
                "optional": true
              },
              "custom_undeploy_recipes": {
                "type": [
                  "list",
                  "string"
                ],
                "optional": true
              },
              "drain_elb_on_shutdown": {
                "type": "bool",
                "optional": true
              },
              "elastic_load_balancer": {
                "type": "string",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "install_updates_on_boot": {
                "type": "bool",
                "optional": true
              },
              "instance_shutdown_timeout": {
                "type": "number",
                "optional": true
              },
              "name": {
                "type": "string",
                "optional": true
              },
              "stack_id": {
                "type": "string",
                "required": true
              },
              "system_packages": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true
              },
              "use_ebs_optimized_instances": {
                "type": "bool",
                "optional": true
              }
            },
            "block_types": {
              "ebs_volume": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "encrypted": {
                      "type": "bool",
                      "optional": true
                    },
                    "iops": {
                      "type": "number",
                      "optional": true
                    },
                    "mount_point": {
                      "type": "string",
                      "required": true
                    },
                    "number_of_disks": {
                      "type": "number",
                      "required": true
                    },
                    "raid_level": {
                      "type": "string",
                      "optional": true
                    },
                    "size": {
                      "type": "number",
                      "required": true
                    },
                    "type": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_opsworks_user_profile": {
          "version": 0,
          "block": {
            "attributes": {
              "allow_self_management": {
                "type": "bool",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "ssh_public_key": {
                "type": "string",
                "optional": true
              },
              "ssh_username": {
                "type": "string",
                "required": true
              },
              "user_arn": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "aws_organizations_account": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "email": {
                "type": "string",
                "required": true
              },
              "iam_user_access_to_billing": {
                "type": "string",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "joined_method": {
                "type": "string",
                "computed": true
              },
              "joined_timestamp": {
                "type": "string",
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "parent_id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "role_name": {
                "type": "string",
                "optional": true
              },
              "status": {
                "type": "string",
                "computed": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              }
            }
          }
        },
        "aws_organizations_organization": {
          "version": 0,
          "block": {
            "attributes": {
              "accounts": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "arn": "string",
                      "email": "string",
                      "id": "string",
                      "name": "string",
                      "status": "string"
                    }
                  ]
                ],
                "computed": true
              },
              "arn": {
                "type": "string",
                "computed": true
              },
              "aws_service_access_principals": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true
              },
              "enabled_policy_types": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true
              },
              "feature_set": {
                "type": "string",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "master_account_arn": {
                "type": "string",
                "computed": true
              },
              "master_account_email": {
                "type": "string",
                "computed": true
              },
              "master_account_id": {
                "type": "string",
                "computed": true
              },
              "non_master_accounts": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "arn": "string",
                      "email": "string",
                      "id": "string",
                      "name": "string",
                      "status": "string"
                    }
                  ]
                ],
                "computed": true
              },
              "roots": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "arn": "string",
                      "id": "string",
                      "name": "string",
                      "policy_types": [
                        "list",
                        [
                          "object",
                          {
                            "status": "string",
                            "type": "string"
                          }
                        ]
                      ]
                    }
                  ]
                ],
                "computed": true
              }
            }
          }
        },
        "aws_organizations_organizational_unit": {
          "version": 0,
          "block": {
            "attributes": {
              "accounts": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "arn": "string",
                      "email": "string",
                      "id": "string",
                      "name": "string"
                    }
                  ]
                ],
                "computed": true
              },
              "arn": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "parent_id": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "aws_organizations_policy": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "content": {
                "type": "string",
                "required": true
              },
              "description": {
                "type": "string",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "type": {
                "type": "string",
                "optional": true
              }
            }
          }
        },
        "aws_organizations_policy_attachment": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "policy_id": {
                "type": "string",
                "required": true
              },
              "target_id": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "aws_pinpoint_adm_channel": {
          "version": 0,
          "block": {
            "attributes": {
              "application_id": {
                "type": "string",
                "required": true
              },
              "client_id": {
                "type": "string",
                "required": true,
                "sensitive": true
              },
              "client_secret": {
                "type": "string",
                "required": true,
                "sensitive": true
              },
              "enabled": {
                "type": "bool",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              }
            }
          }
        },
        "aws_pinpoint_apns_channel": {
          "version": 0,
          "block": {
            "attributes": {
              "application_id": {
                "type": "string",
                "required": true
              },
              "bundle_id": {
                "type": "string",
                "optional": true,
                "sensitive": true
              },
              "certificate": {
                "type": "string",
                "optional": true,
                "sensitive": true
              },
              "default_authentication_method": {
                "type": "string",
                "optional": true
              },
              "enabled": {
                "type": "bool",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "private_key": {
                "type": "string",
                "optional": true,
                "sensitive": true
              },
              "team_id": {
                "type": "string",
                "optional": true,
                "sensitive": true
              },
              "token_key": {
                "type": "string",
                "optional": true,
                "sensitive": true
              },
              "token_key_id": {
                "type": "string",
                "optional": true,
                "sensitive": true
              }
            }
          }
        },
        "aws_pinpoint_apns_sandbox_channel": {
          "version": 0,
          "block": {
            "attributes": {
              "application_id": {
                "type": "string",
                "required": true
              },
              "bundle_id": {
                "type": "string",
                "optional": true,
                "sensitive": true
              },
              "certificate": {
                "type": "string",
                "optional": true,
                "sensitive": true
              },
              "default_authentication_method": {
                "type": "string",
                "optional": true
              },
              "enabled": {
                "type": "bool",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "private_key": {
                "type": "string",
                "optional": true,
                "sensitive": true
              },
              "team_id": {
                "type": "string",
                "optional": true,
                "sensitive": true
              },
              "token_key": {
                "type": "string",
                "optional": true,
                "sensitive": true
              },
              "token_key_id": {
                "type": "string",
                "optional": true,
                "sensitive": true
              }
            }
          }
        },
        "aws_pinpoint_apns_voip_channel": {
          "version": 0,
          "block": {
            "attributes": {
              "application_id": {
                "type": "string",
                "required": true
              },
              "bundle_id": {
                "type": "string",
                "optional": true,
                "sensitive": true
              },
              "certificate": {
                "type": "string",
                "optional": true,
                "sensitive": true
              },
              "default_authentication_method": {
                "type": "string",
                "optional": true
              },
              "enabled": {
                "type": "bool",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "private_key": {
                "type": "string",
                "optional": true,
                "sensitive": true
              },
              "team_id": {
                "type": "string",
                "optional": true,
                "sensitive": true
              },
              "token_key": {
                "type": "string",
                "optional": true,
                "sensitive": true
              },
              "token_key_id": {
                "type": "string",
                "optional": true,
                "sensitive": true
              }
            }
          }
        },
        "aws_pinpoint_apns_voip_sandbox_channel": {
          "version": 0,
          "block": {
            "attributes": {
              "application_id": {
                "type": "string",
                "required": true
              },
              "bundle_id": {
                "type": "string",
                "optional": true,
                "sensitive": true
              },
              "certificate": {
                "type": "string",
                "optional": true,
                "sensitive": true
              },
              "default_authentication_method": {
                "type": "string",
                "optional": true
              },
              "enabled": {
                "type": "bool",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "private_key": {
                "type": "string",
                "optional": true,
                "sensitive": true
              },
              "team_id": {
                "type": "string",
                "optional": true,
                "sensitive": true
              },
              "token_key": {
                "type": "string",
                "optional": true,
                "sensitive": true
              },
              "token_key_id": {
                "type": "string",
                "optional": true,
                "sensitive": true
              }
            }
          }
        },
        "aws_pinpoint_app": {
          "version": 0,
          "block": {
            "attributes": {
              "application_id": {
                "type": "string",
                "computed": true
              },
              "arn": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name_prefix": {
                "type": "string",
                "optional": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              }
            },
            "block_types": {
              "campaign_hook": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "lambda_function_name": {
                      "type": "string",
                      "optional": true
                    },
                    "mode": {
                      "type": "string",
                      "optional": true
                    },
                    "web_url": {
                      "type": "string",
                      "optional": true
                    }
                  }
                },
                "max_items": 1
              },
              "limits": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "daily": {
                      "type": "number",
                      "optional": true
                    },
                    "maximum_duration": {
                      "type": "number",
                      "optional": true
                    },
                    "messages_per_second": {
                      "type": "number",
                      "optional": true
                    },
                    "total": {
                      "type": "number",
                      "optional": true
                    }
                  }
                },
                "max_items": 1
              },
              "quiet_time": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "end": {
                      "type": "string",
                      "optional": true
                    },
                    "start": {
                      "type": "string",
                      "optional": true
                    }
                  }
                },
                "max_items": 1
              }
            }
          }
        },
        "aws_pinpoint_baidu_channel": {
          "version": 0,
          "block": {
            "attributes": {
              "api_key": {
                "type": "string",
                "required": true,
                "sensitive": true
              },
              "application_id": {
                "type": "string",
                "required": true
              },
              "enabled": {
                "type": "bool",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "secret_key": {
                "type": "string",
                "required": true,
                "sensitive": true
              }
            }
          }
        },
        "aws_pinpoint_email_channel": {
          "version": 0,
          "block": {
            "attributes": {
              "application_id": {
                "type": "string",
                "required": true
              },
              "enabled": {
                "type": "bool",
                "optional": true
              },
              "from_address": {
                "type": "string",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "identity": {
                "type": "string",
                "required": true
              },
              "messages_per_second": {
                "type": "number",
                "computed": true
              },
              "role_arn": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "aws_pinpoint_event_stream": {
          "version": 0,
          "block": {
            "attributes": {
              "application_id": {
                "type": "string",
                "required": true
              },
              "destination_stream_arn": {
                "type": "string",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "role_arn": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "aws_pinpoint_gcm_channel": {
          "version": 0,
          "block": {
            "attributes": {
              "api_key": {
                "type": "string",
                "required": true,
                "sensitive": true
              },
              "application_id": {
                "type": "string",
                "required": true
              },
              "enabled": {
                "type": "bool",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              }
            }
          }
        },
        "aws_pinpoint_sms_channel": {
          "version": 0,
          "block": {
            "attributes": {
              "application_id": {
                "type": "string",
                "required": true
              },
              "enabled": {
                "type": "bool",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "promotional_messages_per_second": {
                "type": "number",
                "computed": true
              },
              "sender_id": {
                "type": "string",
                "optional": true
              },
              "short_code": {
                "type": "string",
                "optional": true
              },
              "transactional_messages_per_second": {
                "type": "number",
                "computed": true
              }
            }
          }
        },
        "aws_placement_group": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "placement_group_id": {
                "type": "string",
                "computed": true
              },
              "strategy": {
                "type": "string",
                "required": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              }
            }
          }
        },
        "aws_proxy_protocol_policy": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "instance_ports": {
                "type": [
                  "set",
                  "string"
                ],
                "required": true
              },
              "load_balancer": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "aws_qldb_ledger": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "deletion_protection": {
                "type": "bool",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              }
            }
          }
        },
        "aws_quicksight_group": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "aws_account_id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "description": {
                "type": "string",
                "optional": true
              },
              "group_name": {
                "type": "string",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "namespace": {
                "type": "string",
                "optional": true
              }
            }
          }
        },
        "aws_quicksight_user": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "aws_account_id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "email": {
                "type": "string",
                "required": true
              },
              "iam_arn": {
                "type": "string",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "identity_type": {
                "type": "string",
                "required": true
              },
              "namespace": {
                "type": "string",
                "optional": true
              },
              "session_name": {
                "type": "string",
                "optional": true
              },
              "user_name": {
                "type": "string",
                "optional": true
              },
              "user_role": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "aws_ram_principal_association": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "principal": {
                "type": "string",
                "required": true
              },
              "resource_share_arn": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "aws_ram_resource_association": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "resource_arn": {
                "type": "string",
                "required": true
              },
              "resource_share_arn": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "aws_ram_resource_share": {
          "version": 0,
          "block": {
            "attributes": {
              "allow_external_principals": {
                "type": "bool",
                "optional": true
              },
              "arn": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              }
            },
            "block_types": {
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_ram_resource_share_accepter": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "invitation_arn": {
                "type": "string",
                "computed": true
              },
              "receiver_account_id": {
                "type": "string",
                "computed": true
              },
              "resources": {
                "type": [
                  "list",
                  "string"
                ],
                "computed": true
              },
              "sender_account_id": {
                "type": "string",
                "computed": true
              },
              "share_arn": {
                "type": "string",
                "required": true
              },
              "share_id": {
                "type": "string",
                "computed": true
              },
              "share_name": {
                "type": "string",
                "computed": true
              },
              "status": {
                "type": "string",
                "computed": true
              }
            },
            "block_types": {
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_rds_cluster": {
          "version": 0,
          "block": {
            "attributes": {
              "apply_immediately": {
                "type": "bool",
                "optional": true,
                "computed": true
              },
              "arn": {
                "type": "string",
                "computed": true
              },
              "availability_zones": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true,
                "computed": true
              },
              "backtrack_window": {
                "type": "number",
                "optional": true
              },
              "backup_retention_period": {
                "type": "number",
                "optional": true
              },
              "cluster_identifier": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "cluster_identifier_prefix": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "cluster_members": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true,
                "computed": true
              },
              "cluster_resource_id": {
                "type": "string",
                "computed": true
              },
              "copy_tags_to_snapshot": {
                "type": "bool",
                "optional": true
              },
              "database_name": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "db_cluster_parameter_group_name": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "db_subnet_group_name": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "deletion_protection": {
                "type": "bool",
                "optional": true
              },
              "enable_http_endpoint": {
                "type": "bool",
                "optional": true
              },
              "enabled_cloudwatch_logs_exports": {
                "type": [
                  "list",
                  "string"
                ],
                "optional": true
              },
              "endpoint": {
                "type": "string",
                "computed": true
              },
              "engine": {
                "type": "string",
                "optional": true
              },
              "engine_mode": {
                "type": "string",
                "optional": true
              },
              "engine_version": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "final_snapshot_identifier": {
                "type": "string",
                "optional": true
              },
              "global_cluster_identifier": {
                "type": "string",
                "optional": true
              },
              "hosted_zone_id": {
                "type": "string",
                "computed": true
              },
              "iam_database_authentication_enabled": {
                "type": "bool",
                "optional": true
              },
              "iam_roles": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "kms_key_id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "master_password": {
                "type": "string",
                "optional": true,
                "sensitive": true
              },
              "master_username": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "port": {
                "type": "number",
                "optional": true,
                "computed": true
              },
              "preferred_backup_window": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "preferred_maintenance_window": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "reader_endpoint": {
                "type": "string",
                "computed": true
              },
              "replication_source_identifier": {
                "type": "string",
                "optional": true
              },
              "skip_final_snapshot": {
                "type": "bool",
                "optional": true
              },
              "snapshot_identifier": {
                "type": "string",
                "optional": true
              },
              "source_region": {
                "type": "string",
                "optional": true
              },
              "storage_encrypted": {
                "type": "bool",
                "optional": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              },
              "vpc_security_group_ids": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true,
                "computed": true
              }
            },
            "block_types": {
              "s3_import": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "bucket_name": {
                      "type": "string",
                      "required": true
                    },
                    "bucket_prefix": {
                      "type": "string",
                      "optional": true
                    },
                    "ingestion_role": {
                      "type": "string",
                      "required": true
                    },
                    "source_engine": {
                      "type": "string",
                      "required": true
                    },
                    "source_engine_version": {
                      "type": "string",
                      "required": true
                    }
                  }
                },
                "max_items": 1
              },
              "scaling_configuration": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "auto_pause": {
                      "type": "bool",
                      "optional": true
                    },
                    "max_capacity": {
                      "type": "number",
                      "optional": true
                    },
                    "min_capacity": {
                      "type": "number",
                      "optional": true
                    },
                    "seconds_until_auto_pause": {
                      "type": "number",
                      "optional": true
                    },
                    "timeout_action": {
                      "type": "string",
                      "optional": true
                    }
                  }
                },
                "max_items": 1
              },
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_rds_cluster_endpoint": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "cluster_endpoint_identifier": {
                "type": "string",
                "required": true
              },
              "cluster_identifier": {
                "type": "string",
                "required": true
              },
              "custom_endpoint_type": {
                "type": "string",
                "required": true
              },
              "endpoint": {
                "type": "string",
                "computed": true
              },
              "excluded_members": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "static_members": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              }
            }
          }
        },
        "aws_rds_cluster_instance": {
          "version": 0,
          "block": {
            "attributes": {
              "apply_immediately": {
                "type": "bool",
                "optional": true,
                "computed": true
              },
              "arn": {
                "type": "string",
                "computed": true
              },
              "auto_minor_version_upgrade": {
                "type": "bool",
                "optional": true
              },
              "availability_zone": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "ca_cert_identifier": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "cluster_identifier": {
                "type": "string",
                "required": true
              },
              "copy_tags_to_snapshot": {
                "type": "bool",
                "optional": true
              },
              "db_parameter_group_name": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "db_subnet_group_name": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "dbi_resource_id": {
                "type": "string",
                "computed": true
              },
              "endpoint": {
                "type": "string",
                "computed": true
              },
              "engine": {
                "type": "string",
                "optional": true
              },
              "engine_version": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "identifier": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "identifier_prefix": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "instance_class": {
                "type": "string",
                "required": true
              },
              "kms_key_id": {
                "type": "string",
                "computed": true
              },
              "monitoring_interval": {
                "type": "number",
                "optional": true
              },
              "monitoring_role_arn": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "performance_insights_enabled": {
                "type": "bool",
                "optional": true,
                "computed": true
              },
              "performance_insights_kms_key_id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "port": {
                "type": "number",
                "computed": true
              },
              "preferred_backup_window": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "preferred_maintenance_window": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "promotion_tier": {
                "type": "number",
                "optional": true
              },
              "publicly_accessible": {
                "type": "bool",
                "optional": true
              },
              "storage_encrypted": {
                "type": "bool",
                "computed": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              },
              "writer": {
                "type": "bool",
                "computed": true
              }
            },
            "block_types": {
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_rds_cluster_parameter_group": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "description": {
                "type": "string",
                "optional": true
              },
              "family": {
                "type": "string",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name_prefix": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              }
            },
            "block_types": {
              "parameter": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "apply_method": {
                      "type": "string",
                      "optional": true
                    },
                    "name": {
                      "type": "string",
                      "required": true
                    },
                    "value": {
                      "type": "string",
                      "required": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_rds_global_cluster": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "database_name": {
                "type": "string",
                "optional": true
              },
              "deletion_protection": {
                "type": "bool",
                "optional": true
              },
              "engine": {
                "type": "string",
                "optional": true
              },
              "engine_version": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "global_cluster_identifier": {
                "type": "string",
                "required": true
              },
              "global_cluster_resource_id": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "storage_encrypted": {
                "type": "bool",
                "optional": true
              }
            }
          }
        },
        "aws_redshift_cluster": {
          "version": 0,
          "block": {
            "attributes": {
              "allow_version_upgrade": {
                "type": "bool",
                "optional": true
              },
              "arn": {
                "type": "string",
                "computed": true
              },
              "automated_snapshot_retention_period": {
                "type": "number",
                "optional": true
              },
              "availability_zone": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "bucket_name": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "cluster_identifier": {
                "type": "string",
                "required": true
              },
              "cluster_parameter_group_name": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "cluster_public_key": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "cluster_revision_number": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "cluster_security_groups": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true,
                "computed": true
              },
              "cluster_subnet_group_name": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "cluster_type": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "cluster_version": {
                "type": "string",
                "optional": true
              },
              "database_name": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "dns_name": {
                "type": "string",
                "computed": true
              },
              "elastic_ip": {
                "type": "string",
                "optional": true
              },
              "enable_logging": {
                "type": "bool",
                "optional": true,
                "computed": true
              },
              "encrypted": {
                "type": "bool",
                "optional": true
              },
              "endpoint": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "enhanced_vpc_routing": {
                "type": "bool",
                "optional": true,
                "computed": true
              },
              "final_snapshot_identifier": {
                "type": "string",
                "optional": true
              },
              "iam_roles": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "kms_key_id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "master_password": {
                "type": "string",
                "optional": true,
                "sensitive": true
              },
              "master_username": {
                "type": "string",
                "optional": true
              },
              "node_type": {
                "type": "string",
                "required": true
              },
              "number_of_nodes": {
                "type": "number",
                "optional": true
              },
              "owner_account": {
                "type": "string",
                "optional": true
              },
              "port": {
                "type": "number",
                "optional": true
              },
              "preferred_maintenance_window": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "publicly_accessible": {
                "type": "bool",
                "optional": true
              },
              "s3_key_prefix": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "skip_final_snapshot": {
                "type": "bool",
                "optional": true
              },
              "snapshot_cluster_identifier": {
                "type": "string",
                "optional": true
              },
              "snapshot_identifier": {
                "type": "string",
                "optional": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              },
              "vpc_security_group_ids": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true,
                "computed": true
              }
            },
            "block_types": {
              "logging": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "bucket_name": {
                      "type": "string",
                      "optional": true,
                      "computed": true
                    },
                    "enable": {
                      "type": "bool",
                      "required": true
                    },
                    "s3_key_prefix": {
                      "type": "string",
                      "optional": true,
                      "computed": true
                    }
                  }
                },
                "max_items": 1
              },
              "snapshot_copy": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "destination_region": {
                      "type": "string",
                      "required": true
                    },
                    "grant_name": {
                      "type": "string",
                      "optional": true
                    },
                    "retention_period": {
                      "type": "number",
                      "optional": true
                    }
                  }
                },
                "max_items": 1
              },
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_redshift_event_subscription": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "customer_aws_id": {
                "type": "string",
                "computed": true
              },
              "enabled": {
                "type": "bool",
                "optional": true
              },
              "event_categories": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "severity": {
                "type": "string",
                "optional": true
              },
              "sns_topic_arn": {
                "type": "string",
                "required": true
              },
              "source_ids": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true
              },
              "source_type": {
                "type": "string",
                "optional": true
              },
              "status": {
                "type": "string",
                "computed": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              }
            },
            "block_types": {
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_redshift_parameter_group": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "description": {
                "type": "string",
                "optional": true
              },
              "family": {
                "type": "string",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              }
            },
            "block_types": {
              "parameter": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "name": {
                      "type": "string",
                      "required": true
                    },
                    "value": {
                      "type": "string",
                      "required": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_redshift_security_group": {
          "version": 0,
          "block": {
            "attributes": {
              "description": {
                "type": "string",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              }
            },
            "block_types": {
              "ingress": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "cidr": {
                      "type": "string",
                      "optional": true
                    },
                    "security_group_name": {
                      "type": "string",
                      "optional": true,
                      "computed": true
                    },
                    "security_group_owner_id": {
                      "type": "string",
                      "optional": true,
                      "computed": true
                    }
                  }
                },
                "min_items": 1
              }
            }
          }
        },
        "aws_redshift_snapshot_copy_grant": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "kms_key_id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "snapshot_copy_grant_name": {
                "type": "string",
                "required": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              }
            }
          }
        },
        "aws_redshift_snapshot_schedule": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "definitions": {
                "type": [
                  "set",
                  "string"
                ],
                "required": true
              },
              "description": {
                "type": "string",
                "optional": true
              },
              "force_destroy": {
                "type": "bool",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "identifier": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "identifier_prefix": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              }
            }
          }
        },
        "aws_redshift_snapshot_schedule_association": {
          "version": 0,
          "block": {
            "attributes": {
              "cluster_identifier": {
                "type": "string",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "schedule_identifier": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "aws_redshift_subnet_group": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "description": {
                "type": "string",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "subnet_ids": {
                "type": [
                  "set",
                  "string"
                ],
                "required": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              }
            }
          }
        },
        "aws_resourcegroups_group": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "description": {
                "type": "string",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              }
            },
            "block_types": {
              "resource_query": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "query": {
                      "type": "string",
                      "required": true
                    },
                    "type": {
                      "type": "string",
                      "optional": true
                    }
                  }
                },
                "min_items": 1,
                "max_items": 1
              }
            }
          }
        },
        "aws_route": {
          "version": 0,
          "block": {
            "attributes": {
              "destination_cidr_block": {
                "type": "string",
                "optional": true
              },
              "destination_ipv6_cidr_block": {
                "type": "string",
                "optional": true
              },
              "destination_prefix_list_id": {
                "type": "string",
                "computed": true
              },
              "egress_only_gateway_id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "gateway_id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "instance_id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "instance_owner_id": {
                "type": "string",
                "computed": true
              },
              "nat_gateway_id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "network_interface_id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "origin": {
                "type": "string",
                "computed": true
              },
              "route_table_id": {
                "type": "string",
                "required": true
              },
              "state": {
                "type": "string",
                "computed": true
              },
              "transit_gateway_id": {
                "type": "string",
                "optional": true
              },
              "vpc_peering_connection_id": {
                "type": "string",
                "optional": true
              }
            },
            "block_types": {
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_route53_delegation_set": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name_servers": {
                "type": [
                  "list",
                  "string"
                ],
                "computed": true
              },
              "reference_name": {
                "type": "string",
                "optional": true
              }
            }
          }
        },
        "aws_route53_health_check": {
          "version": 0,
          "block": {
            "attributes": {
              "child_health_threshold": {
                "type": "number",
                "optional": true
              },
              "child_healthchecks": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true
              },
              "cloudwatch_alarm_name": {
                "type": "string",
                "optional": true
              },
              "cloudwatch_alarm_region": {
                "type": "string",
                "optional": true
              },
              "enable_sni": {
                "type": "bool",
                "optional": true,
                "computed": true
              },
              "failure_threshold": {
                "type": "number",
                "optional": true
              },
              "fqdn": {
                "type": "string",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "insufficient_data_health_status": {
                "type": "string",
                "optional": true
              },
              "invert_healthcheck": {
                "type": "bool",
                "optional": true
              },
              "ip_address": {
                "type": "string",
                "optional": true
              },
              "measure_latency": {
                "type": "bool",
                "optional": true
              },
              "port": {
                "type": "number",
                "optional": true
              },
              "reference_name": {
                "type": "string",
                "optional": true
              },
              "regions": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true
              },
              "request_interval": {
                "type": "number",
                "optional": true
              },
              "resource_path": {
                "type": "string",
                "optional": true
              },
              "search_string": {
                "type": "string",
                "optional": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              },
              "type": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "aws_route53_query_log": {
          "version": 0,
          "block": {
            "attributes": {
              "cloudwatch_log_group_arn": {
                "type": "string",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "zone_id": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "aws_route53_record": {
          "version": 2,
          "block": {
            "attributes": {
              "allow_overwrite": {
                "type": "bool",
                "optional": true,
                "computed": true
              },
              "fqdn": {
                "type": "string",
                "computed": true
              },
              "health_check_id": {
                "type": "string",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "multivalue_answer_routing_policy": {
                "type": "bool",
                "optional": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "records": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true
              },
              "set_identifier": {
                "type": "string",
                "optional": true
              },
              "ttl": {
                "type": "number",
                "optional": true
              },
              "type": {
                "type": "string",
                "required": true
              },
              "zone_id": {
                "type": "string",
                "required": true
              }
            },
            "block_types": {
              "alias": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "evaluate_target_health": {
                      "type": "bool",
                      "required": true
                    },
                    "name": {
                      "type": "string",
                      "required": true
                    },
                    "zone_id": {
                      "type": "string",
                      "required": true
                    }
                  }
                }
              },
              "failover_routing_policy": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "type": {
                      "type": "string",
                      "required": true
                    }
                  }
                }
              },
              "geolocation_routing_policy": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "continent": {
                      "type": "string",
                      "optional": true
                    },
                    "country": {
                      "type": "string",
                      "optional": true
                    },
                    "subdivision": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              },
              "latency_routing_policy": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "region": {
                      "type": "string",
                      "required": true
                    }
                  }
                }
              },
              "weighted_routing_policy": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "weight": {
                      "type": "number",
                      "required": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_route53_resolver_endpoint": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "direction": {
                "type": "string",
                "required": true
              },
              "host_vpc_id": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "optional": true
              },
              "security_group_ids": {
                "type": [
                  "set",
                  "string"
                ],
                "required": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              }
            },
            "block_types": {
              "ip_address": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "ip": {
                      "type": "string",
                      "optional": true,
                      "computed": true
                    },
                    "ip_id": {
                      "type": "string",
                      "computed": true
                    },
                    "subnet_id": {
                      "type": "string",
                      "required": true
                    }
                  }
                },
                "min_items": 2,
                "max_items": 10
              },
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_route53_resolver_rule": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "domain_name": {
                "type": "string",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "optional": true
              },
              "owner_id": {
                "type": "string",
                "computed": true
              },
              "resolver_endpoint_id": {
                "type": "string",
                "optional": true
              },
              "rule_type": {
                "type": "string",
                "required": true
              },
              "share_status": {
                "type": "string",
                "computed": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              }
            },
            "block_types": {
              "target_ip": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "ip": {
                      "type": "string",
                      "required": true
                    },
                    "port": {
                      "type": "number",
                      "optional": true
                    }
                  }
                }
              },
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_route53_resolver_rule_association": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "optional": true
              },
              "resolver_rule_id": {
                "type": "string",
                "required": true
              },
              "vpc_id": {
                "type": "string",
                "required": true
              }
            },
            "block_types": {
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_route53_zone": {
          "version": 0,
          "block": {
            "attributes": {
              "comment": {
                "type": "string",
                "optional": true
              },
              "delegation_set_id": {
                "type": "string",
                "optional": true
              },
              "force_destroy": {
                "type": "bool",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "name_servers": {
                "type": [
                  "list",
                  "string"
                ],
                "computed": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              },
              "vpc_id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "vpc_region": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "zone_id": {
                "type": "string",
                "computed": true
              }
            },
            "block_types": {
              "vpc": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "vpc_id": {
                      "type": "string",
                      "required": true
                    },
                    "vpc_region": {
                      "type": "string",
                      "optional": true,
                      "computed": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_route53_zone_association": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "vpc_id": {
                "type": "string",
                "required": true
              },
              "vpc_region": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "zone_id": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "aws_route_table": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "owner_id": {
                "type": "string",
                "computed": true
              },
              "propagating_vgws": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true,
                "computed": true
              },
              "route": {
                "type": [
                  "set",
                  [
                    "object",
                    {
                      "cidr_block": "string",
                      "egress_only_gateway_id": "string",
                      "gateway_id": "string",
                      "instance_id": "string",
                      "ipv6_cidr_block": "string",
                      "nat_gateway_id": "string",
                      "network_interface_id": "string",
                      "transit_gateway_id": "string",
                      "vpc_peering_connection_id": "string"
                    }
                  ]
                ],
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              },
              "vpc_id": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "aws_route_table_association": {
          "version": 0,
          "block": {
            "attributes": {
              "gateway_id": {
                "type": "string",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "route_table_id": {
                "type": "string",
                "required": true
              },
              "subnet_id": {
                "type": "string",
                "optional": true
              }
            }
          }
        },
        "aws_s3_access_point": {
          "version": 0,
          "block": {
            "attributes": {
              "account_id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "arn": {
                "type": "string",
                "computed": true
              },
              "bucket": {
                "type": "string",
                "required": true
              },
              "domain_name": {
                "type": "string",
                "computed": true
              },
              "has_public_access_policy": {
                "type": "bool",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "network_origin": {
                "type": "string",
                "computed": true
              },
              "policy": {
                "type": "string",
                "optional": true
              }
            },
            "block_types": {
              "public_access_block_configuration": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "block_public_acls": {
                      "type": "bool",
                      "optional": true
                    },
                    "block_public_policy": {
                      "type": "bool",
                      "optional": true
                    },
                    "ignore_public_acls": {
                      "type": "bool",
                      "optional": true
                    },
                    "restrict_public_buckets": {
                      "type": "bool",
                      "optional": true
                    }
                  }
                },
                "max_items": 1
              },
              "vpc_configuration": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "vpc_id": {
                      "type": "string",
                      "required": true
                    }
                  }
                },
                "max_items": 1
              }
            }
          }
        },
        "aws_s3_account_public_access_block": {
          "version": 0,
          "block": {
            "attributes": {
              "account_id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "block_public_acls": {
                "type": "bool",
                "optional": true
              },
              "block_public_policy": {
                "type": "bool",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "ignore_public_acls": {
                "type": "bool",
                "optional": true
              },
              "restrict_public_buckets": {
                "type": "bool",
                "optional": true
              }
            }
          }
        },
        "aws_s3_bucket": {
          "version": 0,
          "block": {
            "attributes": {
              "acceleration_status": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "acl": {
                "type": "string",
                "optional": true
              },
              "arn": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "bucket": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "bucket_domain_name": {
                "type": "string",
                "computed": true
              },
              "bucket_prefix": {
                "type": "string",
                "optional": true
              },
              "bucket_regional_domain_name": {
                "type": "string",
                "computed": true
              },
              "force_destroy": {
                "type": "bool",
                "optional": true
              },
              "hosted_zone_id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "policy": {
                "type": "string",
                "optional": true
              },
              "region": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "request_payer": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              },
              "website_domain": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "website_endpoint": {
                "type": "string",
                "optional": true,
                "computed": true
              }
            },
            "block_types": {
              "cors_rule": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "allowed_headers": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "optional": true
                    },
                    "allowed_methods": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "required": true
                    },
                    "allowed_origins": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "required": true
                    },
                    "expose_headers": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "optional": true
                    },
                    "max_age_seconds": {
                      "type": "number",
                      "optional": true
                    }
                  }
                }
              },
              "grant": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "optional": true
                    },
                    "permissions": {
                      "type": [
                        "set",
                        "string"
                      ],
                      "required": true
                    },
                    "type": {
                      "type": "string",
                      "required": true
                    },
                    "uri": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              },
              "lifecycle_rule": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "abort_incomplete_multipart_upload_days": {
                      "type": "number",
                      "optional": true
                    },
                    "enabled": {
                      "type": "bool",
                      "required": true
                    },
                    "id": {
                      "type": "string",
                      "optional": true,
                      "computed": true
                    },
                    "prefix": {
                      "type": "string",
                      "optional": true
                    },
                    "tags": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "optional": true
                    }
                  },
                  "block_types": {
                    "expiration": {
                      "nesting_mode": "set",
                      "block": {
                        "attributes": {
                          "date": {
                            "type": "string",
                            "optional": true
                          },
                          "days": {
                            "type": "number",
                            "optional": true
                          },
                          "expired_object_delete_marker": {
                            "type": "bool",
                            "optional": true
                          }
                        }
                      },
                      "max_items": 1
                    },
                    "noncurrent_version_expiration": {
                      "nesting_mode": "set",
                      "block": {
                        "attributes": {
                          "days": {
                            "type": "number",
                            "optional": true
                          }
                        }
                      },
                      "max_items": 1
                    },
                    "noncurrent_version_transition": {
                      "nesting_mode": "set",
                      "block": {
                        "attributes": {
                          "days": {
                            "type": "number",
                            "optional": true
                          },
                          "storage_class": {
                            "type": "string",
                            "required": true
                          }
                        }
                      }
                    },
                    "transition": {
                      "nesting_mode": "set",
                      "block": {
                        "attributes": {
                          "date": {
                            "type": "string",
                            "optional": true
                          },
                          "days": {
                            "type": "number",
                            "optional": true
                          },
                          "storage_class": {
                            "type": "string",
                            "required": true
                          }
                        }
                      }
                    }
                  }
                }
              },
              "logging": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "target_bucket": {
                      "type": "string",
                      "required": true
                    },
                    "target_prefix": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              },
              "object_lock_configuration": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "object_lock_enabled": {
                      "type": "string",
                      "required": true
                    }
                  },
                  "block_types": {
                    "rule": {
                      "nesting_mode": "list",
                      "block": {
                        "block_types": {
                          "default_retention": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "days": {
                                  "type": "number",
                                  "optional": true
                                },
                                "mode": {
                                  "type": "string",
                                  "required": true
                                },
                                "years": {
                                  "type": "number",
                                  "optional": true
                                }
                              }
                            },
                            "min_items": 1,
                            "max_items": 1
                          }
                        }
                      },
                      "max_items": 1
                    }
                  }
                },
                "max_items": 1
              },
              "replication_configuration": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "role": {
                      "type": "string",
                      "required": true
                    }
                  },
                  "block_types": {
                    "rules": {
                      "nesting_mode": "set",
                      "block": {
                        "attributes": {
                          "id": {
                            "type": "string",
                            "optional": true
                          },
                          "prefix": {
                            "type": "string",
                            "optional": true
                          },
                          "priority": {
                            "type": "number",
                            "optional": true
                          },
                          "status": {
                            "type": "string",
                            "required": true
                          }
                        },
                        "block_types": {
                          "destination": {
                            "nesting_mode": "set",
                            "block": {
                              "attributes": {
                                "account_id": {
                                  "type": "string",
                                  "optional": true
                                },
                                "bucket": {
                                  "type": "string",
                                  "required": true
                                },
                                "replica_kms_key_id": {
                                  "type": "string",
                                  "optional": true
                                },
                                "storage_class": {
                                  "type": "string",
                                  "optional": true
                                }
                              },
                              "block_types": {
                                "access_control_translation": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "owner": {
                                        "type": "string",
                                        "required": true
                                      }
                                    }
                                  },
                                  "max_items": 1
                                }
                              }
                            },
                            "min_items": 1,
                            "max_items": 1
                          },
                          "filter": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "prefix": {
                                  "type": "string",
                                  "optional": true
                                },
                                "tags": {
                                  "type": [
                                    "map",
                                    "string"
                                  ],
                                  "optional": true
                                }
                              }
                            },
                            "max_items": 1
                          },
                          "source_selection_criteria": {
                            "nesting_mode": "set",
                            "block": {
                              "block_types": {
                                "sse_kms_encrypted_objects": {
                                  "nesting_mode": "set",
                                  "block": {
                                    "attributes": {
                                      "enabled": {
                                        "type": "bool",
                                        "required": true
                                      }
                                    }
                                  },
                                  "max_items": 1
                                }
                              }
                            },
                            "max_items": 1
                          }
                        }
                      },
                      "min_items": 1
                    }
                  }
                },
                "max_items": 1
              },
              "server_side_encryption_configuration": {
                "nesting_mode": "list",
                "block": {
                  "block_types": {
                    "rule": {
                      "nesting_mode": "list",
                      "block": {
                        "block_types": {
                          "apply_server_side_encryption_by_default": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "kms_master_key_id": {
                                  "type": "string",
                                  "optional": true
                                },
                                "sse_algorithm": {
                                  "type": "string",
                                  "required": true
                                }
                              }
                            },
                            "min_items": 1,
                            "max_items": 1
                          }
                        }
                      },
                      "min_items": 1,
                      "max_items": 1
                    }
                  }
                },
                "max_items": 1
              },
              "versioning": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "enabled": {
                      "type": "bool",
                      "optional": true
                    },
                    "mfa_delete": {
                      "type": "bool",
                      "optional": true
                    }
                  }
                },
                "max_items": 1
              },
              "website": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "error_document": {
                      "type": "string",
                      "optional": true
                    },
                    "index_document": {
                      "type": "string",
                      "optional": true
                    },
                    "redirect_all_requests_to": {
                      "type": "string",
                      "optional": true
                    },
                    "routing_rules": {
                      "type": "string",
                      "optional": true
                    }
                  }
                },
                "max_items": 1
              }
            }
          }
        },
        "aws_s3_bucket_analytics_configuration": {
          "version": 0,
          "block": {
            "attributes": {
              "bucket": {
                "type": "string",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              }
            },
            "block_types": {
              "filter": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "prefix": {
                      "type": "string",
                      "optional": true
                    },
                    "tags": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "optional": true
                    }
                  }
                },
                "max_items": 1
              },
              "storage_class_analysis": {
                "nesting_mode": "list",
                "block": {
                  "block_types": {
                    "data_export": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "output_schema_version": {
                            "type": "string",
                            "optional": true
                          }
                        },
                        "block_types": {
                          "destination": {
                            "nesting_mode": "list",
                            "block": {
                              "block_types": {
                                "s3_bucket_destination": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "bucket_account_id": {
                                        "type": "string",
                                        "optional": true
                                      },
                                      "bucket_arn": {
                                        "type": "string",
                                        "required": true
                                      },
                                      "format": {
                                        "type": "string",
                                        "optional": true
                                      },
                                      "prefix": {
                                        "type": "string",
                                        "optional": true
                                      }
                                    }
                                  },
                                  "min_items": 1,
                                  "max_items": 1
                                }
                              }
                            },
                            "min_items": 1,
                            "max_items": 1
                          }
                        }
                      },
                      "min_items": 1,
                      "max_items": 1
                    }
                  }
                },
                "max_items": 1
              }
            }
          }
        },
        "aws_s3_bucket_inventory": {
          "version": 0,
          "block": {
            "attributes": {
              "bucket": {
                "type": "string",
                "required": true
              },
              "enabled": {
                "type": "bool",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "included_object_versions": {
                "type": "string",
                "required": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "optional_fields": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true
              }
            },
            "block_types": {
              "destination": {
                "nesting_mode": "list",
                "block": {
                  "block_types": {
                    "bucket": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "account_id": {
                            "type": "string",
                            "optional": true
                          },
                          "bucket_arn": {
                            "type": "string",
                            "required": true
                          },
                          "format": {
                            "type": "string",
                            "required": true
                          },
                          "prefix": {
                            "type": "string",
                            "optional": true
                          }
                        },
                        "block_types": {
                          "encryption": {
                            "nesting_mode": "list",
                            "block": {
                              "block_types": {
                                "sse_kms": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "key_id": {
                                        "type": "string",
                                        "required": true
                                      }
                                    }
                                  },
                                  "max_items": 1
                                },
                                "sse_s3": {
                                  "nesting_mode": "list",
                                  "block": {},
                                  "max_items": 1
                                }
                              }
                            },
                            "max_items": 1
                          }
                        }
                      },
                      "min_items": 1,
                      "max_items": 1
                    }
                  }
                },
                "min_items": 1,
                "max_items": 1
              },
              "filter": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "prefix": {
                      "type": "string",
                      "optional": true
                    }
                  }
                },
                "max_items": 1
              },
              "schedule": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "frequency": {
                      "type": "string",
                      "required": true
                    }
                  }
                },
                "min_items": 1,
                "max_items": 1
              }
            }
          }
        },
        "aws_s3_bucket_metric": {
          "version": 0,
          "block": {
            "attributes": {
              "bucket": {
                "type": "string",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              }
            },
            "block_types": {
              "filter": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "prefix": {
                      "type": "string",
                      "optional": true
                    },
                    "tags": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "optional": true
                    }
                  }
                },
                "max_items": 1
              }
            }
          }
        },
        "aws_s3_bucket_notification": {
          "version": 0,
          "block": {
            "attributes": {
              "bucket": {
                "type": "string",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              }
            },
            "block_types": {
              "lambda_function": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "events": {
                      "type": [
                        "set",
                        "string"
                      ],
                      "required": true
                    },
                    "filter_prefix": {
                      "type": "string",
                      "optional": true
                    },
                    "filter_suffix": {
                      "type": "string",
                      "optional": true
                    },
                    "id": {
                      "type": "string",
                      "optional": true,
                      "computed": true
                    },
                    "lambda_function_arn": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              },
              "queue": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "events": {
                      "type": [
                        "set",
                        "string"
                      ],
                      "required": true
                    },
                    "filter_prefix": {
                      "type": "string",
                      "optional": true
                    },
                    "filter_suffix": {
                      "type": "string",
                      "optional": true
                    },
                    "id": {
                      "type": "string",
                      "optional": true,
                      "computed": true
                    },
                    "queue_arn": {
                      "type": "string",
                      "required": true
                    }
                  }
                }
              },
              "topic": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "events": {
                      "type": [
                        "set",
                        "string"
                      ],
                      "required": true
                    },
                    "filter_prefix": {
                      "type": "string",
                      "optional": true
                    },
                    "filter_suffix": {
                      "type": "string",
                      "optional": true
                    },
                    "id": {
                      "type": "string",
                      "optional": true,
                      "computed": true
                    },
                    "topic_arn": {
                      "type": "string",
                      "required": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_s3_bucket_object": {
          "version": 0,
          "block": {
            "attributes": {
              "acl": {
                "type": "string",
                "optional": true
              },
              "bucket": {
                "type": "string",
                "required": true
              },
              "cache_control": {
                "type": "string",
                "optional": true
              },
              "content": {
                "type": "string",
                "optional": true
              },
              "content_base64": {
                "type": "string",
                "optional": true
              },
              "content_disposition": {
                "type": "string",
                "optional": true
              },
              "content_encoding": {
                "type": "string",
                "optional": true
              },
              "content_language": {
                "type": "string",
                "optional": true
              },
              "content_type": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "etag": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "force_destroy": {
                "type": "bool",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "key": {
                "type": "string",
                "required": true
              },
              "kms_key_id": {
                "type": "string",
                "optional": true
              },
              "metadata": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              },
              "object_lock_legal_hold_status": {
                "type": "string",
                "optional": true
              },
              "object_lock_mode": {
                "type": "string",
                "optional": true
              },
              "object_lock_retain_until_date": {
                "type": "string",
                "optional": true
              },
              "server_side_encryption": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "source": {
                "type": "string",
                "optional": true
              },
              "storage_class": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              },
              "version_id": {
                "type": "string",
                "computed": true
              },
              "website_redirect": {
                "type": "string",
                "optional": true
              }
            }
          }
        },
        "aws_s3_bucket_policy": {
          "version": 0,
          "block": {
            "attributes": {
              "bucket": {
                "type": "string",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "policy": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "aws_s3_bucket_public_access_block": {
          "version": 0,
          "block": {
            "attributes": {
              "block_public_acls": {
                "type": "bool",
                "optional": true
              },
              "block_public_policy": {
                "type": "bool",
                "optional": true
              },
              "bucket": {
                "type": "string",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "ignore_public_acls": {
                "type": "bool",
                "optional": true
              },
              "restrict_public_buckets": {
                "type": "bool",
                "optional": true
              }
            }
          }
        },
        "aws_sagemaker_endpoint": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "endpoint_config_name": {
                "type": "string",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              }
            }
          }
        },
        "aws_sagemaker_endpoint_configuration": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "kms_key_arn": {
                "type": "string",
                "optional": true
              },
              "name": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              }
            },
            "block_types": {
              "production_variants": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "accelerator_type": {
                      "type": "string",
                      "optional": true
                    },
                    "initial_instance_count": {
                      "type": "number",
                      "required": true
                    },
                    "initial_variant_weight": {
                      "type": "number",
                      "optional": true
                    },
                    "instance_type": {
                      "type": "string",
                      "required": true
                    },
                    "model_name": {
                      "type": "string",
                      "required": true
                    },
                    "variant_name": {
                      "type": "string",
                      "optional": true,
                      "computed": true
                    }
                  }
                },
                "min_items": 1
              }
            }
          }
        },
        "aws_sagemaker_model": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "enable_network_isolation": {
                "type": "bool",
                "optional": true
              },
              "execution_role_arn": {
                "type": "string",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              }
            },
            "block_types": {
              "container": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "container_hostname": {
                      "type": "string",
                      "optional": true
                    },
                    "environment": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "optional": true
                    },
                    "image": {
                      "type": "string",
                      "required": true
                    },
                    "model_data_url": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              },
              "primary_container": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "container_hostname": {
                      "type": "string",
                      "optional": true
                    },
                    "environment": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "optional": true
                    },
                    "image": {
                      "type": "string",
                      "required": true
                    },
                    "model_data_url": {
                      "type": "string",
                      "optional": true
                    }
                  }
                },
                "max_items": 1
              },
              "vpc_config": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "security_group_ids": {
                      "type": [
                        "set",
                        "string"
                      ],
                      "required": true
                    },
                    "subnets": {
                      "type": [
                        "set",
                        "string"
                      ],
                      "required": true
                    }
                  }
                },
                "max_items": 1
              }
            }
          }
        },
        "aws_sagemaker_notebook_instance": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "direct_internet_access": {
                "type": "string",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "instance_type": {
                "type": "string",
                "required": true
              },
              "kms_key_id": {
                "type": "string",
                "optional": true
              },
              "lifecycle_config_name": {
                "type": "string",
                "optional": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "role_arn": {
                "type": "string",
                "required": true
              },
              "security_groups": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true,
                "computed": true
              },
              "subnet_id": {
                "type": "string",
                "optional": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              }
            }
          }
        },
        "aws_sagemaker_notebook_instance_lifecycle_configuration": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "optional": true
              },
              "on_create": {
                "type": "string",
                "optional": true
              },
              "on_start": {
                "type": "string",
                "optional": true
              }
            }
          }
        },
        "aws_secretsmanager_secret": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "description": {
                "type": "string",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "kms_key_id": {
                "type": "string",
                "optional": true
              },
              "name": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name_prefix": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "policy": {
                "type": "string",
                "optional": true
              },
              "recovery_window_in_days": {
                "type": "number",
                "optional": true
              },
              "rotation_enabled": {
                "type": "bool",
                "computed": true
              },
              "rotation_lambda_arn": {
                "type": "string",
                "optional": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              }
            },
            "block_types": {
              "rotation_rules": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "automatically_after_days": {
                      "type": "number",
                      "required": true
                    }
                  }
                },
                "max_items": 1
              }
            }
          }
        },
        "aws_secretsmanager_secret_version": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "secret_binary": {
                "type": "string",
                "optional": true,
                "sensitive": true
              },
              "secret_id": {
                "type": "string",
                "required": true
              },
              "secret_string": {
                "type": "string",
                "optional": true,
                "sensitive": true
              },
              "version_id": {
                "type": "string",
                "computed": true
              },
              "version_stages": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true,
                "computed": true
              }
            }
          }
        },
        "aws_security_group": {
          "version": 1,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "description": {
                "type": "string",
                "optional": true
              },
              "egress": {
                "type": [
                  "set",
                  [
                    "object",
                    {
                      "cidr_blocks": [
                        "list",
                        "string"
                      ],
                      "description": "string",
                      "from_port": "number",
                      "ipv6_cidr_blocks": [
                        "list",
                        "string"
                      ],
                      "prefix_list_ids": [
                        "list",
                        "string"
                      ],
                      "protocol": "string",
                      "security_groups": [
                        "set",
                        "string"
                      ],
                      "self": "bool",
                      "to_port": "number"
                    }
                  ]
                ],
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "ingress": {
                "type": [
                  "set",
                  [
                    "object",
                    {
                      "cidr_blocks": [
                        "list",
                        "string"
                      ],
                      "description": "string",
                      "from_port": "number",
                      "ipv6_cidr_blocks": [
                        "list",
                        "string"
                      ],
                      "prefix_list_ids": [
                        "list",
                        "string"
                      ],
                      "protocol": "string",
                      "security_groups": [
                        "set",
                        "string"
                      ],
                      "self": "bool",
                      "to_port": "number"
                    }
                  ]
                ],
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name_prefix": {
                "type": "string",
                "optional": true
              },
              "owner_id": {
                "type": "string",
                "computed": true
              },
              "revoke_rules_on_delete": {
                "type": "bool",
                "optional": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              },
              "vpc_id": {
                "type": "string",
                "optional": true,
                "computed": true
              }
            },
            "block_types": {
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_security_group_rule": {
          "version": 2,
          "block": {
            "attributes": {
              "cidr_blocks": {
                "type": [
                  "list",
                  "string"
                ],
                "optional": true
              },
              "description": {
                "type": "string",
                "optional": true
              },
              "from_port": {
                "type": "number",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "ipv6_cidr_blocks": {
                "type": [
                  "list",
                  "string"
                ],
                "optional": true
              },
              "prefix_list_ids": {
                "type": [
                  "list",
                  "string"
                ],
                "optional": true
              },
              "protocol": {
                "type": "string",
                "required": true
              },
              "security_group_id": {
                "type": "string",
                "required": true
              },
              "self": {
                "type": "bool",
                "optional": true
              },
              "source_security_group_id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "to_port": {
                "type": "number",
                "required": true
              },
              "type": {
                "type": "string",
                "description": "Type of rule, ingress (inbound) or egress (outbound).",
                "required": true
              }
            }
          }
        },
        "aws_securityhub_account": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              }
            }
          }
        },
        "aws_securityhub_product_subscription": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "product_arn": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "aws_securityhub_standards_subscription": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "standards_arn": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "aws_service_discovery_http_namespace": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "description": {
                "type": "string",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "aws_service_discovery_private_dns_namespace": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "description": {
                "type": "string",
                "optional": true
              },
              "hosted_zone": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "vpc": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "aws_service_discovery_public_dns_namespace": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "description": {
                "type": "string",
                "optional": true
              },
              "hosted_zone": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "aws_service_discovery_service": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "description": {
                "type": "string",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "namespace_id": {
                "type": "string",
                "optional": true,
                "computed": true
              }
            },
            "block_types": {
              "dns_config": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "namespace_id": {
                      "type": "string",
                      "required": true
                    },
                    "routing_policy": {
                      "type": "string",
                      "optional": true
                    }
                  },
                  "block_types": {
                    "dns_records": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "ttl": {
                            "type": "number",
                            "required": true
                          },
                          "type": {
                            "type": "string",
                            "required": true
                          }
                        }
                      },
                      "min_items": 1
                    }
                  }
                },
                "max_items": 1
              },
              "health_check_config": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "failure_threshold": {
                      "type": "number",
                      "optional": true
                    },
                    "resource_path": {
                      "type": "string",
                      "optional": true
                    },
                    "type": {
                      "type": "string",
                      "optional": true
                    }
                  }
                },
                "max_items": 1
              },
              "health_check_custom_config": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "failure_threshold": {
                      "type": "number",
                      "optional": true
                    }
                  }
                },
                "max_items": 1
              }
            }
          }
        },
        "aws_servicecatalog_portfolio": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "created_time": {
                "type": "string",
                "computed": true
              },
              "description": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "provider_name": {
                "type": "string",
                "optional": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              }
            },
            "block_types": {
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_servicequotas_service_quota": {
          "version": 0,
          "block": {
            "attributes": {
              "adjustable": {
                "type": "bool",
                "computed": true
              },
              "arn": {
                "type": "string",
                "computed": true
              },
              "default_value": {
                "type": "number",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "quota_code": {
                "type": "string",
                "required": true
              },
              "quota_name": {
                "type": "string",
                "computed": true
              },
              "request_id": {
                "type": "string",
                "computed": true
              },
              "request_status": {
                "type": "string",
                "computed": true
              },
              "service_code": {
                "type": "string",
                "required": true
              },
              "service_name": {
                "type": "string",
                "computed": true
              },
              "value": {
                "type": "number",
                "required": true
              }
            }
          }
        },
        "aws_ses_active_receipt_rule_set": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "rule_set_name": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "aws_ses_configuration_set": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "aws_ses_domain_dkim": {
          "version": 0,
          "block": {
            "attributes": {
              "dkim_tokens": {
                "type": [
                  "list",
                  "string"
                ],
                "computed": true
              },
              "domain": {
                "type": "string",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              }
            }
          }
        },
        "aws_ses_domain_identity": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "domain": {
                "type": "string",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "verification_token": {
                "type": "string",
                "computed": true
              }
            }
          }
        },
        "aws_ses_domain_identity_verification": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "domain": {
                "type": "string",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              }
            },
            "block_types": {
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_ses_domain_mail_from": {
          "version": 0,
          "block": {
            "attributes": {
              "behavior_on_mx_failure": {
                "type": "string",
                "optional": true
              },
              "domain": {
                "type": "string",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "mail_from_domain": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "aws_ses_email_identity": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "email": {
                "type": "string",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              }
            }
          }
        },
        "aws_ses_event_destination": {
          "version": 0,
          "block": {
            "attributes": {
              "configuration_set_name": {
                "type": "string",
                "required": true
              },
              "enabled": {
                "type": "bool",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "matching_types": {
                "type": [
                  "set",
                  "string"
                ],
                "required": true
              },
              "name": {
                "type": "string",
                "required": true
              }
            },
            "block_types": {
              "cloudwatch_destination": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "default_value": {
                      "type": "string",
                      "required": true
                    },
                    "dimension_name": {
                      "type": "string",
                      "required": true
                    },
                    "value_source": {
                      "type": "string",
                      "required": true
                    }
                  }
                }
              },
              "kinesis_destination": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "role_arn": {
                      "type": "string",
                      "required": true
                    },
                    "stream_arn": {
                      "type": "string",
                      "required": true
                    }
                  }
                },
                "max_items": 1
              },
              "sns_destination": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "topic_arn": {
                      "type": "string",
                      "required": true
                    }
                  }
                },
                "max_items": 1
              }
            }
          }
        },
        "aws_ses_identity_notification_topic": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "identity": {
                "type": "string",
                "required": true
              },
              "include_original_headers": {
                "type": "bool",
                "optional": true
              },
              "notification_type": {
                "type": "string",
                "required": true
              },
              "topic_arn": {
                "type": "string",
                "optional": true
              }
            }
          }
        },
        "aws_ses_identity_policy": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "identity": {
                "type": "string",
                "required": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "policy": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "aws_ses_receipt_filter": {
          "version": 0,
          "block": {
            "attributes": {
              "cidr": {
                "type": "string",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "policy": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "aws_ses_receipt_rule": {
          "version": 0,
          "block": {
            "attributes": {
              "after": {
                "type": "string",
                "optional": true
              },
              "enabled": {
                "type": "bool",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "recipients": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true
              },
              "rule_set_name": {
                "type": "string",
                "required": true
              },
              "scan_enabled": {
                "type": "bool",
                "optional": true,
                "computed": true
              },
              "tls_policy": {
                "type": "string",
                "optional": true,
                "computed": true
              }
            },
            "block_types": {
              "add_header_action": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "header_name": {
                      "type": "string",
                      "required": true
                    },
                    "header_value": {
                      "type": "string",
                      "required": true
                    },
                    "position": {
                      "type": "number",
                      "required": true
                    }
                  }
                }
              },
              "bounce_action": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "message": {
                      "type": "string",
                      "required": true
                    },
                    "position": {
                      "type": "number",
                      "required": true
                    },
                    "sender": {
                      "type": "string",
                      "required": true
                    },
                    "smtp_reply_code": {
                      "type": "string",
                      "required": true
                    },
                    "status_code": {
                      "type": "string",
                      "optional": true
                    },
                    "topic_arn": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              },
              "lambda_action": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "function_arn": {
                      "type": "string",
                      "required": true
                    },
                    "invocation_type": {
                      "type": "string",
                      "optional": true,
                      "computed": true
                    },
                    "position": {
                      "type": "number",
                      "required": true
                    },
                    "topic_arn": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              },
              "s3_action": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "bucket_name": {
                      "type": "string",
                      "required": true
                    },
                    "kms_key_arn": {
                      "type": "string",
                      "optional": true
                    },
                    "object_key_prefix": {
                      "type": "string",
                      "optional": true
                    },
                    "position": {
                      "type": "number",
                      "required": true
                    },
                    "topic_arn": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              },
              "sns_action": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "position": {
                      "type": "number",
                      "required": true
                    },
                    "topic_arn": {
                      "type": "string",
                      "required": true
                    }
                  }
                }
              },
              "stop_action": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "position": {
                      "type": "number",
                      "required": true
                    },
                    "scope": {
                      "type": "string",
                      "required": true
                    },
                    "topic_arn": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              },
              "workmail_action": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "organization_arn": {
                      "type": "string",
                      "required": true
                    },
                    "position": {
                      "type": "number",
                      "required": true
                    },
                    "topic_arn": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_ses_receipt_rule_set": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "rule_set_name": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "aws_ses_template": {
          "version": 0,
          "block": {
            "attributes": {
              "html": {
                "type": "string",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "subject": {
                "type": "string",
                "optional": true
              },
              "text": {
                "type": "string",
                "optional": true
              }
            }
          }
        },
        "aws_sfn_activity": {
          "version": 0,
          "block": {
            "attributes": {
              "creation_date": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              }
            }
          }
        },
        "aws_sfn_state_machine": {
          "version": 0,
          "block": {
            "attributes": {
              "creation_date": {
                "type": "string",
                "computed": true
              },
              "definition": {
                "type": "string",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "role_arn": {
                "type": "string",
                "required": true
              },
              "status": {
                "type": "string",
                "computed": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              }
            }
          }
        },
        "aws_shield_protection": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "resource_arn": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "aws_simpledb_domain": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "aws_snapshot_create_volume_permission": {
          "version": 0,
          "block": {
            "attributes": {
              "account_id": {
                "type": "string",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "snapshot_id": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "aws_sns_platform_application": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "event_delivery_failure_topic_arn": {
                "type": "string",
                "optional": true
              },
              "event_endpoint_created_topic_arn": {
                "type": "string",
                "optional": true
              },
              "event_endpoint_deleted_topic_arn": {
                "type": "string",
                "optional": true
              },
              "event_endpoint_updated_topic_arn": {
                "type": "string",
                "optional": true
              },
              "failure_feedback_role_arn": {
                "type": "string",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "platform": {
                "type": "string",
                "required": true
              },
              "platform_credential": {
                "type": "string",
                "required": true
              },
              "platform_principal": {
                "type": "string",
                "optional": true
              },
              "success_feedback_role_arn": {
                "type": "string",
                "optional": true
              },
              "success_feedback_sample_rate": {
                "type": "string",
                "optional": true
              }
            }
          }
        },
        "aws_sns_sms_preferences": {
          "version": 0,
          "block": {
            "attributes": {
              "default_sender_id": {
                "type": "string",
                "optional": true
              },
              "default_sms_type": {
                "type": "string",
                "optional": true
              },
              "delivery_status_iam_role_arn": {
                "type": "string",
                "optional": true
              },
              "delivery_status_success_sampling_rate": {
                "type": "string",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "monthly_spend_limit": {
                "type": "string",
                "optional": true
              },
              "usage_report_s3_bucket": {
                "type": "string",
                "optional": true
              }
            }
          }
        },
        "aws_sns_topic": {
          "version": 0,
          "block": {
            "attributes": {
              "application_failure_feedback_role_arn": {
                "type": "string",
                "optional": true
              },
              "application_success_feedback_role_arn": {
                "type": "string",
                "optional": true
              },
              "application_success_feedback_sample_rate": {
                "type": "number",
                "optional": true
              },
              "arn": {
                "type": "string",
                "computed": true
              },
              "delivery_policy": {
                "type": "string",
                "optional": true
              },
              "display_name": {
                "type": "string",
                "optional": true
              },
              "http_failure_feedback_role_arn": {
                "type": "string",
                "optional": true
              },
              "http_success_feedback_role_arn": {
                "type": "string",
                "optional": true
              },
              "http_success_feedback_sample_rate": {
                "type": "number",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "kms_master_key_id": {
                "type": "string",
                "optional": true
              },
              "lambda_failure_feedback_role_arn": {
                "type": "string",
                "optional": true
              },
              "lambda_success_feedback_role_arn": {
                "type": "string",
                "optional": true
              },
              "lambda_success_feedback_sample_rate": {
                "type": "number",
                "optional": true
              },
              "name": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name_prefix": {
                "type": "string",
                "optional": true
              },
              "policy": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "sqs_failure_feedback_role_arn": {
                "type": "string",
                "optional": true
              },
              "sqs_success_feedback_role_arn": {
                "type": "string",
                "optional": true
              },
              "sqs_success_feedback_sample_rate": {
                "type": "number",
                "optional": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              }
            }
          }
        },
        "aws_sns_topic_policy": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "policy": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "aws_sns_topic_subscription": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "confirmation_timeout_in_minutes": {
                "type": "number",
                "optional": true
              },
              "delivery_policy": {
                "type": "string",
                "optional": true
              },
              "endpoint": {
                "type": "string",
                "required": true
              },
              "endpoint_auto_confirms": {
                "type": "bool",
                "optional": true
              },
              "filter_policy": {
                "type": "string",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "protocol": {
                "type": "string",
                "required": true
              },
              "raw_message_delivery": {
                "type": "bool",
                "optional": true
              },
              "topic_arn": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "aws_spot_datafeed_subscription": {
          "version": 0,
          "block": {
            "attributes": {
              "bucket": {
                "type": "string",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "prefix": {
                "type": "string",
                "optional": true
              }
            }
          }
        },
        "aws_spot_fleet_request": {
          "version": 1,
          "block": {
            "attributes": {
              "allocation_strategy": {
                "type": "string",
                "optional": true
              },
              "client_token": {
                "type": "string",
                "computed": true
              },
              "excess_capacity_termination_policy": {
                "type": "string",
                "optional": true
              },
              "fleet_type": {
                "type": "string",
                "optional": true
              },
              "iam_fleet_role": {
                "type": "string",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "instance_interruption_behaviour": {
                "type": "string",
                "optional": true
              },
              "instance_pools_to_use_count": {
                "type": "number",
                "optional": true
              },
              "load_balancers": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true,
                "computed": true
              },
              "replace_unhealthy_instances": {
                "type": "bool",
                "optional": true
              },
              "spot_price": {
                "type": "string",
                "optional": true
              },
              "spot_request_state": {
                "type": "string",
                "computed": true
              },
              "target_capacity": {
                "type": "number",
                "required": true
              },
              "target_group_arns": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true,
                "computed": true
              },
              "terminate_instances_with_expiration": {
                "type": "bool",
                "optional": true
              },
              "valid_from": {
                "type": "string",
                "optional": true
              },
              "valid_until": {
                "type": "string",
                "optional": true
              },
              "wait_for_fulfillment": {
                "type": "bool",
                "optional": true
              }
            },
            "block_types": {
              "launch_specification": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "ami": {
                      "type": "string",
                      "required": true
                    },
                    "associate_public_ip_address": {
                      "type": "bool",
                      "optional": true
                    },
                    "availability_zone": {
                      "type": "string",
                      "optional": true,
                      "computed": true
                    },
                    "ebs_optimized": {
                      "type": "bool",
                      "optional": true
                    },
                    "iam_instance_profile": {
                      "type": "string",
                      "optional": true
                    },
                    "iam_instance_profile_arn": {
                      "type": "string",
                      "optional": true
                    },
                    "instance_type": {
                      "type": "string",
                      "required": true
                    },
                    "key_name": {
                      "type": "string",
                      "optional": true,
                      "computed": true
                    },
                    "monitoring": {
                      "type": "bool",
                      "optional": true
                    },
                    "placement_group": {
                      "type": "string",
                      "optional": true,
                      "computed": true
                    },
                    "placement_tenancy": {
                      "type": "string",
                      "optional": true
                    },
                    "spot_price": {
                      "type": "string",
                      "optional": true
                    },
                    "subnet_id": {
                      "type": "string",
                      "optional": true,
                      "computed": true
                    },
                    "tags": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "optional": true
                    },
                    "user_data": {
                      "type": "string",
                      "optional": true
                    },
                    "vpc_security_group_ids": {
                      "type": [
                        "set",
                        "string"
                      ],
                      "optional": true,
                      "computed": true
                    },
                    "weighted_capacity": {
                      "type": "string",
                      "optional": true
                    }
                  },
                  "block_types": {
                    "ebs_block_device": {
                      "nesting_mode": "set",
                      "block": {
                        "attributes": {
                          "delete_on_termination": {
                            "type": "bool",
                            "optional": true
                          },
                          "device_name": {
                            "type": "string",
                            "required": true
                          },
                          "encrypted": {
                            "type": "bool",
                            "optional": true,
                            "computed": true
                          },
                          "iops": {
                            "type": "number",
                            "optional": true,
                            "computed": true
                          },
                          "kms_key_id": {
                            "type": "string",
                            "optional": true,
                            "computed": true
                          },
                          "snapshot_id": {
                            "type": "string",
                            "optional": true,
                            "computed": true
                          },
                          "volume_size": {
                            "type": "number",
                            "optional": true,
                            "computed": true
                          },
                          "volume_type": {
                            "type": "string",
                            "optional": true,
                            "computed": true
                          }
                        }
                      }
                    },
                    "ephemeral_block_device": {
                      "nesting_mode": "set",
                      "block": {
                        "attributes": {
                          "device_name": {
                            "type": "string",
                            "required": true
                          },
                          "virtual_name": {
                            "type": "string",
                            "required": true
                          }
                        }
                      }
                    },
                    "root_block_device": {
                      "nesting_mode": "set",
                      "block": {
                        "attributes": {
                          "delete_on_termination": {
                            "type": "bool",
                            "optional": true
                          },
                          "encrypted": {
                            "type": "bool",
                            "optional": true,
                            "computed": true
                          },
                          "iops": {
                            "type": "number",
                            "optional": true,
                            "computed": true
                          },
                          "kms_key_id": {
                            "type": "string",
                            "optional": true,
                            "computed": true
                          },
                          "volume_size": {
                            "type": "number",
                            "optional": true,
                            "computed": true
                          },
                          "volume_type": {
                            "type": "string",
                            "optional": true,
                            "computed": true
                          }
                        }
                      }
                    }
                  }
                },
                "min_items": 1
              },
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_spot_instance_request": {
          "version": 0,
          "block": {
            "attributes": {
              "ami": {
                "type": "string",
                "required": true
              },
              "arn": {
                "type": "string",
                "computed": true
              },
              "associate_public_ip_address": {
                "type": "bool",
                "optional": true,
                "computed": true
              },
              "availability_zone": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "block_duration_minutes": {
                "type": "number",
                "optional": true
              },
              "cpu_core_count": {
                "type": "number",
                "optional": true,
                "computed": true
              },
              "cpu_threads_per_core": {
                "type": "number",
                "optional": true,
                "computed": true
              },
              "disable_api_termination": {
                "type": "bool",
                "optional": true
              },
              "ebs_optimized": {
                "type": "bool",
                "optional": true
              },
              "get_password_data": {
                "type": "bool",
                "optional": true
              },
              "hibernation": {
                "type": "bool",
                "optional": true
              },
              "host_id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "iam_instance_profile": {
                "type": "string",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "instance_initiated_shutdown_behavior": {
                "type": "string",
                "optional": true
              },
              "instance_interruption_behaviour": {
                "type": "string",
                "optional": true
              },
              "instance_state": {
                "type": "string",
                "computed": true
              },
              "instance_type": {
                "type": "string",
                "required": true
              },
              "ipv6_address_count": {
                "type": "number",
                "optional": true,
                "computed": true
              },
              "ipv6_addresses": {
                "type": [
                  "list",
                  "string"
                ],
                "optional": true,
                "computed": true
              },
              "key_name": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "launch_group": {
                "type": "string",
                "optional": true
              },
              "monitoring": {
                "type": "bool",
                "optional": true
              },
              "network_interface_id": {
                "type": "string",
                "computed": true
              },
              "password_data": {
                "type": "string",
                "computed": true
              },
              "placement_group": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "primary_network_interface_id": {
                "type": "string",
                "computed": true
              },
              "private_dns": {
                "type": "string",
                "computed": true
              },
              "private_ip": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "public_dns": {
                "type": "string",
                "computed": true
              },
              "public_ip": {
                "type": "string",
                "computed": true
              },
              "security_groups": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true,
                "computed": true
              },
              "source_dest_check": {
                "type": "bool",
                "optional": true
              },
              "spot_bid_status": {
                "type": "string",
                "computed": true
              },
              "spot_instance_id": {
                "type": "string",
                "computed": true
              },
              "spot_price": {
                "type": "string",
                "optional": true
              },
              "spot_request_state": {
                "type": "string",
                "computed": true
              },
              "spot_type": {
                "type": "string",
                "optional": true
              },
              "subnet_id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              },
              "tenancy": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "user_data": {
                "type": "string",
                "optional": true
              },
              "user_data_base64": {
                "type": "string",
                "optional": true
              },
              "valid_from": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "valid_until": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "volume_tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              },
              "vpc_security_group_ids": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true,
                "computed": true
              },
              "wait_for_fulfillment": {
                "type": "bool",
                "optional": true
              }
            },
            "block_types": {
              "credit_specification": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "cpu_credits": {
                      "type": "string",
                      "optional": true
                    }
                  }
                },
                "max_items": 1
              },
              "ebs_block_device": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "delete_on_termination": {
                      "type": "bool",
                      "optional": true
                    },
                    "device_name": {
                      "type": "string",
                      "required": true
                    },
                    "encrypted": {
                      "type": "bool",
                      "optional": true,
                      "computed": true
                    },
                    "iops": {
                      "type": "number",
                      "optional": true,
                      "computed": true
                    },
                    "kms_key_id": {
                      "type": "string",
                      "optional": true,
                      "computed": true
                    },
                    "snapshot_id": {
                      "type": "string",
                      "optional": true,
                      "computed": true
                    },
                    "volume_id": {
                      "type": "string",
                      "computed": true
                    },
                    "volume_size": {
                      "type": "number",
                      "optional": true,
                      "computed": true
                    },
                    "volume_type": {
                      "type": "string",
                      "optional": true,
                      "computed": true
                    }
                  }
                }
              },
              "ephemeral_block_device": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "device_name": {
                      "type": "string",
                      "required": true
                    },
                    "no_device": {
                      "type": "bool",
                      "optional": true
                    },
                    "virtual_name": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              },
              "network_interface": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "delete_on_termination": {
                      "type": "bool",
                      "optional": true
                    },
                    "device_index": {
                      "type": "number",
                      "required": true
                    },
                    "network_interface_id": {
                      "type": "string",
                      "required": true
                    }
                  }
                }
              },
              "root_block_device": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "delete_on_termination": {
                      "type": "bool",
                      "optional": true
                    },
                    "encrypted": {
                      "type": "bool",
                      "optional": true,
                      "computed": true
                    },
                    "iops": {
                      "type": "number",
                      "optional": true,
                      "computed": true
                    },
                    "kms_key_id": {
                      "type": "string",
                      "optional": true,
                      "computed": true
                    },
                    "volume_id": {
                      "type": "string",
                      "computed": true
                    },
                    "volume_size": {
                      "type": "number",
                      "optional": true,
                      "computed": true
                    },
                    "volume_type": {
                      "type": "string",
                      "optional": true,
                      "computed": true
                    }
                  }
                },
                "max_items": 1
              },
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_sqs_queue": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "content_based_deduplication": {
                "type": "bool",
                "optional": true
              },
              "delay_seconds": {
                "type": "number",
                "optional": true
              },
              "fifo_queue": {
                "type": "bool",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "kms_data_key_reuse_period_seconds": {
                "type": "number",
                "optional": true,
                "computed": true
              },
              "kms_master_key_id": {
                "type": "string",
                "optional": true
              },
              "max_message_size": {
                "type": "number",
                "optional": true
              },
              "message_retention_seconds": {
                "type": "number",
                "optional": true
              },
              "name": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name_prefix": {
                "type": "string",
                "optional": true
              },
              "policy": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "receive_wait_time_seconds": {
                "type": "number",
                "optional": true
              },
              "redrive_policy": {
                "type": "string",
                "optional": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              },
              "visibility_timeout_seconds": {
                "type": "number",
                "optional": true
              }
            }
          }
        },
        "aws_sqs_queue_policy": {
          "version": 1,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "policy": {
                "type": "string",
                "required": true
              },
              "queue_url": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "aws_ssm_activation": {
          "version": 0,
          "block": {
            "attributes": {
              "activation_code": {
                "type": "string",
                "computed": true
              },
              "description": {
                "type": "string",
                "optional": true
              },
              "expiration_date": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "expired": {
                "type": "string",
                "computed": true
              },
              "iam_role": {
                "type": "string",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "optional": true
              },
              "registration_count": {
                "type": "number",
                "computed": true
              },
              "registration_limit": {
                "type": "number",
                "optional": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              }
            }
          }
        },
        "aws_ssm_association": {
          "version": 1,
          "block": {
            "attributes": {
              "association_id": {
                "type": "string",
                "computed": true
              },
              "association_name": {
                "type": "string",
                "optional": true
              },
              "automation_target_parameter_name": {
                "type": "string",
                "optional": true
              },
              "compliance_severity": {
                "type": "string",
                "optional": true
              },
              "document_version": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "instance_id": {
                "type": "string",
                "optional": true
              },
              "max_concurrency": {
                "type": "string",
                "optional": true
              },
              "max_errors": {
                "type": "string",
                "optional": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "parameters": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true,
                "computed": true
              },
              "schedule_expression": {
                "type": "string",
                "optional": true
              }
            },
            "block_types": {
              "output_location": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "s3_bucket_name": {
                      "type": "string",
                      "required": true
                    },
                    "s3_key_prefix": {
                      "type": "string",
                      "optional": true
                    }
                  }
                },
                "max_items": 1
              },
              "targets": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "key": {
                      "type": "string",
                      "required": true
                    },
                    "values": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "required": true
                    }
                  }
                },
                "max_items": 5
              }
            }
          }
        },
        "aws_ssm_document": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "content": {
                "type": "string",
                "required": true
              },
              "created_date": {
                "type": "string",
                "computed": true
              },
              "default_version": {
                "type": "string",
                "computed": true
              },
              "description": {
                "type": "string",
                "computed": true
              },
              "document_format": {
                "type": "string",
                "optional": true
              },
              "document_type": {
                "type": "string",
                "required": true
              },
              "hash": {
                "type": "string",
                "computed": true
              },
              "hash_type": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "latest_version": {
                "type": "string",
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "owner": {
                "type": "string",
                "computed": true
              },
              "parameter": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "default_value": "string",
                      "description": "string",
                      "name": "string",
                      "type": "string"
                    }
                  ]
                ],
                "computed": true
              },
              "permissions": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              },
              "platform_types": {
                "type": [
                  "list",
                  "string"
                ],
                "computed": true
              },
              "schema_version": {
                "type": "string",
                "computed": true
              },
              "status": {
                "type": "string",
                "computed": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              },
              "target_type": {
                "type": "string",
                "optional": true
              }
            },
            "block_types": {
              "attachments_source": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "key": {
                      "type": "string",
                      "required": true
                    },
                    "name": {
                      "type": "string",
                      "optional": true
                    },
                    "values": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "required": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_ssm_maintenance_window": {
          "version": 0,
          "block": {
            "attributes": {
              "allow_unassociated_targets": {
                "type": "bool",
                "optional": true
              },
              "cutoff": {
                "type": "number",
                "required": true
              },
              "description": {
                "type": "string",
                "optional": true
              },
              "duration": {
                "type": "number",
                "required": true
              },
              "enabled": {
                "type": "bool",
                "optional": true
              },
              "end_date": {
                "type": "string",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "schedule": {
                "type": "string",
                "required": true
              },
              "schedule_timezone": {
                "type": "string",
                "optional": true
              },
              "start_date": {
                "type": "string",
                "optional": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              }
            }
          }
        },
        "aws_ssm_maintenance_window_target": {
          "version": 0,
          "block": {
            "attributes": {
              "description": {
                "type": "string",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "optional": true
              },
              "owner_information": {
                "type": "string",
                "optional": true
              },
              "resource_type": {
                "type": "string",
                "required": true
              },
              "window_id": {
                "type": "string",
                "required": true
              }
            },
            "block_types": {
              "targets": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "key": {
                      "type": "string",
                      "required": true
                    },
                    "values": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "required": true
                    }
                  }
                },
                "min_items": 1,
                "max_items": 5
              }
            }
          }
        },
        "aws_ssm_maintenance_window_task": {
          "version": 0,
          "block": {
            "attributes": {
              "description": {
                "type": "string",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "max_concurrency": {
                "type": "string",
                "required": true
              },
              "max_errors": {
                "type": "string",
                "required": true
              },
              "name": {
                "type": "string",
                "optional": true
              },
              "priority": {
                "type": "number",
                "optional": true
              },
              "service_role_arn": {
                "type": "string",
                "required": true
              },
              "task_arn": {
                "type": "string",
                "required": true
              },
              "task_type": {
                "type": "string",
                "required": true
              },
              "window_id": {
                "type": "string",
                "required": true
              }
            },
            "block_types": {
              "logging_info": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "s3_bucket_name": {
                      "type": "string",
                      "required": true
                    },
                    "s3_bucket_prefix": {
                      "type": "string",
                      "optional": true
                    },
                    "s3_region": {
                      "type": "string",
                      "required": true
                    }
                  }
                },
                "max_items": 1
              },
              "targets": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "key": {
                      "type": "string",
                      "required": true
                    },
                    "values": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "required": true
                    }
                  }
                },
                "min_items": 1
              },
              "task_invocation_parameters": {
                "nesting_mode": "list",
                "block": {
                  "block_types": {
                    "automation_parameters": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "document_version": {
                            "type": "string",
                            "optional": true
                          }
                        },
                        "block_types": {
                          "parameter": {
                            "nesting_mode": "set",
                            "block": {
                              "attributes": {
                                "name": {
                                  "type": "string",
                                  "required": true
                                },
                                "values": {
                                  "type": [
                                    "list",
                                    "string"
                                  ],
                                  "required": true
                                }
                              }
                            }
                          }
                        }
                      },
                      "max_items": 1
                    },
                    "lambda_parameters": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "client_context": {
                            "type": "string",
                            "optional": true
                          },
                          "payload": {
                            "type": "string",
                            "optional": true,
                            "sensitive": true
                          },
                          "qualifier": {
                            "type": "string",
                            "optional": true
                          }
                        }
                      },
                      "max_items": 1
                    },
                    "run_command_parameters": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "comment": {
                            "type": "string",
                            "optional": true
                          },
                          "document_hash": {
                            "type": "string",
                            "optional": true
                          },
                          "document_hash_type": {
                            "type": "string",
                            "optional": true
                          },
                          "output_s3_bucket": {
                            "type": "string",
                            "optional": true
                          },
                          "output_s3_key_prefix": {
                            "type": "string",
                            "optional": true
                          },
                          "service_role_arn": {
                            "type": "string",
                            "optional": true
                          },
                          "timeout_seconds": {
                            "type": "number",
                            "optional": true
                          }
                        },
                        "block_types": {
                          "notification_config": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "notification_arn": {
                                  "type": "string",
                                  "optional": true
                                },
                                "notification_events": {
                                  "type": [
                                    "list",
                                    "string"
                                  ],
                                  "optional": true
                                },
                                "notification_type": {
                                  "type": "string",
                                  "optional": true
                                }
                              }
                            },
                            "max_items": 1
                          },
                          "parameter": {
                            "nesting_mode": "set",
                            "block": {
                              "attributes": {
                                "name": {
                                  "type": "string",
                                  "required": true
                                },
                                "values": {
                                  "type": [
                                    "list",
                                    "string"
                                  ],
                                  "required": true
                                }
                              }
                            }
                          }
                        }
                      },
                      "max_items": 1
                    },
                    "step_functions_parameters": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "input": {
                            "type": "string",
                            "optional": true,
                            "sensitive": true
                          },
                          "name": {
                            "type": "string",
                            "optional": true
                          }
                        }
                      },
                      "max_items": 1
                    }
                  }
                },
                "max_items": 1
              },
              "task_parameters": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "name": {
                      "type": "string",
                      "required": true
                    },
                    "values": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "required": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_ssm_parameter": {
          "version": 0,
          "block": {
            "attributes": {
              "allowed_pattern": {
                "type": "string",
                "optional": true
              },
              "arn": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "description": {
                "type": "string",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "key_id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "overwrite": {
                "type": "bool",
                "optional": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              },
              "tier": {
                "type": "string",
                "optional": true
              },
              "type": {
                "type": "string",
                "required": true
              },
              "value": {
                "type": "string",
                "required": true,
                "sensitive": true
              },
              "version": {
                "type": "number",
                "computed": true
              }
            }
          }
        },
        "aws_ssm_patch_baseline": {
          "version": 0,
          "block": {
            "attributes": {
              "approved_patches": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true
              },
              "approved_patches_compliance_level": {
                "type": "string",
                "optional": true
              },
              "description": {
                "type": "string",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "operating_system": {
                "type": "string",
                "optional": true
              },
              "rejected_patches": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              }
            },
            "block_types": {
              "approval_rule": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "approve_after_days": {
                      "type": "number",
                      "required": true
                    },
                    "compliance_level": {
                      "type": "string",
                      "optional": true
                    },
                    "enable_non_security": {
                      "type": "bool",
                      "optional": true
                    }
                  },
                  "block_types": {
                    "patch_filter": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "key": {
                            "type": "string",
                            "required": true
                          },
                          "values": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "required": true
                          }
                        }
                      },
                      "min_items": 1,
                      "max_items": 10
                    }
                  }
                }
              },
              "global_filter": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "key": {
                      "type": "string",
                      "required": true
                    },
                    "values": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "required": true
                    }
                  }
                },
                "max_items": 4
              }
            }
          }
        },
        "aws_ssm_patch_group": {
          "version": 0,
          "block": {
            "attributes": {
              "baseline_id": {
                "type": "string",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "patch_group": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "aws_ssm_resource_data_sync": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              }
            },
            "block_types": {
              "s3_destination": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "bucket_name": {
                      "type": "string",
                      "required": true
                    },
                    "kms_key_arn": {
                      "type": "string",
                      "optional": true
                    },
                    "prefix": {
                      "type": "string",
                      "optional": true
                    },
                    "region": {
                      "type": "string",
                      "required": true
                    },
                    "sync_format": {
                      "type": "string",
                      "optional": true
                    }
                  }
                },
                "min_items": 1,
                "max_items": 1
              }
            }
          }
        },
        "aws_storagegateway_cache": {
          "version": 0,
          "block": {
            "attributes": {
              "disk_id": {
                "type": "string",
                "required": true
              },
              "gateway_arn": {
                "type": "string",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              }
            }
          }
        },
        "aws_storagegateway_cached_iscsi_volume": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "chap_enabled": {
                "type": "bool",
                "computed": true
              },
              "gateway_arn": {
                "type": "string",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "lun_number": {
                "type": "number",
                "computed": true
              },
              "network_interface_id": {
                "type": "string",
                "required": true
              },
              "network_interface_port": {
                "type": "number",
                "computed": true
              },
              "snapshot_id": {
                "type": "string",
                "optional": true
              },
              "source_volume_arn": {
                "type": "string",
                "optional": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              },
              "target_arn": {
                "type": "string",
                "computed": true
              },
              "target_name": {
                "type": "string",
                "required": true
              },
              "volume_arn": {
                "type": "string",
                "computed": true
              },
              "volume_id": {
                "type": "string",
                "computed": true
              },
              "volume_size_in_bytes": {
                "type": "number",
                "required": true
              }
            }
          }
        },
        "aws_storagegateway_gateway": {
          "version": 0,
          "block": {
            "attributes": {
              "activation_key": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "arn": {
                "type": "string",
                "computed": true
              },
              "cloudwatch_log_group_arn": {
                "type": "string",
                "optional": true
              },
              "gateway_id": {
                "type": "string",
                "computed": true
              },
              "gateway_ip_address": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "gateway_name": {
                "type": "string",
                "required": true
              },
              "gateway_timezone": {
                "type": "string",
                "required": true
              },
              "gateway_type": {
                "type": "string",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "medium_changer_type": {
                "type": "string",
                "optional": true
              },
              "smb_guest_password": {
                "type": "string",
                "optional": true,
                "sensitive": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              },
              "tape_drive_type": {
                "type": "string",
                "optional": true
              }
            },
            "block_types": {
              "smb_active_directory_settings": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "domain_name": {
                      "type": "string",
                      "required": true
                    },
                    "password": {
                      "type": "string",
                      "required": true,
                      "sensitive": true
                    },
                    "username": {
                      "type": "string",
                      "required": true
                    }
                  }
                },
                "max_items": 1
              },
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_storagegateway_nfs_file_share": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "client_list": {
                "type": [
                  "set",
                  "string"
                ],
                "required": true
              },
              "default_storage_class": {
                "type": "string",
                "optional": true
              },
              "fileshare_id": {
                "type": "string",
                "computed": true
              },
              "gateway_arn": {
                "type": "string",
                "required": true
              },
              "guess_mime_type_enabled": {
                "type": "bool",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "kms_encrypted": {
                "type": "bool",
                "optional": true
              },
              "kms_key_arn": {
                "type": "string",
                "optional": true
              },
              "location_arn": {
                "type": "string",
                "required": true
              },
              "object_acl": {
                "type": "string",
                "optional": true
              },
              "read_only": {
                "type": "bool",
                "optional": true
              },
              "requester_pays": {
                "type": "bool",
                "optional": true
              },
              "role_arn": {
                "type": "string",
                "required": true
              },
              "squash": {
                "type": "string",
                "optional": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              }
            },
            "block_types": {
              "nfs_file_share_defaults": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "directory_mode": {
                      "type": "string",
                      "optional": true
                    },
                    "file_mode": {
                      "type": "string",
                      "optional": true
                    },
                    "group_id": {
                      "type": "number",
                      "optional": true
                    },
                    "owner_id": {
                      "type": "number",
                      "optional": true
                    }
                  }
                },
                "max_items": 1
              },
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_storagegateway_smb_file_share": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "authentication": {
                "type": "string",
                "optional": true
              },
              "default_storage_class": {
                "type": "string",
                "optional": true
              },
              "fileshare_id": {
                "type": "string",
                "computed": true
              },
              "gateway_arn": {
                "type": "string",
                "required": true
              },
              "guess_mime_type_enabled": {
                "type": "bool",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "invalid_user_list": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true
              },
              "kms_encrypted": {
                "type": "bool",
                "optional": true
              },
              "kms_key_arn": {
                "type": "string",
                "optional": true
              },
              "location_arn": {
                "type": "string",
                "required": true
              },
              "object_acl": {
                "type": "string",
                "optional": true
              },
              "read_only": {
                "type": "bool",
                "optional": true
              },
              "requester_pays": {
                "type": "bool",
                "optional": true
              },
              "role_arn": {
                "type": "string",
                "required": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              },
              "valid_user_list": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true
              }
            },
            "block_types": {
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_storagegateway_upload_buffer": {
          "version": 0,
          "block": {
            "attributes": {
              "disk_id": {
                "type": "string",
                "required": true
              },
              "gateway_arn": {
                "type": "string",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              }
            }
          }
        },
        "aws_storagegateway_working_storage": {
          "version": 0,
          "block": {
            "attributes": {
              "disk_id": {
                "type": "string",
                "required": true
              },
              "gateway_arn": {
                "type": "string",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              }
            }
          }
        },
        "aws_subnet": {
          "version": 1,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "assign_ipv6_address_on_creation": {
                "type": "bool",
                "optional": true
              },
              "availability_zone": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "availability_zone_id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "cidr_block": {
                "type": "string",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "ipv6_cidr_block": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "ipv6_cidr_block_association_id": {
                "type": "string",
                "computed": true
              },
              "map_public_ip_on_launch": {
                "type": "bool",
                "optional": true
              },
              "owner_id": {
                "type": "string",
                "computed": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              },
              "vpc_id": {
                "type": "string",
                "required": true
              }
            },
            "block_types": {
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_swf_domain": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "description": {
                "type": "string",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name_prefix": {
                "type": "string",
                "optional": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              },
              "workflow_execution_retention_period_in_days": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "aws_transfer_server": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "endpoint": {
                "type": "string",
                "computed": true
              },
              "endpoint_type": {
                "type": "string",
                "optional": true
              },
              "force_destroy": {
                "type": "bool",
                "optional": true
              },
              "host_key": {
                "type": "string",
                "optional": true,
                "sensitive": true
              },
              "host_key_fingerprint": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "identity_provider_type": {
                "type": "string",
                "optional": true
              },
              "invocation_role": {
                "type": "string",
                "optional": true
              },
              "logging_role": {
                "type": "string",
                "optional": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              },
              "url": {
                "type": "string",
                "optional": true
              }
            },
            "block_types": {
              "endpoint_details": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "vpc_endpoint_id": {
                      "type": "string",
                      "required": true
                    }
                  }
                },
                "max_items": 1
              }
            }
          }
        },
        "aws_transfer_ssh_key": {
          "version": 0,
          "block": {
            "attributes": {
              "body": {
                "type": "string",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "server_id": {
                "type": "string",
                "required": true
              },
              "user_name": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "aws_transfer_user": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "home_directory": {
                "type": "string",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "policy": {
                "type": "string",
                "optional": true
              },
              "role": {
                "type": "string",
                "required": true
              },
              "server_id": {
                "type": "string",
                "required": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              },
              "user_name": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "aws_volume_attachment": {
          "version": 0,
          "block": {
            "attributes": {
              "device_name": {
                "type": "string",
                "required": true
              },
              "force_detach": {
                "type": "bool",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "instance_id": {
                "type": "string",
                "required": true
              },
              "skip_destroy": {
                "type": "bool",
                "optional": true
              },
              "volume_id": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "aws_vpc": {
          "version": 1,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "assign_generated_ipv6_cidr_block": {
                "type": "bool",
                "optional": true
              },
              "cidr_block": {
                "type": "string",
                "required": true
              },
              "default_network_acl_id": {
                "type": "string",
                "computed": true
              },
              "default_route_table_id": {
                "type": "string",
                "computed": true
              },
              "default_security_group_id": {
                "type": "string",
                "computed": true
              },
              "dhcp_options_id": {
                "type": "string",
                "computed": true
              },
              "enable_classiclink": {
                "type": "bool",
                "optional": true,
                "computed": true
              },
              "enable_classiclink_dns_support": {
                "type": "bool",
                "optional": true,
                "computed": true
              },
              "enable_dns_hostnames": {
                "type": "bool",
                "optional": true,
                "computed": true
              },
              "enable_dns_support": {
                "type": "bool",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "instance_tenancy": {
                "type": "string",
                "optional": true
              },
              "ipv6_association_id": {
                "type": "string",
                "computed": true
              },
              "ipv6_cidr_block": {
                "type": "string",
                "computed": true
              },
              "main_route_table_id": {
                "type": "string",
                "computed": true
              },
              "owner_id": {
                "type": "string",
                "computed": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              }
            }
          }
        },
        "aws_vpc_dhcp_options": {
          "version": 0,
          "block": {
            "attributes": {
              "domain_name": {
                "type": "string",
                "optional": true
              },
              "domain_name_servers": {
                "type": [
                  "list",
                  "string"
                ],
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "netbios_name_servers": {
                "type": [
                  "list",
                  "string"
                ],
                "optional": true
              },
              "netbios_node_type": {
                "type": "string",
                "optional": true
              },
              "ntp_servers": {
                "type": [
                  "list",
                  "string"
                ],
                "optional": true
              },
              "owner_id": {
                "type": "string",
                "computed": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              }
            }
          }
        },
        "aws_vpc_dhcp_options_association": {
          "version": 0,
          "block": {
            "attributes": {
              "dhcp_options_id": {
                "type": "string",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "vpc_id": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "aws_vpc_endpoint": {
          "version": 0,
          "block": {
            "attributes": {
              "auto_accept": {
                "type": "bool",
                "optional": true
              },
              "cidr_blocks": {
                "type": [
                  "list",
                  "string"
                ],
                "computed": true
              },
              "dns_entry": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "dns_name": "string",
                      "hosted_zone_id": "string"
                    }
                  ]
                ],
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "network_interface_ids": {
                "type": [
                  "set",
                  "string"
                ],
                "computed": true
              },
              "owner_id": {
                "type": "string",
                "computed": true
              },
              "policy": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "prefix_list_id": {
                "type": "string",
                "computed": true
              },
              "private_dns_enabled": {
                "type": "bool",
                "optional": true
              },
              "requester_managed": {
                "type": "bool",
                "computed": true
              },
              "route_table_ids": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true,
                "computed": true
              },
              "security_group_ids": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true,
                "computed": true
              },
              "service_name": {
                "type": "string",
                "required": true
              },
              "state": {
                "type": "string",
                "computed": true
              },
              "subnet_ids": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              },
              "vpc_endpoint_type": {
                "type": "string",
                "optional": true
              },
              "vpc_id": {
                "type": "string",
                "required": true
              }
            },
            "block_types": {
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_vpc_endpoint_connection_notification": {
          "version": 0,
          "block": {
            "attributes": {
              "connection_events": {
                "type": [
                  "set",
                  "string"
                ],
                "required": true
              },
              "connection_notification_arn": {
                "type": "string",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "notification_type": {
                "type": "string",
                "computed": true
              },
              "state": {
                "type": "string",
                "computed": true
              },
              "vpc_endpoint_id": {
                "type": "string",
                "optional": true
              },
              "vpc_endpoint_service_id": {
                "type": "string",
                "optional": true
              }
            }
          }
        },
        "aws_vpc_endpoint_route_table_association": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "route_table_id": {
                "type": "string",
                "required": true
              },
              "vpc_endpoint_id": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "aws_vpc_endpoint_service": {
          "version": 0,
          "block": {
            "attributes": {
              "acceptance_required": {
                "type": "bool",
                "required": true
              },
              "allowed_principals": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true,
                "computed": true
              },
              "availability_zones": {
                "type": [
                  "set",
                  "string"
                ],
                "computed": true
              },
              "base_endpoint_dns_names": {
                "type": [
                  "set",
                  "string"
                ],
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "manages_vpc_endpoints": {
                "type": "bool",
                "computed": true
              },
              "network_load_balancer_arns": {
                "type": [
                  "set",
                  "string"
                ],
                "required": true
              },
              "private_dns_name": {
                "type": "string",
                "computed": true
              },
              "service_name": {
                "type": "string",
                "computed": true
              },
              "service_type": {
                "type": "string",
                "computed": true
              },
              "state": {
                "type": "string",
                "computed": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              }
            }
          }
        },
        "aws_vpc_endpoint_service_allowed_principal": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "principal_arn": {
                "type": "string",
                "required": true
              },
              "vpc_endpoint_service_id": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "aws_vpc_endpoint_subnet_association": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "subnet_id": {
                "type": "string",
                "required": true
              },
              "vpc_endpoint_id": {
                "type": "string",
                "required": true
              }
            },
            "block_types": {
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_vpc_ipv4_cidr_block_association": {
          "version": 0,
          "block": {
            "attributes": {
              "cidr_block": {
                "type": "string",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "vpc_id": {
                "type": "string",
                "required": true
              }
            },
            "block_types": {
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_vpc_peering_connection": {
          "version": 0,
          "block": {
            "attributes": {
              "accept_status": {
                "type": "string",
                "computed": true
              },
              "auto_accept": {
                "type": "bool",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "peer_owner_id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "peer_region": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "peer_vpc_id": {
                "type": "string",
                "required": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              },
              "vpc_id": {
                "type": "string",
                "required": true
              }
            },
            "block_types": {
              "accepter": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "allow_classic_link_to_remote_vpc": {
                      "type": "bool",
                      "optional": true
                    },
                    "allow_remote_vpc_dns_resolution": {
                      "type": "bool",
                      "optional": true
                    },
                    "allow_vpc_to_remote_classic_link": {
                      "type": "bool",
                      "optional": true
                    }
                  }
                },
                "max_items": 1
              },
              "requester": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "allow_classic_link_to_remote_vpc": {
                      "type": "bool",
                      "optional": true
                    },
                    "allow_remote_vpc_dns_resolution": {
                      "type": "bool",
                      "optional": true
                    },
                    "allow_vpc_to_remote_classic_link": {
                      "type": "bool",
                      "optional": true
                    }
                  }
                },
                "max_items": 1
              },
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_vpc_peering_connection_accepter": {
          "version": 0,
          "block": {
            "attributes": {
              "accept_status": {
                "type": "string",
                "computed": true
              },
              "auto_accept": {
                "type": "bool",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "peer_owner_id": {
                "type": "string",
                "computed": true
              },
              "peer_region": {
                "type": "string",
                "computed": true
              },
              "peer_vpc_id": {
                "type": "string",
                "computed": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              },
              "vpc_id": {
                "type": "string",
                "computed": true
              },
              "vpc_peering_connection_id": {
                "type": "string",
                "required": true
              }
            },
            "block_types": {
              "accepter": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "allow_classic_link_to_remote_vpc": {
                      "type": "bool",
                      "optional": true
                    },
                    "allow_remote_vpc_dns_resolution": {
                      "type": "bool",
                      "optional": true
                    },
                    "allow_vpc_to_remote_classic_link": {
                      "type": "bool",
                      "optional": true
                    }
                  }
                },
                "max_items": 1
              },
              "requester": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "allow_classic_link_to_remote_vpc": {
                      "type": "bool",
                      "optional": true
                    },
                    "allow_remote_vpc_dns_resolution": {
                      "type": "bool",
                      "optional": true
                    },
                    "allow_vpc_to_remote_classic_link": {
                      "type": "bool",
                      "optional": true
                    }
                  }
                },
                "max_items": 1
              }
            }
          }
        },
        "aws_vpc_peering_connection_options": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "vpc_peering_connection_id": {
                "type": "string",
                "required": true
              }
            },
            "block_types": {
              "accepter": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "allow_classic_link_to_remote_vpc": {
                      "type": "bool",
                      "optional": true
                    },
                    "allow_remote_vpc_dns_resolution": {
                      "type": "bool",
                      "optional": true
                    },
                    "allow_vpc_to_remote_classic_link": {
                      "type": "bool",
                      "optional": true
                    }
                  }
                },
                "max_items": 1
              },
              "requester": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "allow_classic_link_to_remote_vpc": {
                      "type": "bool",
                      "optional": true
                    },
                    "allow_remote_vpc_dns_resolution": {
                      "type": "bool",
                      "optional": true
                    },
                    "allow_vpc_to_remote_classic_link": {
                      "type": "bool",
                      "optional": true
                    }
                  }
                },
                "max_items": 1
              }
            }
          }
        },
        "aws_vpn_connection": {
          "version": 0,
          "block": {
            "attributes": {
              "customer_gateway_configuration": {
                "type": "string",
                "computed": true
              },
              "customer_gateway_id": {
                "type": "string",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "routes": {
                "type": [
                  "set",
                  [
                    "object",
                    {
                      "destination_cidr_block": "string",
                      "source": "string",
                      "state": "string"
                    }
                  ]
                ],
                "computed": true
              },
              "static_routes_only": {
                "type": "bool",
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              },
              "transit_gateway_attachment_id": {
                "type": "string",
                "computed": true
              },
              "transit_gateway_id": {
                "type": "string",
                "optional": true
              },
              "tunnel1_address": {
                "type": "string",
                "computed": true
              },
              "tunnel1_bgp_asn": {
                "type": "string",
                "computed": true
              },
              "tunnel1_bgp_holdtime": {
                "type": "number",
                "computed": true
              },
              "tunnel1_cgw_inside_address": {
                "type": "string",
                "computed": true
              },
              "tunnel1_inside_cidr": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "tunnel1_preshared_key": {
                "type": "string",
                "optional": true,
                "computed": true,
                "sensitive": true
              },
              "tunnel1_vgw_inside_address": {
                "type": "string",
                "computed": true
              },
              "tunnel2_address": {
                "type": "string",
                "computed": true
              },
              "tunnel2_bgp_asn": {
                "type": "string",
                "computed": true
              },
              "tunnel2_bgp_holdtime": {
                "type": "number",
                "computed": true
              },
              "tunnel2_cgw_inside_address": {
                "type": "string",
                "computed": true
              },
              "tunnel2_inside_cidr": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "tunnel2_preshared_key": {
                "type": "string",
                "optional": true,
                "computed": true,
                "sensitive": true
              },
              "tunnel2_vgw_inside_address": {
                "type": "string",
                "computed": true
              },
              "type": {
                "type": "string",
                "required": true
              },
              "vgw_telemetry": {
                "type": [
                  "set",
                  [
                    "object",
                    {
                      "accepted_route_count": "number",
                      "last_status_change": "string",
                      "outside_ip_address": "string",
                      "status": "string",
                      "status_message": "string"
                    }
                  ]
                ],
                "computed": true
              },
              "vpn_gateway_id": {
                "type": "string",
                "optional": true
              }
            }
          }
        },
        "aws_vpn_connection_route": {
          "version": 0,
          "block": {
            "attributes": {
              "destination_cidr_block": {
                "type": "string",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "vpn_connection_id": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "aws_vpn_gateway": {
          "version": 0,
          "block": {
            "attributes": {
              "amazon_side_asn": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "availability_zone": {
                "type": "string",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              },
              "vpc_id": {
                "type": "string",
                "optional": true,
                "computed": true
              }
            }
          }
        },
        "aws_vpn_gateway_attachment": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "vpc_id": {
                "type": "string",
                "required": true
              },
              "vpn_gateway_id": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "aws_vpn_gateway_route_propagation": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "route_table_id": {
                "type": "string",
                "required": true
              },
              "vpn_gateway_id": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "aws_waf_byte_match_set": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              }
            },
            "block_types": {
              "byte_match_tuples": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "positional_constraint": {
                      "type": "string",
                      "required": true
                    },
                    "target_string": {
                      "type": "string",
                      "optional": true
                    },
                    "text_transformation": {
                      "type": "string",
                      "required": true
                    }
                  },
                  "block_types": {
                    "field_to_match": {
                      "nesting_mode": "set",
                      "block": {
                        "attributes": {
                          "data": {
                            "type": "string",
                            "optional": true
                          },
                          "type": {
                            "type": "string",
                            "required": true
                          }
                        }
                      },
                      "min_items": 1,
                      "max_items": 1
                    }
                  }
                }
              }
            }
          }
        },
        "aws_waf_geo_match_set": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              }
            },
            "block_types": {
              "geo_match_constraint": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "type": {
                      "type": "string",
                      "required": true
                    },
                    "value": {
                      "type": "string",
                      "required": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_waf_ipset": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              }
            },
            "block_types": {
              "ip_set_descriptors": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "type": {
                      "type": "string",
                      "required": true
                    },
                    "value": {
                      "type": "string",
                      "required": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_waf_rate_based_rule": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "metric_name": {
                "type": "string",
                "required": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "rate_key": {
                "type": "string",
                "required": true
              },
              "rate_limit": {
                "type": "number",
                "required": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              }
            },
            "block_types": {
              "predicates": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "data_id": {
                      "type": "string",
                      "required": true
                    },
                    "negated": {
                      "type": "bool",
                      "required": true
                    },
                    "type": {
                      "type": "string",
                      "required": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_waf_regex_match_set": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              }
            },
            "block_types": {
              "regex_match_tuple": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "regex_pattern_set_id": {
                      "type": "string",
                      "required": true
                    },
                    "text_transformation": {
                      "type": "string",
                      "required": true
                    }
                  },
                  "block_types": {
                    "field_to_match": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "data": {
                            "type": "string",
                            "optional": true
                          },
                          "type": {
                            "type": "string",
                            "required": true
                          }
                        }
                      },
                      "min_items": 1,
                      "max_items": 1
                    }
                  }
                }
              }
            }
          }
        },
        "aws_waf_regex_pattern_set": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "regex_pattern_strings": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true
              }
            }
          }
        },
        "aws_waf_rule": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "metric_name": {
                "type": "string",
                "required": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              }
            },
            "block_types": {
              "predicates": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "data_id": {
                      "type": "string",
                      "required": true
                    },
                    "negated": {
                      "type": "bool",
                      "required": true
                    },
                    "type": {
                      "type": "string",
                      "required": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_waf_rule_group": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "metric_name": {
                "type": "string",
                "required": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              }
            },
            "block_types": {
              "activated_rule": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "priority": {
                      "type": "number",
                      "required": true
                    },
                    "rule_id": {
                      "type": "string",
                      "required": true
                    },
                    "type": {
                      "type": "string",
                      "optional": true
                    }
                  },
                  "block_types": {
                    "action": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "type": {
                            "type": "string",
                            "required": true
                          }
                        }
                      },
                      "min_items": 1,
                      "max_items": 1
                    }
                  }
                }
              }
            }
          }
        },
        "aws_waf_size_constraint_set": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              }
            },
            "block_types": {
              "size_constraints": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "comparison_operator": {
                      "type": "string",
                      "required": true
                    },
                    "size": {
                      "type": "number",
                      "required": true
                    },
                    "text_transformation": {
                      "type": "string",
                      "required": true
                    }
                  },
                  "block_types": {
                    "field_to_match": {
                      "nesting_mode": "set",
                      "block": {
                        "attributes": {
                          "data": {
                            "type": "string",
                            "optional": true
                          },
                          "type": {
                            "type": "string",
                            "required": true
                          }
                        }
                      },
                      "min_items": 1,
                      "max_items": 1
                    }
                  }
                }
              }
            }
          }
        },
        "aws_waf_sql_injection_match_set": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              }
            },
            "block_types": {
              "sql_injection_match_tuples": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "text_transformation": {
                      "type": "string",
                      "required": true
                    }
                  },
                  "block_types": {
                    "field_to_match": {
                      "nesting_mode": "set",
                      "block": {
                        "attributes": {
                          "data": {
                            "type": "string",
                            "optional": true
                          },
                          "type": {
                            "type": "string",
                            "required": true
                          }
                        }
                      },
                      "min_items": 1,
                      "max_items": 1
                    }
                  }
                }
              }
            }
          }
        },
        "aws_waf_web_acl": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "metric_name": {
                "type": "string",
                "required": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              }
            },
            "block_types": {
              "default_action": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "type": {
                      "type": "string",
                      "required": true
                    }
                  }
                },
                "min_items": 1,
                "max_items": 1
              },
              "logging_configuration": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "log_destination": {
                      "type": "string",
                      "required": true
                    }
                  },
                  "block_types": {
                    "redacted_fields": {
                      "nesting_mode": "list",
                      "block": {
                        "block_types": {
                          "field_to_match": {
                            "nesting_mode": "set",
                            "block": {
                              "attributes": {
                                "data": {
                                  "type": "string",
                                  "optional": true
                                },
                                "type": {
                                  "type": "string",
                                  "required": true
                                }
                              }
                            },
                            "min_items": 1
                          }
                        }
                      },
                      "max_items": 1
                    }
                  }
                },
                "max_items": 1
              },
              "rules": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "priority": {
                      "type": "number",
                      "required": true
                    },
                    "rule_id": {
                      "type": "string",
                      "required": true
                    },
                    "type": {
                      "type": "string",
                      "optional": true
                    }
                  },
                  "block_types": {
                    "action": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "type": {
                            "type": "string",
                            "required": true
                          }
                        }
                      },
                      "max_items": 1
                    },
                    "override_action": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "type": {
                            "type": "string",
                            "required": true
                          }
                        }
                      },
                      "max_items": 1
                    }
                  }
                }
              }
            }
          }
        },
        "aws_waf_xss_match_set": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              }
            },
            "block_types": {
              "xss_match_tuples": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "text_transformation": {
                      "type": "string",
                      "required": true
                    }
                  },
                  "block_types": {
                    "field_to_match": {
                      "nesting_mode": "set",
                      "block": {
                        "attributes": {
                          "data": {
                            "type": "string",
                            "optional": true
                          },
                          "type": {
                            "type": "string",
                            "required": true
                          }
                        }
                      },
                      "min_items": 1,
                      "max_items": 1
                    }
                  }
                }
              }
            }
          }
        },
        "aws_wafregional_byte_match_set": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              }
            },
            "block_types": {
              "byte_match_tuple": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "positional_constraint": {
                      "type": "string",
                      "required": true
                    },
                    "target_string": {
                      "type": "string",
                      "optional": true
                    },
                    "text_transformation": {
                      "type": "string",
                      "required": true
                    }
                  },
                  "block_types": {
                    "field_to_match": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "data": {
                            "type": "string",
                            "optional": true
                          },
                          "type": {
                            "type": "string",
                            "required": true
                          }
                        }
                      },
                      "min_items": 1,
                      "max_items": 1
                    }
                  }
                }
              },
              "byte_match_tuples": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "positional_constraint": {
                      "type": "string",
                      "required": true
                    },
                    "target_string": {
                      "type": "string",
                      "optional": true
                    },
                    "text_transformation": {
                      "type": "string",
                      "required": true
                    }
                  },
                  "block_types": {
                    "field_to_match": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "data": {
                            "type": "string",
                            "optional": true
                          },
                          "type": {
                            "type": "string",
                            "required": true
                          }
                        }
                      },
                      "min_items": 1,
                      "max_items": 1
                    }
                  }
                }
              }
            }
          }
        },
        "aws_wafregional_geo_match_set": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              }
            },
            "block_types": {
              "geo_match_constraint": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "type": {
                      "type": "string",
                      "required": true
                    },
                    "value": {
                      "type": "string",
                      "required": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_wafregional_ipset": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              }
            },
            "block_types": {
              "ip_set_descriptor": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "type": {
                      "type": "string",
                      "required": true
                    },
                    "value": {
                      "type": "string",
                      "required": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_wafregional_rate_based_rule": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "metric_name": {
                "type": "string",
                "required": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "rate_key": {
                "type": "string",
                "required": true
              },
              "rate_limit": {
                "type": "number",
                "required": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              }
            },
            "block_types": {
              "predicate": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "data_id": {
                      "type": "string",
                      "required": true
                    },
                    "negated": {
                      "type": "bool",
                      "required": true
                    },
                    "type": {
                      "type": "string",
                      "required": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_wafregional_regex_match_set": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              }
            },
            "block_types": {
              "regex_match_tuple": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "regex_pattern_set_id": {
                      "type": "string",
                      "required": true
                    },
                    "text_transformation": {
                      "type": "string",
                      "required": true
                    }
                  },
                  "block_types": {
                    "field_to_match": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "data": {
                            "type": "string",
                            "optional": true
                          },
                          "type": {
                            "type": "string",
                            "required": true
                          }
                        }
                      },
                      "min_items": 1,
                      "max_items": 1
                    }
                  }
                }
              }
            }
          }
        },
        "aws_wafregional_regex_pattern_set": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "regex_pattern_strings": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true
              }
            }
          }
        },
        "aws_wafregional_rule": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "metric_name": {
                "type": "string",
                "required": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              }
            },
            "block_types": {
              "predicate": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "data_id": {
                      "type": "string",
                      "required": true
                    },
                    "negated": {
                      "type": "bool",
                      "required": true
                    },
                    "type": {
                      "type": "string",
                      "required": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_wafregional_rule_group": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "metric_name": {
                "type": "string",
                "required": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              }
            },
            "block_types": {
              "activated_rule": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "priority": {
                      "type": "number",
                      "required": true
                    },
                    "rule_id": {
                      "type": "string",
                      "required": true
                    },
                    "type": {
                      "type": "string",
                      "optional": true
                    }
                  },
                  "block_types": {
                    "action": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "type": {
                            "type": "string",
                            "required": true
                          }
                        }
                      },
                      "min_items": 1,
                      "max_items": 1
                    }
                  }
                }
              }
            }
          }
        },
        "aws_wafregional_size_constraint_set": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              }
            },
            "block_types": {
              "size_constraints": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "comparison_operator": {
                      "type": "string",
                      "required": true
                    },
                    "size": {
                      "type": "number",
                      "required": true
                    },
                    "text_transformation": {
                      "type": "string",
                      "required": true
                    }
                  },
                  "block_types": {
                    "field_to_match": {
                      "nesting_mode": "set",
                      "block": {
                        "attributes": {
                          "data": {
                            "type": "string",
                            "optional": true
                          },
                          "type": {
                            "type": "string",
                            "required": true
                          }
                        }
                      },
                      "min_items": 1,
                      "max_items": 1
                    }
                  }
                }
              }
            }
          }
        },
        "aws_wafregional_sql_injection_match_set": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              }
            },
            "block_types": {
              "sql_injection_match_tuple": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "text_transformation": {
                      "type": "string",
                      "required": true
                    }
                  },
                  "block_types": {
                    "field_to_match": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "data": {
                            "type": "string",
                            "optional": true
                          },
                          "type": {
                            "type": "string",
                            "required": true
                          }
                        }
                      },
                      "min_items": 1,
                      "max_items": 1
                    }
                  }
                }
              }
            }
          }
        },
        "aws_wafregional_web_acl": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "metric_name": {
                "type": "string",
                "required": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              }
            },
            "block_types": {
              "default_action": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "type": {
                      "type": "string",
                      "required": true
                    }
                  }
                },
                "min_items": 1,
                "max_items": 1
              },
              "logging_configuration": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "log_destination": {
                      "type": "string",
                      "required": true
                    }
                  },
                  "block_types": {
                    "redacted_fields": {
                      "nesting_mode": "list",
                      "block": {
                        "block_types": {
                          "field_to_match": {
                            "nesting_mode": "set",
                            "block": {
                              "attributes": {
                                "data": {
                                  "type": "string",
                                  "optional": true
                                },
                                "type": {
                                  "type": "string",
                                  "required": true
                                }
                              }
                            },
                            "min_items": 1
                          }
                        }
                      },
                      "max_items": 1
                    }
                  }
                },
                "max_items": 1
              },
              "rule": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "priority": {
                      "type": "number",
                      "required": true
                    },
                    "rule_id": {
                      "type": "string",
                      "required": true
                    },
                    "type": {
                      "type": "string",
                      "optional": true
                    }
                  },
                  "block_types": {
                    "action": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "type": {
                            "type": "string",
                            "required": true
                          }
                        }
                      },
                      "max_items": 1
                    },
                    "override_action": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "type": {
                            "type": "string",
                            "required": true
                          }
                        }
                      },
                      "max_items": 1
                    }
                  }
                }
              }
            }
          }
        },
        "aws_wafregional_web_acl_association": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "resource_arn": {
                "type": "string",
                "required": true
              },
              "web_acl_id": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "aws_wafregional_xss_match_set": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              }
            },
            "block_types": {
              "xss_match_tuple": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "text_transformation": {
                      "type": "string",
                      "required": true
                    }
                  },
                  "block_types": {
                    "field_to_match": {
                      "nesting_mode": "set",
                      "block": {
                        "attributes": {
                          "data": {
                            "type": "string",
                            "optional": true
                          },
                          "type": {
                            "type": "string",
                            "required": true
                          }
                        }
                      },
                      "min_items": 1,
                      "max_items": 1
                    }
                  }
                }
              }
            }
          }
        },
        "aws_worklink_fleet": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "audit_stream_arn": {
                "type": "string",
                "optional": true
              },
              "company_code": {
                "type": "string",
                "computed": true
              },
              "created_time": {
                "type": "string",
                "computed": true
              },
              "device_ca_certificate": {
                "type": "string",
                "optional": true
              },
              "display_name": {
                "type": "string",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "last_updated_time": {
                "type": "string",
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "optimize_for_end_user_location": {
                "type": "bool",
                "optional": true
              }
            },
            "block_types": {
              "identity_provider": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "saml_metadata": {
                      "type": "string",
                      "required": true
                    },
                    "type": {
                      "type": "string",
                      "required": true
                    }
                  }
                },
                "max_items": 1
              },
              "network": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "security_group_ids": {
                      "type": [
                        "set",
                        "string"
                      ],
                      "required": true
                    },
                    "subnet_ids": {
                      "type": [
                        "set",
                        "string"
                      ],
                      "required": true
                    },
                    "vpc_id": {
                      "type": "string",
                      "required": true
                    }
                  }
                },
                "max_items": 1
              }
            }
          }
        },
        "aws_worklink_website_certificate_authority_association": {
          "version": 0,
          "block": {
            "attributes": {
              "certificate": {
                "type": "string",
                "required": true
              },
              "display_name": {
                "type": "string",
                "optional": true
              },
              "fleet_arn": {
                "type": "string",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "website_ca_id": {
                "type": "string",
                "computed": true
              }
            }
          }
        },
        "aws_workspaces_directory": {
          "version": 0,
          "block": {
            "attributes": {
              "directory_id": {
                "type": "string",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "subnet_ids": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              }
            },
            "block_types": {
              "self_service_permissions": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "change_compute_type": {
                      "type": "bool",
                      "optional": true
                    },
                    "increase_volume_size": {
                      "type": "bool",
                      "optional": true
                    },
                    "rebuild_workspace": {
                      "type": "bool",
                      "optional": true
                    },
                    "restart_workspace": {
                      "type": "bool",
                      "optional": true
                    },
                    "switch_running_mode": {
                      "type": "bool",
                      "optional": true
                    }
                  }
                },
                "max_items": 1
              }
            }
          }
        },
        "aws_workspaces_ip_group": {
          "version": 0,
          "block": {
            "attributes": {
              "description": {
                "type": "string",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              }
            },
            "block_types": {
              "rules": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "description": {
                      "type": "string",
                      "optional": true
                    },
                    "source": {
                      "type": "string",
                      "required": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_xray_sampling_rule": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "attributes": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              },
              "fixed_rate": {
                "type": "number",
                "required": true
              },
              "host": {
                "type": "string",
                "required": true
              },
              "http_method": {
                "type": "string",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "priority": {
                "type": "number",
                "required": true
              },
              "reservoir_size": {
                "type": "number",
                "required": true
              },
              "resource_arn": {
                "type": "string",
                "required": true
              },
              "rule_name": {
                "type": "string",
                "optional": true
              },
              "service_name": {
                "type": "string",
                "required": true
              },
              "service_type": {
                "type": "string",
                "required": true
              },
              "url_path": {
                "type": "string",
                "required": true
              },
              "version": {
                "type": "number",
                "required": true
              }
            }
          }
        }
      },
      "data_source_schemas": {
        "aws_acm_certificate": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "domain": {
                "type": "string",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "key_types": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true
              },
              "most_recent": {
                "type": "bool",
                "optional": true
              },
              "statuses": {
                "type": [
                  "list",
                  "string"
                ],
                "optional": true
              },
              "types": {
                "type": [
                  "list",
                  "string"
                ],
                "optional": true
              }
            }
          }
        },
        "aws_acmpca_certificate_authority": {
          "version": 1,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "required": true
              },
              "certificate": {
                "type": "string",
                "computed": true
              },
              "certificate_chain": {
                "type": "string",
                "computed": true
              },
              "certificate_signing_request": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "not_after": {
                "type": "string",
                "computed": true
              },
              "not_before": {
                "type": "string",
                "computed": true
              },
              "serial": {
                "type": "string",
                "computed": true
              },
              "status": {
                "type": "string",
                "computed": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true,
                "computed": true
              },
              "type": {
                "type": "string",
                "computed": true
              }
            },
            "block_types": {
              "revocation_configuration": {
                "nesting_mode": "list",
                "block": {
                  "block_types": {
                    "crl_configuration": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "custom_cname": {
                            "type": "string",
                            "computed": true
                          },
                          "enabled": {
                            "type": "bool",
                            "computed": true
                          },
                          "expiration_in_days": {
                            "type": "number",
                            "computed": true
                          },
                          "s3_bucket_name": {
                            "type": "string",
                            "computed": true
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "aws_alb": {
          "version": 0,
          "block": {
            "attributes": {
              "access_logs": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "bucket": "string",
                      "enabled": "bool",
                      "prefix": "string"
                    }
                  ]
                ],
                "computed": true
              },
              "arn": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "arn_suffix": {
                "type": "string",
                "computed": true
              },
              "dns_name": {
                "type": "string",
                "computed": true
              },
              "enable_deletion_protection": {
                "type": "bool",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "idle_timeout": {
                "type": "number",
                "computed": true
              },
              "internal": {
                "type": "bool",
                "computed": true
              },
              "load_balancer_type": {
                "type": "string",
                "computed": true
              },
              "name": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "security_groups": {
                "type": [
                  "set",
                  "string"
                ],
                "computed": true
              },
              "subnet_mapping": {
                "type": [
                  "set",
                  [
                    "object",
                    {
                      "allocation_id": "string",
                      "subnet_id": "string"
                    }
                  ]
                ],
                "computed": true
              },
              "subnets": {
                "type": [
                  "set",
                  "string"
                ],
                "computed": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true,
                "computed": true
              },
              "vpc_id": {
                "type": "string",
                "computed": true
              },
              "zone_id": {
                "type": "string",
                "computed": true
              }
            }
          }
        },
        "aws_alb_listener": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "certificate_arn": {
                "type": "string",
                "computed": true
              },
              "default_action": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "authenticate_cognito": [
                        "list",
                        [
                          "object",
                          {
                            "authentication_request_extra_params": [
                              "map",
                              "string"
                            ],
                            "on_unauthenticated_request": "string",
                            "scope": "string",
                            "session_cookie_name": "string",
                            "session_timeout": "number",
                            "user_pool_arn": "string",
                            "user_pool_client_id": "string",
                            "user_pool_domain": "string"
                          }
                        ]
                      ],
                      "authenticate_oidc": [
                        "list",
                        [
                          "object",
                          {
                            "authentication_request_extra_params": [
                              "map",
                              "string"
                            ],
                            "authorization_endpoint": "string",
                            "client_id": "string",
                            "client_secret": "string",
                            "issuer": "string",
                            "on_unauthenticated_request": "string",
                            "scope": "string",
                            "session_cookie_name": "string",
                            "session_timeout": "number",
                            "token_endpoint": "string",
                            "user_info_endpoint": "string"
                          }
                        ]
                      ],
                      "fixed_response": [
                        "list",
                        [
                          "object",
                          {
                            "content_type": "string",
                            "message_body": "string",
                            "status_code": "string"
                          }
                        ]
                      ],
                      "order": "number",
                      "redirect": [
                        "list",
                        [
                          "object",
                          {
                            "host": "string",
                            "path": "string",
                            "port": "string",
                            "protocol": "string",
                            "query": "string",
                            "status_code": "string"
                          }
                        ]
                      ],
                      "target_group_arn": "string",
                      "type": "string"
                    }
                  ]
                ],
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "load_balancer_arn": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "port": {
                "type": "number",
                "optional": true,
                "computed": true
              },
              "protocol": {
                "type": "string",
                "computed": true
              },
              "ssl_policy": {
                "type": "string",
                "computed": true
              }
            }
          }
        },
        "aws_alb_target_group": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "arn_suffix": {
                "type": "string",
                "computed": true
              },
              "deregistration_delay": {
                "type": "number",
                "computed": true
              },
              "health_check": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "enabled": "bool",
                      "healthy_threshold": "number",
                      "interval": "number",
                      "matcher": "string",
                      "path": "string",
                      "port": "string",
                      "protocol": "string",
                      "timeout": "number",
                      "unhealthy_threshold": "number"
                    }
                  ]
                ],
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "lambda_multi_value_headers_enabled": {
                "type": "bool",
                "computed": true
              },
              "name": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "port": {
                "type": "number",
                "computed": true
              },
              "protocol": {
                "type": "string",
                "computed": true
              },
              "proxy_protocol_v2": {
                "type": "bool",
                "computed": true
              },
              "slow_start": {
                "type": "number",
                "computed": true
              },
              "stickiness": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "cookie_duration": "number",
                      "enabled": "bool",
                      "type": "string"
                    }
                  ]
                ],
                "computed": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true,
                "computed": true
              },
              "target_type": {
                "type": "string",
                "computed": true
              },
              "vpc_id": {
                "type": "string",
                "computed": true
              }
            }
          }
        },
        "aws_ami": {
          "version": 0,
          "block": {
            "attributes": {
              "architecture": {
                "type": "string",
                "computed": true
              },
              "block_device_mappings": {
                "type": [
                  "set",
                  [
                    "object",
                    {
                      "device_name": "string",
                      "ebs": [
                        "map",
                        "string"
                      ],
                      "no_device": "string",
                      "virtual_name": "string"
                    }
                  ]
                ],
                "computed": true
              },
              "creation_date": {
                "type": "string",
                "computed": true
              },
              "description": {
                "type": "string",
                "computed": true
              },
              "executable_users": {
                "type": [
                  "list",
                  "string"
                ],
                "optional": true
              },
              "hypervisor": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "image_id": {
                "type": "string",
                "computed": true
              },
              "image_location": {
                "type": "string",
                "computed": true
              },
              "image_owner_alias": {
                "type": "string",
                "computed": true
              },
              "image_type": {
                "type": "string",
                "computed": true
              },
              "kernel_id": {
                "type": "string",
                "computed": true
              },
              "most_recent": {
                "type": "bool",
                "optional": true
              },
              "name": {
                "type": "string",
                "computed": true
              },
              "name_regex": {
                "type": "string",
                "optional": true
              },
              "owner_id": {
                "type": "string",
                "computed": true
              },
              "owners": {
                "type": [
                  "list",
                  "string"
                ],
                "required": true
              },
              "platform": {
                "type": "string",
                "computed": true
              },
              "product_codes": {
                "type": [
                  "set",
                  [
                    "object",
                    {
                      "product_code_id": "string",
                      "product_code_type": "string"
                    }
                  ]
                ],
                "computed": true
              },
              "public": {
                "type": "bool",
                "computed": true
              },
              "ramdisk_id": {
                "type": "string",
                "computed": true
              },
              "root_device_name": {
                "type": "string",
                "computed": true
              },
              "root_device_type": {
                "type": "string",
                "computed": true
              },
              "root_snapshot_id": {
                "type": "string",
                "computed": true
              },
              "sriov_net_support": {
                "type": "string",
                "computed": true
              },
              "state": {
                "type": "string",
                "computed": true
              },
              "state_reason": {
                "type": [
                  "map",
                  "string"
                ],
                "computed": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true,
                "computed": true
              },
              "virtualization_type": {
                "type": "string",
                "computed": true
              }
            },
            "block_types": {
              "filter": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "name": {
                      "type": "string",
                      "required": true
                    },
                    "values": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "required": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_ami_ids": {
          "version": 0,
          "block": {
            "attributes": {
              "executable_users": {
                "type": [
                  "list",
                  "string"
                ],
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "ids": {
                "type": [
                  "list",
                  "string"
                ],
                "computed": true
              },
              "name_regex": {
                "type": "string",
                "optional": true
              },
              "owners": {
                "type": [
                  "list",
                  "string"
                ],
                "required": true
              },
              "sort_ascending": {
                "type": "bool",
                "optional": true
              }
            },
            "block_types": {
              "filter": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "name": {
                      "type": "string",
                      "required": true
                    },
                    "values": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "required": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_api_gateway_api_key": {
          "version": 0,
          "block": {
            "attributes": {
              "created_date": {
                "type": "string",
                "computed": true
              },
              "description": {
                "type": "string",
                "computed": true
              },
              "enabled": {
                "type": "bool",
                "computed": true
              },
              "id": {
                "type": "string",
                "required": true
              },
              "last_updated_date": {
                "type": "string",
                "computed": true
              },
              "name": {
                "type": "string",
                "computed": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true,
                "computed": true
              },
              "value": {
                "type": "string",
                "computed": true,
                "sensitive": true
              }
            }
          }
        },
        "aws_api_gateway_resource": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "parent_id": {
                "type": "string",
                "computed": true
              },
              "path": {
                "type": "string",
                "required": true
              },
              "path_part": {
                "type": "string",
                "computed": true
              },
              "rest_api_id": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "aws_api_gateway_rest_api": {
          "version": 0,
          "block": {
            "attributes": {
              "api_key_source": {
                "type": "string",
                "computed": true
              },
              "arn": {
                "type": "string",
                "computed": true
              },
              "binary_media_types": {
                "type": [
                  "list",
                  "string"
                ],
                "computed": true
              },
              "description": {
                "type": "string",
                "computed": true
              },
              "endpoint_configuration": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "types": [
                        "list",
                        "string"
                      ],
                      "vpc_endpoint_ids": [
                        "list",
                        "string"
                      ]
                    }
                  ]
                ],
                "computed": true
              },
              "execution_arn": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "minimum_compression_size": {
                "type": "number",
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "policy": {
                "type": "string",
                "computed": true
              },
              "root_resource_id": {
                "type": "string",
                "computed": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true,
                "computed": true
              }
            }
          }
        },
        "aws_api_gateway_vpc_link": {
          "version": 0,
          "block": {
            "attributes": {
              "description": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "status": {
                "type": "string",
                "computed": true
              },
              "status_message": {
                "type": "string",
                "computed": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true,
                "computed": true
              },
              "target_arns": {
                "type": [
                  "set",
                  "string"
                ],
                "computed": true
              }
            }
          }
        },
        "aws_arn": {
          "version": 0,
          "block": {
            "attributes": {
              "account": {
                "type": "string",
                "computed": true
              },
              "arn": {
                "type": "string",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "partition": {
                "type": "string",
                "computed": true
              },
              "region": {
                "type": "string",
                "computed": true
              },
              "resource": {
                "type": "string",
                "computed": true
              },
              "service": {
                "type": "string",
                "computed": true
              }
            }
          }
        },
        "aws_autoscaling_group": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "availability_zones": {
                "type": [
                  "set",
                  "string"
                ],
                "computed": true
              },
              "default_cooldown": {
                "type": "number",
                "computed": true
              },
              "desired_capacity": {
                "type": "number",
                "computed": true
              },
              "health_check_grace_period": {
                "type": "number",
                "computed": true
              },
              "health_check_type": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "launch_configuration": {
                "type": "string",
                "computed": true
              },
              "load_balancers": {
                "type": [
                  "set",
                  "string"
                ],
                "computed": true
              },
              "max_size": {
                "type": "number",
                "computed": true
              },
              "min_size": {
                "type": "number",
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "new_instances_protected_from_scale_in": {
                "type": "bool",
                "computed": true
              },
              "placement_group": {
                "type": "string",
                "computed": true
              },
              "service_linked_role_arn": {
                "type": "string",
                "computed": true
              },
              "status": {
                "type": "string",
                "computed": true
              },
              "target_group_arns": {
                "type": [
                  "set",
                  "string"
                ],
                "computed": true
              },
              "termination_policies": {
                "type": [
                  "set",
                  "string"
                ],
                "computed": true
              },
              "vpc_zone_identifier": {
                "type": "string",
                "computed": true
              }
            }
          }
        },
        "aws_autoscaling_groups": {
          "version": 0,
          "block": {
            "attributes": {
              "arns": {
                "type": [
                  "list",
                  "string"
                ],
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "names": {
                "type": [
                  "list",
                  "string"
                ],
                "computed": true
              }
            },
            "block_types": {
              "filter": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "name": {
                      "type": "string",
                      "required": true
                    },
                    "values": {
                      "type": [
                        "set",
                        "string"
                      ],
                      "required": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_availability_zone": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name_suffix": {
                "type": "string",
                "computed": true
              },
              "region": {
                "type": "string",
                "computed": true
              },
              "state": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "zone_id": {
                "type": "string",
                "optional": true,
                "computed": true
              }
            }
          }
        },
        "aws_availability_zones": {
          "version": 0,
          "block": {
            "attributes": {
              "blacklisted_names": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true
              },
              "blacklisted_zone_ids": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "names": {
                "type": [
                  "list",
                  "string"
                ],
                "computed": true
              },
              "state": {
                "type": "string",
                "optional": true
              },
              "zone_ids": {
                "type": [
                  "list",
                  "string"
                ],
                "computed": true
              }
            }
          }
        },
        "aws_batch_compute_environment": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "compute_environment_name": {
                "type": "string",
                "required": true
              },
              "ecs_cluster_arn": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "service_role": {
                "type": "string",
                "computed": true
              },
              "state": {
                "type": "string",
                "computed": true
              },
              "status": {
                "type": "string",
                "computed": true
              },
              "status_reason": {
                "type": "string",
                "computed": true
              },
              "type": {
                "type": "string",
                "computed": true
              }
            }
          }
        },
        "aws_batch_job_queue": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "compute_environment_order": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "compute_environment": "string",
                      "order": "number"
                    }
                  ]
                ],
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "priority": {
                "type": "number",
                "computed": true
              },
              "state": {
                "type": "string",
                "computed": true
              },
              "status": {
                "type": "string",
                "computed": true
              },
              "status_reason": {
                "type": "string",
                "computed": true
              }
            }
          }
        },
        "aws_billing_service_account": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              }
            }
          }
        },
        "aws_caller_identity": {
          "version": 0,
          "block": {
            "attributes": {
              "account_id": {
                "type": "string",
                "computed": true
              },
              "arn": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "user_id": {
                "type": "string",
                "computed": true
              }
            }
          }
        },
        "aws_canonical_user_id": {
          "version": 0,
          "block": {
            "attributes": {
              "display_name": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              }
            }
          }
        },
        "aws_cloudformation_export": {
          "version": 0,
          "block": {
            "attributes": {
              "exporting_stack_id": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "value": {
                "type": "string",
                "computed": true
              }
            }
          }
        },
        "aws_cloudformation_stack": {
          "version": 0,
          "block": {
            "attributes": {
              "capabilities": {
                "type": [
                  "set",
                  "string"
                ],
                "computed": true
              },
              "description": {
                "type": "string",
                "computed": true
              },
              "disable_rollback": {
                "type": "bool",
                "computed": true
              },
              "iam_role_arn": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "notification_arns": {
                "type": [
                  "set",
                  "string"
                ],
                "computed": true
              },
              "outputs": {
                "type": [
                  "map",
                  "string"
                ],
                "computed": true
              },
              "parameters": {
                "type": [
                  "map",
                  "string"
                ],
                "computed": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true,
                "computed": true
              },
              "template_body": {
                "type": "string",
                "computed": true
              },
              "timeout_in_minutes": {
                "type": "number",
                "computed": true
              }
            }
          }
        },
        "aws_cloudhsm_v2_cluster": {
          "version": 0,
          "block": {
            "attributes": {
              "cluster_certificates": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "aws_hardware_certificate": "string",
                      "cluster_certificate": "string",
                      "cluster_csr": "string",
                      "hsm_certificate": "string",
                      "manufacturer_hardware_certificate": "string"
                    }
                  ]
                ],
                "computed": true
              },
              "cluster_id": {
                "type": "string",
                "required": true
              },
              "cluster_state": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "security_group_id": {
                "type": "string",
                "computed": true
              },
              "subnet_ids": {
                "type": [
                  "set",
                  "string"
                ],
                "computed": true
              },
              "vpc_id": {
                "type": "string",
                "computed": true
              }
            }
          }
        },
        "aws_cloudtrail_service_account": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "region": {
                "type": "string",
                "optional": true
              }
            }
          }
        },
        "aws_cloudwatch_log_group": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "creation_time": {
                "type": "number",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "kms_key_id": {
                "type": "string",
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "retention_in_days": {
                "type": "number",
                "computed": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true,
                "computed": true
              }
            }
          }
        },
        "aws_codecommit_repository": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "clone_url_http": {
                "type": "string",
                "computed": true
              },
              "clone_url_ssh": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "repository_id": {
                "type": "string",
                "computed": true
              },
              "repository_name": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "aws_cognito_user_pools": {
          "version": 0,
          "block": {
            "attributes": {
              "arns": {
                "type": [
                  "set",
                  "string"
                ],
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "ids": {
                "type": [
                  "set",
                  "string"
                ],
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "aws_cur_report_definition": {
          "version": 0,
          "block": {
            "attributes": {
              "additional_artifacts": {
                "type": [
                  "set",
                  "string"
                ],
                "computed": true
              },
              "additional_schema_elements": {
                "type": [
                  "set",
                  "string"
                ],
                "computed": true
              },
              "compression": {
                "type": "string",
                "computed": true
              },
              "format": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "report_name": {
                "type": "string",
                "required": true
              },
              "s3_bucket": {
                "type": "string",
                "computed": true
              },
              "s3_prefix": {
                "type": "string",
                "computed": true
              },
              "s3_region": {
                "type": "string",
                "computed": true
              },
              "time_unit": {
                "type": "string",
                "computed": true
              }
            }
          }
        },
        "aws_customer_gateway": {
          "version": 0,
          "block": {
            "attributes": {
              "bgp_asn": {
                "type": "number",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true
              },
              "ip_address": {
                "type": "string",
                "computed": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true,
                "computed": true
              },
              "type": {
                "type": "string",
                "computed": true
              }
            },
            "block_types": {
              "filter": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "name": {
                      "type": "string",
                      "required": true
                    },
                    "values": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "required": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_db_cluster_snapshot": {
          "version": 0,
          "block": {
            "attributes": {
              "allocated_storage": {
                "type": "number",
                "computed": true
              },
              "availability_zones": {
                "type": [
                  "list",
                  "string"
                ],
                "computed": true
              },
              "db_cluster_identifier": {
                "type": "string",
                "optional": true
              },
              "db_cluster_snapshot_arn": {
                "type": "string",
                "computed": true
              },
              "db_cluster_snapshot_identifier": {
                "type": "string",
                "optional": true
              },
              "engine": {
                "type": "string",
                "computed": true
              },
              "engine_version": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "include_public": {
                "type": "bool",
                "optional": true
              },
              "include_shared": {
                "type": "bool",
                "optional": true
              },
              "kms_key_id": {
                "type": "string",
                "computed": true
              },
              "license_model": {
                "type": "string",
                "computed": true
              },
              "most_recent": {
                "type": "bool",
                "optional": true
              },
              "port": {
                "type": "number",
                "computed": true
              },
              "snapshot_create_time": {
                "type": "string",
                "computed": true
              },
              "snapshot_type": {
                "type": "string",
                "optional": true
              },
              "source_db_cluster_snapshot_arn": {
                "type": "string",
                "computed": true
              },
              "status": {
                "type": "string",
                "computed": true
              },
              "storage_encrypted": {
                "type": "bool",
                "computed": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true,
                "computed": true
              },
              "vpc_id": {
                "type": "string",
                "computed": true
              }
            }
          }
        },
        "aws_db_event_categories": {
          "version": 0,
          "block": {
            "attributes": {
              "event_categories": {
                "type": [
                  "set",
                  "string"
                ],
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "source_type": {
                "type": "string",
                "optional": true
              }
            }
          }
        },
        "aws_db_instance": {
          "version": 1,
          "block": {
            "attributes": {
              "address": {
                "type": "string",
                "computed": true
              },
              "allocated_storage": {
                "type": "number",
                "computed": true
              },
              "auto_minor_version_upgrade": {
                "type": "bool",
                "computed": true
              },
              "availability_zone": {
                "type": "string",
                "computed": true
              },
              "backup_retention_period": {
                "type": "number",
                "computed": true
              },
              "ca_cert_identifier": {
                "type": "string",
                "computed": true
              },
              "db_cluster_identifier": {
                "type": "string",
                "computed": true
              },
              "db_instance_arn": {
                "type": "string",
                "computed": true
              },
              "db_instance_class": {
                "type": "string",
                "computed": true
              },
              "db_instance_identifier": {
                "type": "string",
                "required": true
              },
              "db_instance_port": {
                "type": "number",
                "computed": true
              },
              "db_name": {
                "type": "string",
                "computed": true
              },
              "db_parameter_groups": {
                "type": [
                  "list",
                  "string"
                ],
                "computed": true
              },
              "db_security_groups": {
                "type": [
                  "list",
                  "string"
                ],
                "computed": true
              },
              "db_subnet_group": {
                "type": "string",
                "computed": true
              },
              "enabled_cloudwatch_logs_exports": {
                "type": [
                  "list",
                  "string"
                ],
                "computed": true
              },
              "endpoint": {
                "type": "string",
                "computed": true
              },
              "engine": {
                "type": "string",
                "computed": true
              },
              "engine_version": {
                "type": "string",
                "computed": true
              },
              "hosted_zone_id": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "iops": {
                "type": "number",
                "computed": true
              },
              "kms_key_id": {
                "type": "string",
                "computed": true
              },
              "license_model": {
                "type": "string",
                "computed": true
              },
              "master_username": {
                "type": "string",
                "computed": true
              },
              "monitoring_interval": {
                "type": "number",
                "computed": true
              },
              "monitoring_role_arn": {
                "type": "string",
                "computed": true
              },
              "multi_az": {
                "type": "bool",
                "computed": true
              },
              "option_group_memberships": {
                "type": [
                  "list",
                  "string"
                ],
                "computed": true
              },
              "port": {
                "type": "number",
                "computed": true
              },
              "preferred_backup_window": {
                "type": "string",
                "computed": true
              },
              "preferred_maintenance_window": {
                "type": "string",
                "computed": true
              },
              "publicly_accessible": {
                "type": "bool",
                "computed": true
              },
              "replicate_source_db": {
                "type": "string",
                "computed": true
              },
              "resource_id": {
                "type": "string",
                "computed": true
              },
              "storage_encrypted": {
                "type": "bool",
                "computed": true
              },
              "storage_type": {
                "type": "string",
                "computed": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true,
                "computed": true
              },
              "timezone": {
                "type": "string",
                "computed": true
              },
              "vpc_security_groups": {
                "type": [
                  "list",
                  "string"
                ],
                "computed": true
              }
            }
          }
        },
        "aws_db_snapshot": {
          "version": 0,
          "block": {
            "attributes": {
              "allocated_storage": {
                "type": "number",
                "computed": true
              },
              "availability_zone": {
                "type": "string",
                "computed": true
              },
              "db_instance_identifier": {
                "type": "string",
                "optional": true
              },
              "db_snapshot_arn": {
                "type": "string",
                "computed": true
              },
              "db_snapshot_identifier": {
                "type": "string",
                "optional": true
              },
              "encrypted": {
                "type": "bool",
                "computed": true
              },
              "engine": {
                "type": "string",
                "computed": true
              },
              "engine_version": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "include_public": {
                "type": "bool",
                "optional": true
              },
              "include_shared": {
                "type": "bool",
                "optional": true
              },
              "iops": {
                "type": "number",
                "computed": true
              },
              "kms_key_id": {
                "type": "string",
                "computed": true
              },
              "license_model": {
                "type": "string",
                "computed": true
              },
              "most_recent": {
                "type": "bool",
                "optional": true
              },
              "option_group_name": {
                "type": "string",
                "computed": true
              },
              "port": {
                "type": "number",
                "computed": true
              },
              "snapshot_create_time": {
                "type": "string",
                "computed": true
              },
              "snapshot_type": {
                "type": "string",
                "optional": true
              },
              "source_db_snapshot_identifier": {
                "type": "string",
                "computed": true
              },
              "source_region": {
                "type": "string",
                "computed": true
              },
              "status": {
                "type": "string",
                "computed": true
              },
              "storage_type": {
                "type": "string",
                "computed": true
              },
              "vpc_id": {
                "type": "string",
                "computed": true
              }
            }
          }
        },
        "aws_directory_service_directory": {
          "version": 0,
          "block": {
            "attributes": {
              "access_url": {
                "type": "string",
                "computed": true
              },
              "alias": {
                "type": "string",
                "computed": true
              },
              "connect_settings": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "customer_dns_ips": [
                        "set",
                        "string"
                      ],
                      "customer_username": "string",
                      "subnet_ids": [
                        "set",
                        "string"
                      ],
                      "vpc_id": "string"
                    }
                  ]
                ],
                "computed": true
              },
              "description": {
                "type": "string",
                "computed": true
              },
              "directory_id": {
                "type": "string",
                "required": true
              },
              "dns_ip_addresses": {
                "type": [
                  "set",
                  "string"
                ],
                "computed": true
              },
              "edition": {
                "type": "string",
                "computed": true
              },
              "enable_sso": {
                "type": "bool",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "computed": true
              },
              "security_group_id": {
                "type": "string",
                "computed": true
              },
              "short_name": {
                "type": "string",
                "computed": true
              },
              "size": {
                "type": "string",
                "computed": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              },
              "type": {
                "type": "string",
                "computed": true
              },
              "vpc_settings": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "subnet_ids": [
                        "set",
                        "string"
                      ],
                      "vpc_id": "string"
                    }
                  ]
                ],
                "computed": true
              }
            }
          }
        },
        "aws_dx_gateway": {
          "version": 0,
          "block": {
            "attributes": {
              "amazon_side_asn": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "owner_account_id": {
                "type": "string",
                "computed": true
              }
            }
          }
        },
        "aws_dynamodb_table": {
          "version": 1,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "attribute": {
                "type": [
                  "set",
                  [
                    "object",
                    {
                      "name": "string",
                      "type": "string"
                    }
                  ]
                ],
                "computed": true
              },
              "billing_mode": {
                "type": "string",
                "computed": true
              },
              "global_secondary_index": {
                "type": [
                  "set",
                  [
                    "object",
                    {
                      "hash_key": "string",
                      "name": "string",
                      "non_key_attributes": [
                        "list",
                        "string"
                      ],
                      "projection_type": "string",
                      "range_key": "string",
                      "read_capacity": "number",
                      "write_capacity": "number"
                    }
                  ]
                ],
                "computed": true
              },
              "hash_key": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "local_secondary_index": {
                "type": [
                  "set",
                  [
                    "object",
                    {
                      "name": "string",
                      "non_key_attributes": [
                        "list",
                        "string"
                      ],
                      "projection_type": "string",
                      "range_key": "string"
                    }
                  ]
                ],
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "point_in_time_recovery": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "enabled": "bool"
                    }
                  ]
                ],
                "computed": true
              },
              "range_key": {
                "type": "string",
                "computed": true
              },
              "read_capacity": {
                "type": "number",
                "computed": true
              },
              "stream_arn": {
                "type": "string",
                "computed": true
              },
              "stream_enabled": {
                "type": "bool",
                "computed": true
              },
              "stream_label": {
                "type": "string",
                "computed": true
              },
              "stream_view_type": {
                "type": "string",
                "computed": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true,
                "computed": true
              },
              "ttl": {
                "type": [
                  "set",
                  [
                    "object",
                    {
                      "attribute_name": "string",
                      "enabled": "bool"
                    }
                  ]
                ],
                "computed": true
              },
              "write_capacity": {
                "type": "number",
                "computed": true
              }
            },
            "block_types": {
              "server_side_encryption": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "enabled": {
                      "type": "bool",
                      "computed": true
                    },
                    "kms_key_arn": {
                      "type": "string",
                      "computed": true
                    }
                  }
                },
                "max_items": 1
              }
            }
          }
        },
        "aws_ebs_default_kms_key": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "key_arn": {
                "type": "string",
                "computed": true
              }
            }
          }
        },
        "aws_ebs_encryption_by_default": {
          "version": 0,
          "block": {
            "attributes": {
              "enabled": {
                "type": "bool",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              }
            }
          }
        },
        "aws_ebs_snapshot": {
          "version": 0,
          "block": {
            "attributes": {
              "data_encryption_key_id": {
                "type": "string",
                "computed": true
              },
              "description": {
                "type": "string",
                "computed": true
              },
              "encrypted": {
                "type": "bool",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "kms_key_id": {
                "type": "string",
                "computed": true
              },
              "most_recent": {
                "type": "bool",
                "optional": true
              },
              "owner_alias": {
                "type": "string",
                "computed": true
              },
              "owner_id": {
                "type": "string",
                "computed": true
              },
              "owners": {
                "type": [
                  "list",
                  "string"
                ],
                "optional": true
              },
              "restorable_by_user_ids": {
                "type": [
                  "list",
                  "string"
                ],
                "optional": true
              },
              "snapshot_id": {
                "type": "string",
                "computed": true
              },
              "snapshot_ids": {
                "type": [
                  "list",
                  "string"
                ],
                "optional": true
              },
              "state": {
                "type": "string",
                "computed": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true,
                "computed": true
              },
              "volume_id": {
                "type": "string",
                "computed": true
              },
              "volume_size": {
                "type": "number",
                "computed": true
              }
            },
            "block_types": {
              "filter": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "name": {
                      "type": "string",
                      "required": true
                    },
                    "values": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "required": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_ebs_snapshot_ids": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "ids": {
                "type": [
                  "list",
                  "string"
                ],
                "computed": true
              },
              "owners": {
                "type": [
                  "list",
                  "string"
                ],
                "optional": true
              },
              "restorable_by_user_ids": {
                "type": [
                  "list",
                  "string"
                ],
                "optional": true
              }
            },
            "block_types": {
              "filter": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "name": {
                      "type": "string",
                      "required": true
                    },
                    "values": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "required": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_ebs_volume": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "availability_zone": {
                "type": "string",
                "computed": true
              },
              "encrypted": {
                "type": "bool",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "iops": {
                "type": "number",
                "computed": true
              },
              "kms_key_id": {
                "type": "string",
                "computed": true
              },
              "most_recent": {
                "type": "bool",
                "optional": true
              },
              "size": {
                "type": "number",
                "computed": true
              },
              "snapshot_id": {
                "type": "string",
                "computed": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true,
                "computed": true
              },
              "volume_id": {
                "type": "string",
                "computed": true
              },
              "volume_type": {
                "type": "string",
                "computed": true
              }
            },
            "block_types": {
              "filter": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "name": {
                      "type": "string",
                      "required": true
                    },
                    "values": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "required": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_ec2_instance_type_offering": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "instance_type": {
                "type": "string",
                "computed": true
              },
              "location_type": {
                "type": "string",
                "optional": true
              },
              "preferred_instance_types": {
                "type": [
                  "list",
                  "string"
                ],
                "optional": true
              }
            },
            "block_types": {
              "filter": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "name": {
                      "type": "string",
                      "required": true
                    },
                    "values": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "required": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_ec2_instance_type_offerings": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "instance_types": {
                "type": [
                  "set",
                  "string"
                ],
                "computed": true
              },
              "location_type": {
                "type": "string",
                "optional": true
              }
            },
            "block_types": {
              "filter": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "name": {
                      "type": "string",
                      "required": true
                    },
                    "values": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "required": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_ec2_transit_gateway": {
          "version": 0,
          "block": {
            "attributes": {
              "amazon_side_asn": {
                "type": "number",
                "computed": true
              },
              "arn": {
                "type": "string",
                "computed": true
              },
              "association_default_route_table_id": {
                "type": "string",
                "computed": true
              },
              "auto_accept_shared_attachments": {
                "type": "string",
                "computed": true
              },
              "default_route_table_association": {
                "type": "string",
                "computed": true
              },
              "default_route_table_propagation": {
                "type": "string",
                "computed": true
              },
              "description": {
                "type": "string",
                "computed": true
              },
              "dns_support": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true
              },
              "owner_id": {
                "type": "string",
                "computed": true
              },
              "propagation_default_route_table_id": {
                "type": "string",
                "computed": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true,
                "computed": true
              },
              "vpn_ecmp_support": {
                "type": "string",
                "computed": true
              }
            },
            "block_types": {
              "filter": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "name": {
                      "type": "string",
                      "required": true
                    },
                    "values": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "required": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_ec2_transit_gateway_dx_gateway_attachment": {
          "version": 0,
          "block": {
            "attributes": {
              "dx_gateway_id": {
                "type": "string",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true,
                "computed": true
              },
              "transit_gateway_id": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "aws_ec2_transit_gateway_route_table": {
          "version": 0,
          "block": {
            "attributes": {
              "default_association_route_table": {
                "type": "bool",
                "computed": true
              },
              "default_propagation_route_table": {
                "type": "bool",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true,
                "computed": true
              },
              "transit_gateway_id": {
                "type": "string",
                "computed": true
              }
            },
            "block_types": {
              "filter": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "name": {
                      "type": "string",
                      "required": true
                    },
                    "values": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "required": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_ec2_transit_gateway_vpc_attachment": {
          "version": 0,
          "block": {
            "attributes": {
              "dns_support": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true
              },
              "ipv6_support": {
                "type": "string",
                "computed": true
              },
              "subnet_ids": {
                "type": [
                  "set",
                  "string"
                ],
                "computed": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true,
                "computed": true
              },
              "transit_gateway_id": {
                "type": "string",
                "computed": true
              },
              "vpc_id": {
                "type": "string",
                "computed": true
              },
              "vpc_owner_id": {
                "type": "string",
                "computed": true
              }
            },
            "block_types": {
              "filter": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "name": {
                      "type": "string",
                      "required": true
                    },
                    "values": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "required": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_ec2_transit_gateway_vpn_attachment": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true,
                "computed": true
              },
              "transit_gateway_id": {
                "type": "string",
                "required": true
              },
              "vpn_connection_id": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "aws_ecr_image": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "image_digest": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "image_pushed_at": {
                "type": "number",
                "computed": true
              },
              "image_size_in_bytes": {
                "type": "number",
                "computed": true
              },
              "image_tag": {
                "type": "string",
                "optional": true
              },
              "image_tags": {
                "type": [
                  "list",
                  "string"
                ],
                "computed": true
              },
              "registry_id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "repository_name": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "aws_ecr_repository": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "registry_id": {
                "type": "string",
                "computed": true
              },
              "repository_url": {
                "type": "string",
                "computed": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true,
                "computed": true
              }
            }
          }
        },
        "aws_ecs_cluster": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "cluster_name": {
                "type": "string",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "pending_tasks_count": {
                "type": "number",
                "computed": true
              },
              "registered_container_instances_count": {
                "type": "number",
                "computed": true
              },
              "running_tasks_count": {
                "type": "number",
                "computed": true
              },
              "setting": {
                "type": [
                  "set",
                  [
                    "object",
                    {
                      "name": "string",
                      "value": "string"
                    }
                  ]
                ],
                "computed": true
              },
              "status": {
                "type": "string",
                "computed": true
              }
            }
          }
        },
        "aws_ecs_container_definition": {
          "version": 0,
          "block": {
            "attributes": {
              "container_name": {
                "type": "string",
                "required": true
              },
              "cpu": {
                "type": "number",
                "computed": true
              },
              "disable_networking": {
                "type": "bool",
                "computed": true
              },
              "docker_labels": {
                "type": [
                  "map",
                  "string"
                ],
                "computed": true
              },
              "environment": {
                "type": [
                  "map",
                  "string"
                ],
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "image": {
                "type": "string",
                "computed": true
              },
              "image_digest": {
                "type": "string",
                "computed": true
              },
              "memory": {
                "type": "number",
                "computed": true
              },
              "memory_reservation": {
                "type": "number",
                "computed": true
              },
              "task_definition": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "aws_ecs_service": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "cluster_arn": {
                "type": "string",
                "required": true
              },
              "desired_count": {
                "type": "number",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "launch_type": {
                "type": "string",
                "computed": true
              },
              "scheduling_strategy": {
                "type": "string",
                "computed": true
              },
              "service_name": {
                "type": "string",
                "required": true
              },
              "task_definition": {
                "type": "string",
                "computed": true
              }
            }
          }
        },
        "aws_ecs_task_definition": {
          "version": 1,
          "block": {
            "attributes": {
              "family": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "network_mode": {
                "type": "string",
                "computed": true
              },
              "revision": {
                "type": "number",
                "computed": true
              },
              "status": {
                "type": "string",
                "computed": true
              },
              "task_definition": {
                "type": "string",
                "required": true
              },
              "task_role_arn": {
                "type": "string",
                "computed": true
              }
            }
          }
        },
        "aws_efs_file_system": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "creation_token": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "dns_name": {
                "type": "string",
                "computed": true
              },
              "encrypted": {
                "type": "bool",
                "computed": true
              },
              "file_system_id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "kms_key_id": {
                "type": "string",
                "computed": true
              },
              "lifecycle_policy": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "transition_to_ia": "string"
                    }
                  ]
                ],
                "computed": true
              },
              "performance_mode": {
                "type": "string",
                "computed": true
              },
              "provisioned_throughput_in_mibps": {
                "type": "number",
                "computed": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true,
                "computed": true
              },
              "throughput_mode": {
                "type": "string",
                "computed": true
              }
            }
          }
        },
        "aws_efs_mount_target": {
          "version": 0,
          "block": {
            "attributes": {
              "dns_name": {
                "type": "string",
                "computed": true
              },
              "file_system_arn": {
                "type": "string",
                "computed": true
              },
              "file_system_id": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "ip_address": {
                "type": "string",
                "computed": true
              },
              "mount_target_id": {
                "type": "string",
                "required": true
              },
              "network_interface_id": {
                "type": "string",
                "computed": true
              },
              "security_groups": {
                "type": [
                  "set",
                  "string"
                ],
                "computed": true
              },
              "subnet_id": {
                "type": "string",
                "computed": true
              }
            }
          }
        },
        "aws_eip": {
          "version": 0,
          "block": {
            "attributes": {
              "association_id": {
                "type": "string",
                "computed": true
              },
              "domain": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "instance_id": {
                "type": "string",
                "computed": true
              },
              "network_interface_id": {
                "type": "string",
                "computed": true
              },
              "network_interface_owner_id": {
                "type": "string",
                "computed": true
              },
              "private_dns": {
                "type": "string",
                "computed": true
              },
              "private_ip": {
                "type": "string",
                "computed": true
              },
              "public_dns": {
                "type": "string",
                "computed": true
              },
              "public_ip": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "public_ipv4_pool": {
                "type": "string",
                "computed": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true,
                "computed": true
              }
            },
            "block_types": {
              "filter": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "name": {
                      "type": "string",
                      "required": true
                    },
                    "values": {
                      "type": [
                        "set",
                        "string"
                      ],
                      "required": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_eks_cluster": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "certificate_authority": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "data": "string"
                    }
                  ]
                ],
                "computed": true
              },
              "created_at": {
                "type": "string",
                "computed": true
              },
              "enabled_cluster_log_types": {
                "type": [
                  "set",
                  "string"
                ],
                "computed": true
              },
              "endpoint": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "identity": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "oidc": [
                        "list",
                        [
                          "object",
                          {
                            "issuer": "string"
                          }
                        ]
                      ]
                    }
                  ]
                ],
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "platform_version": {
                "type": "string",
                "computed": true
              },
              "role_arn": {
                "type": "string",
                "computed": true
              },
              "status": {
                "type": "string",
                "computed": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true,
                "computed": true
              },
              "version": {
                "type": "string",
                "computed": true
              },
              "vpc_config": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "cluster_security_group_id": "string",
                      "endpoint_private_access": "bool",
                      "endpoint_public_access": "bool",
                      "public_access_cidrs": [
                        "set",
                        "string"
                      ],
                      "security_group_ids": [
                        "set",
                        "string"
                      ],
                      "subnet_ids": [
                        "set",
                        "string"
                      ],
                      "vpc_id": "string"
                    }
                  ]
                ],
                "computed": true
              }
            }
          }
        },
        "aws_eks_cluster_auth": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "token": {
                "type": "string",
                "computed": true,
                "sensitive": true
              }
            }
          }
        },
        "aws_elastic_beanstalk_application": {
          "version": 0,
          "block": {
            "attributes": {
              "appversion_lifecycle": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "delete_source_from_s3": "bool",
                      "max_age_in_days": "number",
                      "max_count": "number",
                      "service_role": "string"
                    }
                  ]
                ],
                "computed": true
              },
              "arn": {
                "type": "string",
                "computed": true
              },
              "description": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "aws_elastic_beanstalk_hosted_zone": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "region": {
                "type": "string",
                "optional": true
              }
            }
          }
        },
        "aws_elastic_beanstalk_solution_stack": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "most_recent": {
                "type": "bool",
                "optional": true
              },
              "name": {
                "type": "string",
                "computed": true
              },
              "name_regex": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "aws_elasticache_cluster": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "availability_zone": {
                "type": "string",
                "computed": true
              },
              "cache_nodes": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "address": "string",
                      "availability_zone": "string",
                      "id": "string",
                      "port": "number"
                    }
                  ]
                ],
                "computed": true
              },
              "cluster_address": {
                "type": "string",
                "computed": true
              },
              "cluster_id": {
                "type": "string",
                "required": true
              },
              "configuration_endpoint": {
                "type": "string",
                "computed": true
              },
              "engine": {
                "type": "string",
                "computed": true
              },
              "engine_version": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "maintenance_window": {
                "type": "string",
                "computed": true
              },
              "node_type": {
                "type": "string",
                "computed": true
              },
              "notification_topic_arn": {
                "type": "string",
                "computed": true
              },
              "num_cache_nodes": {
                "type": "number",
                "computed": true
              },
              "parameter_group_name": {
                "type": "string",
                "computed": true
              },
              "port": {
                "type": "number",
                "computed": true
              },
              "replication_group_id": {
                "type": "string",
                "computed": true
              },
              "security_group_ids": {
                "type": [
                  "set",
                  "string"
                ],
                "computed": true
              },
              "security_group_names": {
                "type": [
                  "set",
                  "string"
                ],
                "computed": true
              },
              "snapshot_retention_limit": {
                "type": "number",
                "computed": true
              },
              "snapshot_window": {
                "type": "string",
                "computed": true
              },
              "subnet_group_name": {
                "type": "string",
                "computed": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true,
                "computed": true
              }
            }
          }
        },
        "aws_elasticache_replication_group": {
          "version": 1,
          "block": {
            "attributes": {
              "auth_token_enabled": {
                "type": "bool",
                "computed": true
              },
              "automatic_failover_enabled": {
                "type": "bool",
                "computed": true
              },
              "configuration_endpoint_address": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "member_clusters": {
                "type": [
                  "set",
                  "string"
                ],
                "computed": true
              },
              "node_type": {
                "type": "string",
                "computed": true
              },
              "number_cache_clusters": {
                "type": "number",
                "computed": true
              },
              "port": {
                "type": "number",
                "computed": true
              },
              "primary_endpoint_address": {
                "type": "string",
                "computed": true
              },
              "replication_group_description": {
                "type": "string",
                "computed": true
              },
              "replication_group_id": {
                "type": "string",
                "required": true
              },
              "snapshot_retention_limit": {
                "type": "number",
                "computed": true
              },
              "snapshot_window": {
                "type": "string",
                "computed": true
              }
            }
          }
        },
        "aws_elasticsearch_domain": {
          "version": 0,
          "block": {
            "attributes": {
              "access_policies": {
                "type": "string",
                "computed": true
              },
              "advanced_options": {
                "type": [
                  "map",
                  "string"
                ],
                "computed": true
              },
              "arn": {
                "type": "string",
                "computed": true
              },
              "cluster_config": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "dedicated_master_count": "number",
                      "dedicated_master_enabled": "bool",
                      "dedicated_master_type": "string",
                      "instance_count": "number",
                      "instance_type": "string",
                      "zone_awareness_config": [
                        "list",
                        [
                          "object",
                          {
                            "availability_zone_count": "number"
                          }
                        ]
                      ],
                      "zone_awareness_enabled": "bool"
                    }
                  ]
                ],
                "computed": true
              },
              "cognito_options": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "enabled": "bool",
                      "identity_pool_id": "string",
                      "role_arn": "string",
                      "user_pool_id": "string"
                    }
                  ]
                ],
                "computed": true
              },
              "created": {
                "type": "bool",
                "computed": true
              },
              "deleted": {
                "type": "bool",
                "computed": true
              },
              "domain_id": {
                "type": "string",
                "computed": true
              },
              "domain_name": {
                "type": "string",
                "required": true
              },
              "ebs_options": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "ebs_enabled": "bool",
                      "iops": "number",
                      "volume_size": "number",
                      "volume_type": "string"
                    }
                  ]
                ],
                "computed": true
              },
              "elasticsearch_version": {
                "type": "string",
                "computed": true
              },
              "encryption_at_rest": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "enabled": "bool",
                      "kms_key_id": "string"
                    }
                  ]
                ],
                "computed": true
              },
              "endpoint": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "kibana_endpoint": {
                "type": "string",
                "computed": true
              },
              "log_publishing_options": {
                "type": [
                  "set",
                  [
                    "object",
                    {
                      "cloudwatch_log_group_arn": "string",
                      "enabled": "bool",
                      "log_type": "string"
                    }
                  ]
                ],
                "computed": true
              },
              "node_to_node_encryption": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "enabled": "bool"
                    }
                  ]
                ],
                "computed": true
              },
              "processing": {
                "type": "string",
                "computed": true
              },
              "snapshot_options": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "automated_snapshot_start_hour": "number"
                    }
                  ]
                ],
                "computed": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true,
                "computed": true
              },
              "vpc_options": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "availability_zones": [
                        "set",
                        "string"
                      ],
                      "security_group_ids": [
                        "set",
                        "string"
                      ],
                      "subnet_ids": [
                        "set",
                        "string"
                      ],
                      "vpc_id": "string"
                    }
                  ]
                ],
                "computed": true
              }
            }
          }
        },
        "aws_elb": {
          "version": 0,
          "block": {
            "attributes": {
              "access_logs": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "bucket": "string",
                      "bucket_prefix": "string",
                      "enabled": "bool",
                      "interval": "number"
                    }
                  ]
                ],
                "computed": true
              },
              "arn": {
                "type": "string",
                "computed": true
              },
              "availability_zones": {
                "type": [
                  "set",
                  "string"
                ],
                "computed": true
              },
              "connection_draining": {
                "type": "bool",
                "computed": true
              },
              "connection_draining_timeout": {
                "type": "number",
                "computed": true
              },
              "cross_zone_load_balancing": {
                "type": "bool",
                "computed": true
              },
              "dns_name": {
                "type": "string",
                "computed": true
              },
              "health_check": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "healthy_threshold": "number",
                      "interval": "number",
                      "target": "string",
                      "timeout": "number",
                      "unhealthy_threshold": "number"
                    }
                  ]
                ],
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "idle_timeout": {
                "type": "number",
                "computed": true
              },
              "instances": {
                "type": [
                  "set",
                  "string"
                ],
                "computed": true
              },
              "internal": {
                "type": "bool",
                "computed": true
              },
              "listener": {
                "type": [
                  "set",
                  [
                    "object",
                    {
                      "instance_port": "number",
                      "instance_protocol": "string",
                      "lb_port": "number",
                      "lb_protocol": "string",
                      "ssl_certificate_id": "string"
                    }
                  ]
                ],
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "security_groups": {
                "type": [
                  "set",
                  "string"
                ],
                "computed": true
              },
              "source_security_group": {
                "type": "string",
                "computed": true
              },
              "source_security_group_id": {
                "type": "string",
                "computed": true
              },
              "subnets": {
                "type": [
                  "set",
                  "string"
                ],
                "computed": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true,
                "computed": true
              },
              "zone_id": {
                "type": "string",
                "computed": true
              }
            }
          }
        },
        "aws_elb_hosted_zone_id": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "region": {
                "type": "string",
                "optional": true
              }
            }
          }
        },
        "aws_elb_service_account": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "region": {
                "type": "string",
                "optional": true
              }
            }
          }
        },
        "aws_glue_script": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "language": {
                "type": "string",
                "optional": true
              },
              "python_script": {
                "type": "string",
                "computed": true
              },
              "scala_code": {
                "type": "string",
                "computed": true
              }
            },
            "block_types": {
              "dag_edge": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "source": {
                      "type": "string",
                      "required": true
                    },
                    "target": {
                      "type": "string",
                      "required": true
                    },
                    "target_parameter": {
                      "type": "string",
                      "optional": true
                    }
                  }
                },
                "min_items": 1
              },
              "dag_node": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "required": true
                    },
                    "line_number": {
                      "type": "number",
                      "optional": true
                    },
                    "node_type": {
                      "type": "string",
                      "required": true
                    }
                  },
                  "block_types": {
                    "args": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "name": {
                            "type": "string",
                            "required": true
                          },
                          "param": {
                            "type": "bool",
                            "optional": true
                          },
                          "value": {
                            "type": "string",
                            "required": true
                          }
                        }
                      },
                      "min_items": 1
                    }
                  }
                },
                "min_items": 1
              }
            }
          }
        },
        "aws_guardduty_detector": {
          "version": 0,
          "block": {
            "attributes": {
              "finding_publishing_frequency": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true
              },
              "service_role_arn": {
                "type": "string",
                "computed": true
              },
              "status": {
                "type": "string",
                "computed": true
              }
            }
          }
        },
        "aws_iam_account_alias": {
          "version": 0,
          "block": {
            "attributes": {
              "account_alias": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              }
            }
          }
        },
        "aws_iam_group": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "group_id": {
                "type": "string",
                "computed": true
              },
              "group_name": {
                "type": "string",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "path": {
                "type": "string",
                "computed": true
              },
              "users": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "arn": "string",
                      "path": "string",
                      "user_id": "string",
                      "user_name": "string"
                    }
                  ]
                ],
                "computed": true
              }
            }
          }
        },
        "aws_iam_instance_profile": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "create_date": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "path": {
                "type": "string",
                "computed": true
              },
              "role_arn": {
                "type": "string",
                "computed": true
              },
              "role_id": {
                "type": "string",
                "computed": true
              },
              "role_name": {
                "type": "string",
                "computed": true
              }
            }
          }
        },
        "aws_iam_policy": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "required": true
              },
              "description": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "computed": true
              },
              "path": {
                "type": "string",
                "computed": true
              },
              "policy": {
                "type": "string",
                "computed": true
              }
            }
          }
        },
        "aws_iam_policy_document": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "json": {
                "type": "string",
                "computed": true
              },
              "override_json": {
                "type": "string",
                "optional": true
              },
              "policy_id": {
                "type": "string",
                "optional": true
              },
              "source_json": {
                "type": "string",
                "optional": true
              },
              "version": {
                "type": "string",
                "optional": true
              }
            },
            "block_types": {
              "statement": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "actions": {
                      "type": [
                        "set",
                        "string"
                      ],
                      "optional": true
                    },
                    "effect": {
                      "type": "string",
                      "optional": true
                    },
                    "not_actions": {
                      "type": [
                        "set",
                        "string"
                      ],
                      "optional": true
                    },
                    "not_resources": {
                      "type": [
                        "set",
                        "string"
                      ],
                      "optional": true
                    },
                    "resources": {
                      "type": [
                        "set",
                        "string"
                      ],
                      "optional": true
                    },
                    "sid": {
                      "type": "string",
                      "optional": true
                    }
                  },
                  "block_types": {
                    "condition": {
                      "nesting_mode": "set",
                      "block": {
                        "attributes": {
                          "test": {
                            "type": "string",
                            "required": true
                          },
                          "values": {
                            "type": [
                              "set",
                              "string"
                            ],
                            "required": true
                          },
                          "variable": {
                            "type": "string",
                            "required": true
                          }
                        }
                      }
                    },
                    "not_principals": {
                      "nesting_mode": "set",
                      "block": {
                        "attributes": {
                          "identifiers": {
                            "type": [
                              "set",
                              "string"
                            ],
                            "required": true
                          },
                          "type": {
                            "type": "string",
                            "required": true
                          }
                        }
                      }
                    },
                    "principals": {
                      "nesting_mode": "set",
                      "block": {
                        "attributes": {
                          "identifiers": {
                            "type": [
                              "set",
                              "string"
                            ],
                            "required": true
                          },
                          "type": {
                            "type": "string",
                            "required": true
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "aws_iam_role": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "assume_role_policy": {
                "type": "string",
                "computed": true
              },
              "assume_role_policy_document": {
                "type": "string",
                "computed": true
              },
              "create_date": {
                "type": "string",
                "computed": true
              },
              "description": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "max_session_duration": {
                "type": "number",
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "path": {
                "type": "string",
                "computed": true
              },
              "permissions_boundary": {
                "type": "string",
                "computed": true
              },
              "role_id": {
                "type": "string",
                "computed": true
              },
              "role_name": {
                "type": "string",
                "optional": true
              },
              "unique_id": {
                "type": "string",
                "computed": true
              }
            }
          }
        },
        "aws_iam_server_certificate": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "certificate_body": {
                "type": "string",
                "computed": true
              },
              "certificate_chain": {
                "type": "string",
                "computed": true
              },
              "expiration_date": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "latest": {
                "type": "bool",
                "optional": true
              },
              "name": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name_prefix": {
                "type": "string",
                "optional": true
              },
              "path": {
                "type": "string",
                "computed": true
              },
              "path_prefix": {
                "type": "string",
                "optional": true
              },
              "upload_date": {
                "type": "string",
                "computed": true
              }
            }
          }
        },
        "aws_iam_user": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "path": {
                "type": "string",
                "computed": true
              },
              "permissions_boundary": {
                "type": "string",
                "computed": true
              },
              "user_id": {
                "type": "string",
                "computed": true
              },
              "user_name": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "aws_inspector_rules_packages": {
          "version": 0,
          "block": {
            "attributes": {
              "arns": {
                "type": [
                  "list",
                  "string"
                ],
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              }
            }
          }
        },
        "aws_instance": {
          "version": 1,
          "block": {
            "attributes": {
              "ami": {
                "type": "string",
                "computed": true
              },
              "arn": {
                "type": "string",
                "computed": true
              },
              "associate_public_ip_address": {
                "type": "bool",
                "computed": true
              },
              "availability_zone": {
                "type": "string",
                "computed": true
              },
              "credit_specification": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "cpu_credits": "string"
                    }
                  ]
                ],
                "computed": true
              },
              "disable_api_termination": {
                "type": "bool",
                "computed": true
              },
              "ebs_block_device": {
                "type": [
                  "set",
                  [
                    "object",
                    {
                      "delete_on_termination": "bool",
                      "device_name": "string",
                      "encrypted": "bool",
                      "iops": "number",
                      "kms_key_id": "string",
                      "snapshot_id": "string",
                      "volume_id": "string",
                      "volume_size": "number",
                      "volume_type": "string"
                    }
                  ]
                ],
                "computed": true
              },
              "ebs_optimized": {
                "type": "bool",
                "computed": true
              },
              "ephemeral_block_device": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "device_name": "string",
                      "no_device": "bool",
                      "virtual_name": "string"
                    }
                  ]
                ],
                "computed": true
              },
              "get_password_data": {
                "type": "bool",
                "optional": true
              },
              "get_user_data": {
                "type": "bool",
                "optional": true
              },
              "host_id": {
                "type": "string",
                "computed": true
              },
              "iam_instance_profile": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "instance_id": {
                "type": "string",
                "optional": true
              },
              "instance_state": {
                "type": "string",
                "computed": true
              },
              "instance_tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true,
                "computed": true
              },
              "instance_type": {
                "type": "string",
                "computed": true
              },
              "key_name": {
                "type": "string",
                "computed": true
              },
              "monitoring": {
                "type": "bool",
                "computed": true
              },
              "network_interface_id": {
                "type": "string",
                "computed": true
              },
              "password_data": {
                "type": "string",
                "computed": true
              },
              "placement_group": {
                "type": "string",
                "computed": true
              },
              "private_dns": {
                "type": "string",
                "computed": true
              },
              "private_ip": {
                "type": "string",
                "computed": true
              },
              "public_dns": {
                "type": "string",
                "computed": true
              },
              "public_ip": {
                "type": "string",
                "computed": true
              },
              "root_block_device": {
                "type": [
                  "set",
                  [
                    "object",
                    {
                      "delete_on_termination": "bool",
                      "encrypted": "bool",
                      "iops": "number",
                      "kms_key_id": "string",
                      "volume_id": "string",
                      "volume_size": "number",
                      "volume_type": "string"
                    }
                  ]
                ],
                "computed": true
              },
              "security_groups": {
                "type": [
                  "set",
                  "string"
                ],
                "computed": true
              },
              "source_dest_check": {
                "type": "bool",
                "computed": true
              },
              "subnet_id": {
                "type": "string",
                "computed": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true,
                "computed": true
              },
              "tenancy": {
                "type": "string",
                "computed": true
              },
              "user_data": {
                "type": "string",
                "computed": true
              },
              "user_data_base64": {
                "type": "string",
                "computed": true
              },
              "vpc_security_group_ids": {
                "type": [
                  "set",
                  "string"
                ],
                "computed": true
              }
            },
            "block_types": {
              "filter": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "name": {
                      "type": "string",
                      "required": true
                    },
                    "values": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "required": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_instances": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "ids": {
                "type": [
                  "list",
                  "string"
                ],
                "computed": true
              },
              "instance_state_names": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true
              },
              "instance_tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true,
                "computed": true
              },
              "private_ips": {
                "type": [
                  "list",
                  "string"
                ],
                "computed": true
              },
              "public_ips": {
                "type": [
                  "list",
                  "string"
                ],
                "computed": true
              }
            },
            "block_types": {
              "filter": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "name": {
                      "type": "string",
                      "required": true
                    },
                    "values": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "required": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_internet_gateway": {
          "version": 0,
          "block": {
            "attributes": {
              "attachments": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "state": "string",
                      "vpc_id": "string"
                    }
                  ]
                ],
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "internet_gateway_id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "owner_id": {
                "type": "string",
                "computed": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true,
                "computed": true
              }
            },
            "block_types": {
              "filter": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "name": {
                      "type": "string",
                      "required": true
                    },
                    "values": {
                      "type": [
                        "set",
                        "string"
                      ],
                      "required": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_iot_endpoint": {
          "version": 0,
          "block": {
            "attributes": {
              "endpoint_address": {
                "type": "string",
                "computed": true
              },
              "endpoint_type": {
                "type": "string",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              }
            }
          }
        },
        "aws_ip_ranges": {
          "version": 0,
          "block": {
            "attributes": {
              "cidr_blocks": {
                "type": [
                  "list",
                  "string"
                ],
                "computed": true
              },
              "create_date": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "ipv6_cidr_blocks": {
                "type": [
                  "list",
                  "string"
                ],
                "computed": true
              },
              "regions": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true
              },
              "services": {
                "type": [
                  "set",
                  "string"
                ],
                "required": true
              },
              "sync_token": {
                "type": "number",
                "computed": true
              },
              "url": {
                "type": "string",
                "optional": true
              }
            }
          }
        },
        "aws_kinesis_stream": {
          "version": 1,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "closed_shards": {
                "type": [
                  "set",
                  "string"
                ],
                "computed": true
              },
              "creation_timestamp": {
                "type": "number",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "open_shards": {
                "type": [
                  "set",
                  "string"
                ],
                "computed": true
              },
              "retention_period": {
                "type": "number",
                "computed": true
              },
              "shard_level_metrics": {
                "type": [
                  "set",
                  "string"
                ],
                "computed": true
              },
              "status": {
                "type": "string",
                "computed": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true,
                "computed": true
              }
            }
          }
        },
        "aws_kms_alias": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "target_key_arn": {
                "type": "string",
                "computed": true
              },
              "target_key_id": {
                "type": "string",
                "computed": true
              }
            }
          }
        },
        "aws_kms_ciphertext": {
          "version": 0,
          "block": {
            "attributes": {
              "ciphertext_blob": {
                "type": "string",
                "computed": true
              },
              "context": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "key_id": {
                "type": "string",
                "required": true
              },
              "plaintext": {
                "type": "string",
                "required": true,
                "sensitive": true
              }
            }
          }
        },
        "aws_kms_key": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "aws_account_id": {
                "type": "string",
                "computed": true
              },
              "creation_date": {
                "type": "string",
                "computed": true
              },
              "customer_master_key_spec": {
                "type": "string",
                "computed": true
              },
              "deletion_date": {
                "type": "string",
                "computed": true
              },
              "description": {
                "type": "string",
                "computed": true
              },
              "enabled": {
                "type": "bool",
                "computed": true
              },
              "expiration_model": {
                "type": "string",
                "computed": true
              },
              "grant_tokens": {
                "type": [
                  "list",
                  "string"
                ],
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "key_id": {
                "type": "string",
                "required": true
              },
              "key_manager": {
                "type": "string",
                "computed": true
              },
              "key_state": {
                "type": "string",
                "computed": true
              },
              "key_usage": {
                "type": "string",
                "computed": true
              },
              "origin": {
                "type": "string",
                "computed": true
              },
              "valid_to": {
                "type": "string",
                "computed": true
              }
            }
          }
        },
        "aws_kms_secret": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              }
            },
            "block_types": {
              "secret": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "context": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "optional": true
                    },
                    "grant_tokens": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "optional": true
                    },
                    "name": {
                      "type": "string",
                      "required": true
                    },
                    "payload": {
                      "type": "string",
                      "required": true
                    }
                  }
                },
                "min_items": 1
              }
            }
          }
        },
        "aws_kms_secrets": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "plaintext": {
                "type": [
                  "map",
                  "string"
                ],
                "computed": true
              }
            },
            "block_types": {
              "secret": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "context": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "optional": true
                    },
                    "grant_tokens": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "optional": true
                    },
                    "name": {
                      "type": "string",
                      "required": true
                    },
                    "payload": {
                      "type": "string",
                      "required": true
                    }
                  }
                },
                "min_items": 1
              }
            }
          }
        },
        "aws_lambda_alias": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "description": {
                "type": "string",
                "computed": true
              },
              "function_name": {
                "type": "string",
                "required": true
              },
              "function_version": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "invoke_arn": {
                "type": "string",
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "aws_lambda_function": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "dead_letter_config": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "target_arn": "string"
                    }
                  ]
                ],
                "computed": true
              },
              "description": {
                "type": "string",
                "computed": true
              },
              "environment": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "variables": [
                        "map",
                        "string"
                      ]
                    }
                  ]
                ],
                "computed": true
              },
              "function_name": {
                "type": "string",
                "required": true
              },
              "handler": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "invoke_arn": {
                "type": "string",
                "computed": true
              },
              "kms_key_arn": {
                "type": "string",
                "computed": true
              },
              "last_modified": {
                "type": "string",
                "computed": true
              },
              "layers": {
                "type": [
                  "list",
                  "string"
                ],
                "computed": true
              },
              "memory_size": {
                "type": "number",
                "computed": true
              },
              "qualified_arn": {
                "type": "string",
                "computed": true
              },
              "qualifier": {
                "type": "string",
                "optional": true
              },
              "reserved_concurrent_executions": {
                "type": "number",
                "computed": true
              },
              "role": {
                "type": "string",
                "computed": true
              },
              "runtime": {
                "type": "string",
                "computed": true
              },
              "source_code_hash": {
                "type": "string",
                "computed": true
              },
              "source_code_size": {
                "type": "number",
                "computed": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true,
                "computed": true
              },
              "timeout": {
                "type": "number",
                "computed": true
              },
              "tracing_config": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "mode": "string"
                    }
                  ]
                ],
                "computed": true
              },
              "version": {
                "type": "string",
                "computed": true
              },
              "vpc_config": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "security_group_ids": [
                        "set",
                        "string"
                      ],
                      "subnet_ids": [
                        "set",
                        "string"
                      ],
                      "vpc_id": "string"
                    }
                  ]
                ],
                "computed": true
              }
            }
          }
        },
        "aws_lambda_invocation": {
          "version": 0,
          "block": {
            "attributes": {
              "function_name": {
                "type": "string",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "input": {
                "type": "string",
                "required": true
              },
              "qualifier": {
                "type": "string",
                "optional": true
              },
              "result": {
                "type": "string",
                "computed": true
              },
              "result_map": {
                "type": [
                  "map",
                  "string"
                ],
                "computed": true
              }
            }
          }
        },
        "aws_lambda_layer_version": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "compatible_runtime": {
                "type": "string",
                "optional": true
              },
              "compatible_runtimes": {
                "type": [
                  "set",
                  "string"
                ],
                "computed": true
              },
              "created_date": {
                "type": "string",
                "computed": true
              },
              "description": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "layer_arn": {
                "type": "string",
                "computed": true
              },
              "layer_name": {
                "type": "string",
                "required": true
              },
              "license_info": {
                "type": "string",
                "computed": true
              },
              "source_code_hash": {
                "type": "string",
                "computed": true
              },
              "source_code_size": {
                "type": "number",
                "computed": true
              },
              "version": {
                "type": "number",
                "optional": true,
                "computed": true
              }
            }
          }
        },
        "aws_launch_configuration": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "associate_public_ip_address": {
                "type": "bool",
                "computed": true
              },
              "ebs_block_device": {
                "type": [
                  "set",
                  [
                    "object",
                    {
                      "delete_on_termination": "bool",
                      "device_name": "string",
                      "encrypted": "bool",
                      "iops": "number",
                      "snapshot_id": "string",
                      "volume_size": "number",
                      "volume_type": "string"
                    }
                  ]
                ],
                "computed": true
              },
              "ebs_optimized": {
                "type": "bool",
                "computed": true
              },
              "enable_monitoring": {
                "type": "bool",
                "computed": true
              },
              "ephemeral_block_device": {
                "type": [
                  "set",
                  [
                    "object",
                    {
                      "device_name": "string",
                      "virtual_name": "string"
                    }
                  ]
                ],
                "computed": true
              },
              "iam_instance_profile": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "image_id": {
                "type": "string",
                "computed": true
              },
              "instance_type": {
                "type": "string",
                "computed": true
              },
              "key_name": {
                "type": "string",
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "placement_tenancy": {
                "type": "string",
                "computed": true
              },
              "root_block_device": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "delete_on_termination": "bool",
                      "encrypted": "bool",
                      "iops": "number",
                      "volume_size": "number",
                      "volume_type": "string"
                    }
                  ]
                ],
                "computed": true
              },
              "security_groups": {
                "type": [
                  "set",
                  "string"
                ],
                "computed": true
              },
              "spot_price": {
                "type": "string",
                "computed": true
              },
              "user_data": {
                "type": "string",
                "computed": true
              },
              "vpc_classic_link_id": {
                "type": "string",
                "computed": true
              },
              "vpc_classic_link_security_groups": {
                "type": [
                  "set",
                  "string"
                ],
                "computed": true
              }
            }
          }
        },
        "aws_launch_template": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "block_device_mappings": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "device_name": "string",
                      "ebs": [
                        "list",
                        [
                          "object",
                          {
                            "delete_on_termination": "string",
                            "encrypted": "string",
                            "iops": "number",
                            "kms_key_id": "string",
                            "snapshot_id": "string",
                            "volume_size": "number",
                            "volume_type": "string"
                          }
                        ]
                      ],
                      "no_device": "string",
                      "virtual_name": "string"
                    }
                  ]
                ],
                "computed": true
              },
              "credit_specification": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "cpu_credits": "string"
                    }
                  ]
                ],
                "computed": true
              },
              "default_version": {
                "type": "number",
                "computed": true
              },
              "description": {
                "type": "string",
                "computed": true
              },
              "disable_api_termination": {
                "type": "bool",
                "computed": true
              },
              "ebs_optimized": {
                "type": "string",
                "computed": true
              },
              "elastic_gpu_specifications": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "type": "string"
                    }
                  ]
                ],
                "computed": true
              },
              "iam_instance_profile": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "arn": "string",
                      "name": "string"
                    }
                  ]
                ],
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "image_id": {
                "type": "string",
                "computed": true
              },
              "instance_initiated_shutdown_behavior": {
                "type": "string",
                "computed": true
              },
              "instance_market_options": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "market_type": "string",
                      "spot_options": [
                        "list",
                        [
                          "object",
                          {
                            "block_duration_minutes": "number",
                            "instance_interruption_behavior": "string",
                            "max_price": "string",
                            "spot_instance_type": "string",
                            "valid_until": "string"
                          }
                        ]
                      ]
                    }
                  ]
                ],
                "computed": true
              },
              "instance_type": {
                "type": "string",
                "computed": true
              },
              "kernel_id": {
                "type": "string",
                "computed": true
              },
              "key_name": {
                "type": "string",
                "computed": true
              },
              "latest_version": {
                "type": "number",
                "computed": true
              },
              "monitoring": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "enabled": "bool"
                    }
                  ]
                ],
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "network_interfaces": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "associate_public_ip_address": "bool",
                      "delete_on_termination": "bool",
                      "description": "string",
                      "device_index": "number",
                      "ipv4_address_count": "number",
                      "ipv4_addresses": [
                        "set",
                        "string"
                      ],
                      "ipv6_address_count": "number",
                      "ipv6_addresses": [
                        "set",
                        "string"
                      ],
                      "network_interface_id": "string",
                      "private_ip_address": "string",
                      "security_groups": [
                        "set",
                        "string"
                      ],
                      "subnet_id": "string"
                    }
                  ]
                ],
                "computed": true
              },
              "placement": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "affinity": "string",
                      "availability_zone": "string",
                      "group_name": "string",
                      "host_id": "string",
                      "spread_domain": "string",
                      "tenancy": "string"
                    }
                  ]
                ],
                "computed": true
              },
              "ram_disk_id": {
                "type": "string",
                "computed": true
              },
              "security_group_names": {
                "type": [
                  "set",
                  "string"
                ],
                "computed": true
              },
              "tag_specifications": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "resource_type": "string",
                      "tags": [
                        "map",
                        "string"
                      ]
                    }
                  ]
                ],
                "computed": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true,
                "computed": true
              },
              "user_data": {
                "type": "string",
                "computed": true
              },
              "vpc_security_group_ids": {
                "type": [
                  "set",
                  "string"
                ],
                "computed": true
              }
            }
          }
        },
        "aws_lb": {
          "version": 0,
          "block": {
            "attributes": {
              "access_logs": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "bucket": "string",
                      "enabled": "bool",
                      "prefix": "string"
                    }
                  ]
                ],
                "computed": true
              },
              "arn": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "arn_suffix": {
                "type": "string",
                "computed": true
              },
              "dns_name": {
                "type": "string",
                "computed": true
              },
              "enable_deletion_protection": {
                "type": "bool",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "idle_timeout": {
                "type": "number",
                "computed": true
              },
              "internal": {
                "type": "bool",
                "computed": true
              },
              "load_balancer_type": {
                "type": "string",
                "computed": true
              },
              "name": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "security_groups": {
                "type": [
                  "set",
                  "string"
                ],
                "computed": true
              },
              "subnet_mapping": {
                "type": [
                  "set",
                  [
                    "object",
                    {
                      "allocation_id": "string",
                      "subnet_id": "string"
                    }
                  ]
                ],
                "computed": true
              },
              "subnets": {
                "type": [
                  "set",
                  "string"
                ],
                "computed": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true,
                "computed": true
              },
              "vpc_id": {
                "type": "string",
                "computed": true
              },
              "zone_id": {
                "type": "string",
                "computed": true
              }
            }
          }
        },
        "aws_lb_listener": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "certificate_arn": {
                "type": "string",
                "computed": true
              },
              "default_action": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "authenticate_cognito": [
                        "list",
                        [
                          "object",
                          {
                            "authentication_request_extra_params": [
                              "map",
                              "string"
                            ],
                            "on_unauthenticated_request": "string",
                            "scope": "string",
                            "session_cookie_name": "string",
                            "session_timeout": "number",
                            "user_pool_arn": "string",
                            "user_pool_client_id": "string",
                            "user_pool_domain": "string"
                          }
                        ]
                      ],
                      "authenticate_oidc": [
                        "list",
                        [
                          "object",
                          {
                            "authentication_request_extra_params": [
                              "map",
                              "string"
                            ],
                            "authorization_endpoint": "string",
                            "client_id": "string",
                            "client_secret": "string",
                            "issuer": "string",
                            "on_unauthenticated_request": "string",
                            "scope": "string",
                            "session_cookie_name": "string",
                            "session_timeout": "number",
                            "token_endpoint": "string",
                            "user_info_endpoint": "string"
                          }
                        ]
                      ],
                      "fixed_response": [
                        "list",
                        [
                          "object",
                          {
                            "content_type": "string",
                            "message_body": "string",
                            "status_code": "string"
                          }
                        ]
                      ],
                      "order": "number",
                      "redirect": [
                        "list",
                        [
                          "object",
                          {
                            "host": "string",
                            "path": "string",
                            "port": "string",
                            "protocol": "string",
                            "query": "string",
                            "status_code": "string"
                          }
                        ]
                      ],
                      "target_group_arn": "string",
                      "type": "string"
                    }
                  ]
                ],
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "load_balancer_arn": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "port": {
                "type": "number",
                "optional": true,
                "computed": true
              },
              "protocol": {
                "type": "string",
                "computed": true
              },
              "ssl_policy": {
                "type": "string",
                "computed": true
              }
            }
          }
        },
        "aws_lb_target_group": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "arn_suffix": {
                "type": "string",
                "computed": true
              },
              "deregistration_delay": {
                "type": "number",
                "computed": true
              },
              "health_check": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "enabled": "bool",
                      "healthy_threshold": "number",
                      "interval": "number",
                      "matcher": "string",
                      "path": "string",
                      "port": "string",
                      "protocol": "string",
                      "timeout": "number",
                      "unhealthy_threshold": "number"
                    }
                  ]
                ],
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "lambda_multi_value_headers_enabled": {
                "type": "bool",
                "computed": true
              },
              "name": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "port": {
                "type": "number",
                "computed": true
              },
              "protocol": {
                "type": "string",
                "computed": true
              },
              "proxy_protocol_v2": {
                "type": "bool",
                "computed": true
              },
              "slow_start": {
                "type": "number",
                "computed": true
              },
              "stickiness": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "cookie_duration": "number",
                      "enabled": "bool",
                      "type": "string"
                    }
                  ]
                ],
                "computed": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true,
                "computed": true
              },
              "target_type": {
                "type": "string",
                "computed": true
              },
              "vpc_id": {
                "type": "string",
                "computed": true
              }
            }
          }
        },
        "aws_mq_broker": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "auto_minor_version_upgrade": {
                "type": "bool",
                "computed": true
              },
              "broker_id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "broker_name": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "configuration": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "id": "string",
                      "revision": "number"
                    }
                  ]
                ],
                "computed": true
              },
              "deployment_mode": {
                "type": "string",
                "computed": true
              },
              "encryption_options": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "kms_key_id": "string",
                      "use_aws_owned_key": "bool"
                    }
                  ]
                ],
                "computed": true
              },
              "engine_type": {
                "type": "string",
                "computed": true
              },
              "engine_version": {
                "type": "string",
                "computed": true
              },
              "host_instance_type": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "instances": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "console_url": "string",
                      "endpoints": [
                        "list",
                        "string"
                      ],
                      "ip_address": "string"
                    }
                  ]
                ],
                "computed": true
              },
              "maintenance_window_start_time": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "day_of_week": "string",
                      "time_of_day": "string",
                      "time_zone": "string"
                    }
                  ]
                ],
                "computed": true
              },
              "publicly_accessible": {
                "type": "bool",
                "computed": true
              },
              "security_groups": {
                "type": [
                  "set",
                  "string"
                ],
                "computed": true
              },
              "subnet_ids": {
                "type": [
                  "set",
                  "string"
                ],
                "computed": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true,
                "computed": true
              },
              "user": {
                "type": [
                  "set",
                  [
                    "object",
                    {
                      "console_access": "bool",
                      "groups": [
                        "set",
                        "string"
                      ],
                      "username": "string"
                    }
                  ]
                ],
                "computed": true
              }
            },
            "block_types": {
              "logs": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "audit": {
                      "type": "bool",
                      "computed": true
                    },
                    "general": {
                      "type": "bool",
                      "computed": true
                    }
                  }
                },
                "max_items": 1
              }
            }
          }
        },
        "aws_msk_cluster": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "bootstrap_brokers": {
                "type": "string",
                "computed": true
              },
              "bootstrap_brokers_tls": {
                "type": "string",
                "computed": true
              },
              "cluster_name": {
                "type": "string",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "kafka_version": {
                "type": "string",
                "computed": true
              },
              "number_of_broker_nodes": {
                "type": "number",
                "computed": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true,
                "computed": true
              },
              "zookeeper_connect_string": {
                "type": "string",
                "computed": true
              }
            }
          }
        },
        "aws_msk_configuration": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "description": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "kafka_versions": {
                "type": [
                  "set",
                  "string"
                ],
                "computed": true
              },
              "latest_revision": {
                "type": "number",
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "server_properties": {
                "type": "string",
                "computed": true
              }
            }
          }
        },
        "aws_nat_gateway": {
          "version": 0,
          "block": {
            "attributes": {
              "allocation_id": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "network_interface_id": {
                "type": "string",
                "computed": true
              },
              "private_ip": {
                "type": "string",
                "computed": true
              },
              "public_ip": {
                "type": "string",
                "computed": true
              },
              "state": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "subnet_id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true,
                "computed": true
              },
              "vpc_id": {
                "type": "string",
                "optional": true,
                "computed": true
              }
            },
            "block_types": {
              "filter": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "name": {
                      "type": "string",
                      "required": true
                    },
                    "values": {
                      "type": [
                        "set",
                        "string"
                      ],
                      "required": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_network_acls": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "ids": {
                "type": [
                  "set",
                  "string"
                ],
                "computed": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true,
                "computed": true
              },
              "vpc_id": {
                "type": "string",
                "optional": true
              }
            },
            "block_types": {
              "filter": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "name": {
                      "type": "string",
                      "required": true
                    },
                    "values": {
                      "type": [
                        "set",
                        "string"
                      ],
                      "required": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_network_interface": {
          "version": 0,
          "block": {
            "attributes": {
              "association": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "allocation_id": "string",
                      "association_id": "string",
                      "ip_owner_id": "string",
                      "public_dns_name": "string",
                      "public_ip": "string"
                    }
                  ]
                ],
                "computed": true
              },
              "attachment": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "attachment_id": "string",
                      "device_index": "number",
                      "instance_id": "string",
                      "instance_owner_id": "string"
                    }
                  ]
                ],
                "computed": true
              },
              "availability_zone": {
                "type": "string",
                "computed": true
              },
              "description": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "interface_type": {
                "type": "string",
                "computed": true
              },
              "ipv6_addresses": {
                "type": [
                  "set",
                  "string"
                ],
                "computed": true
              },
              "mac_address": {
                "type": "string",
                "computed": true
              },
              "owner_id": {
                "type": "string",
                "computed": true
              },
              "private_dns_name": {
                "type": "string",
                "computed": true
              },
              "private_ip": {
                "type": "string",
                "computed": true
              },
              "private_ips": {
                "type": [
                  "list",
                  "string"
                ],
                "computed": true
              },
              "requester_id": {
                "type": "string",
                "computed": true
              },
              "security_groups": {
                "type": [
                  "set",
                  "string"
                ],
                "computed": true
              },
              "subnet_id": {
                "type": "string",
                "computed": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true,
                "computed": true
              },
              "vpc_id": {
                "type": "string",
                "computed": true
              }
            },
            "block_types": {
              "filter": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "name": {
                      "type": "string",
                      "required": true
                    },
                    "values": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "required": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_network_interfaces": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "ids": {
                "type": [
                  "set",
                  "string"
                ],
                "computed": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true,
                "computed": true
              }
            },
            "block_types": {
              "filter": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "name": {
                      "type": "string",
                      "required": true
                    },
                    "values": {
                      "type": [
                        "set",
                        "string"
                      ],
                      "required": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_organizations_organization": {
          "version": 0,
          "block": {
            "attributes": {
              "accounts": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "arn": "string",
                      "email": "string",
                      "id": "string",
                      "name": "string",
                      "status": "string"
                    }
                  ]
                ],
                "computed": true
              },
              "arn": {
                "type": "string",
                "computed": true
              },
              "aws_service_access_principals": {
                "type": [
                  "set",
                  "string"
                ],
                "computed": true
              },
              "enabled_policy_types": {
                "type": [
                  "set",
                  "string"
                ],
                "computed": true
              },
              "feature_set": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "master_account_arn": {
                "type": "string",
                "computed": true
              },
              "master_account_email": {
                "type": "string",
                "computed": true
              },
              "master_account_id": {
                "type": "string",
                "computed": true
              },
              "non_master_accounts": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "arn": "string",
                      "email": "string",
                      "id": "string",
                      "name": "string",
                      "status": "string"
                    }
                  ]
                ],
                "computed": true
              },
              "roots": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "arn": "string",
                      "id": "string",
                      "name": "string",
                      "policy_types": [
                        "list",
                        [
                          "object",
                          {
                            "status": "string",
                            "type": "string"
                          }
                        ]
                      ]
                    }
                  ]
                ],
                "computed": true
              }
            }
          }
        },
        "aws_organizations_organizational_units": {
          "version": 0,
          "block": {
            "attributes": {
              "children": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "arn": "string",
                      "id": "string",
                      "name": "string"
                    }
                  ]
                ],
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "parent_id": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "aws_partition": {
          "version": 0,
          "block": {
            "attributes": {
              "dns_suffix": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "partition": {
                "type": "string",
                "computed": true
              }
            }
          }
        },
        "aws_prefix_list": {
          "version": 0,
          "block": {
            "attributes": {
              "cidr_blocks": {
                "type": [
                  "list",
                  "string"
                ],
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "prefix_list_id": {
                "type": "string",
                "optional": true
              }
            }
          }
        },
        "aws_pricing_product": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "result": {
                "type": "string",
                "computed": true
              },
              "service_code": {
                "type": "string",
                "required": true
              }
            },
            "block_types": {
              "filters": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "field": {
                      "type": "string",
                      "required": true
                    },
                    "value": {
                      "type": "string",
                      "required": true
                    }
                  }
                },
                "min_items": 1
              }
            }
          }
        },
        "aws_qldb_ledger": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "deletion_protection": {
                "type": "bool",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "aws_ram_resource_share": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "resource_owner": {
                "type": "string",
                "required": true
              },
              "status": {
                "type": "string",
                "computed": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true,
                "computed": true
              }
            },
            "block_types": {
              "filter": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "name": {
                      "type": "string",
                      "required": true
                    },
                    "values": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "required": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_rds_cluster": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "availability_zones": {
                "type": [
                  "set",
                  "string"
                ],
                "computed": true
              },
              "backup_retention_period": {
                "type": "number",
                "computed": true
              },
              "cluster_identifier": {
                "type": "string",
                "required": true
              },
              "cluster_members": {
                "type": [
                  "set",
                  "string"
                ],
                "computed": true
              },
              "cluster_resource_id": {
                "type": "string",
                "computed": true
              },
              "database_name": {
                "type": "string",
                "computed": true
              },
              "db_cluster_parameter_group_name": {
                "type": "string",
                "computed": true
              },
              "db_subnet_group_name": {
                "type": "string",
                "computed": true
              },
              "enabled_cloudwatch_logs_exports": {
                "type": [
                  "list",
                  "string"
                ],
                "computed": true
              },
              "endpoint": {
                "type": "string",
                "computed": true
              },
              "engine": {
                "type": "string",
                "computed": true
              },
              "engine_version": {
                "type": "string",
                "computed": true
              },
              "final_snapshot_identifier": {
                "type": "string",
                "computed": true
              },
              "hosted_zone_id": {
                "type": "string",
                "computed": true
              },
              "iam_database_authentication_enabled": {
                "type": "bool",
                "computed": true
              },
              "iam_roles": {
                "type": [
                  "set",
                  "string"
                ],
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "kms_key_id": {
                "type": "string",
                "computed": true
              },
              "master_username": {
                "type": "string",
                "computed": true
              },
              "port": {
                "type": "number",
                "computed": true
              },
              "preferred_backup_window": {
                "type": "string",
                "computed": true
              },
              "preferred_maintenance_window": {
                "type": "string",
                "computed": true
              },
              "reader_endpoint": {
                "type": "string",
                "computed": true
              },
              "replication_source_identifier": {
                "type": "string",
                "computed": true
              },
              "storage_encrypted": {
                "type": "bool",
                "computed": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true,
                "computed": true
              },
              "vpc_security_group_ids": {
                "type": [
                  "set",
                  "string"
                ],
                "computed": true
              }
            }
          }
        },
        "aws_redshift_cluster": {
          "version": 0,
          "block": {
            "attributes": {
              "allow_version_upgrade": {
                "type": "bool",
                "computed": true
              },
              "automated_snapshot_retention_period": {
                "type": "number",
                "computed": true
              },
              "availability_zone": {
                "type": "string",
                "computed": true
              },
              "bucket_name": {
                "type": "string",
                "computed": true
              },
              "cluster_identifier": {
                "type": "string",
                "required": true
              },
              "cluster_parameter_group_name": {
                "type": "string",
                "computed": true
              },
              "cluster_public_key": {
                "type": "string",
                "computed": true
              },
              "cluster_revision_number": {
                "type": "string",
                "computed": true
              },
              "cluster_security_groups": {
                "type": [
                  "list",
                  "string"
                ],
                "computed": true
              },
              "cluster_subnet_group_name": {
                "type": "string",
                "computed": true
              },
              "cluster_type": {
                "type": "string",
                "computed": true
              },
              "cluster_version": {
                "type": "string",
                "computed": true
              },
              "database_name": {
                "type": "string",
                "computed": true
              },
              "elastic_ip": {
                "type": "string",
                "computed": true
              },
              "enable_logging": {
                "type": "bool",
                "computed": true
              },
              "encrypted": {
                "type": "bool",
                "computed": true
              },
              "endpoint": {
                "type": "string",
                "computed": true
              },
              "enhanced_vpc_routing": {
                "type": "bool",
                "computed": true
              },
              "iam_roles": {
                "type": [
                  "list",
                  "string"
                ],
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "kms_key_id": {
                "type": "string",
                "computed": true
              },
              "master_username": {
                "type": "string",
                "computed": true
              },
              "node_type": {
                "type": "string",
                "computed": true
              },
              "number_of_nodes": {
                "type": "number",
                "computed": true
              },
              "port": {
                "type": "number",
                "computed": true
              },
              "preferred_maintenance_window": {
                "type": "string",
                "computed": true
              },
              "publicly_accessible": {
                "type": "bool",
                "computed": true
              },
              "s3_key_prefix": {
                "type": "string",
                "computed": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              },
              "vpc_id": {
                "type": "string",
                "computed": true
              },
              "vpc_security_group_ids": {
                "type": [
                  "list",
                  "string"
                ],
                "computed": true
              }
            }
          }
        },
        "aws_redshift_service_account": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "region": {
                "type": "string",
                "optional": true
              }
            }
          }
        },
        "aws_region": {
          "version": 0,
          "block": {
            "attributes": {
              "current": {
                "type": "bool",
                "optional": true,
                "computed": true
              },
              "description": {
                "type": "string",
                "computed": true
              },
              "endpoint": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "optional": true,
                "computed": true
              }
            }
          }
        },
        "aws_route": {
          "version": 0,
          "block": {
            "attributes": {
              "destination_cidr_block": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "destination_ipv6_cidr_block": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "egress_only_gateway_id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "gateway_id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "instance_id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "nat_gateway_id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "network_interface_id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "route_table_id": {
                "type": "string",
                "required": true
              },
              "transit_gateway_id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "vpc_peering_connection_id": {
                "type": "string",
                "optional": true,
                "computed": true
              }
            }
          }
        },
        "aws_route53_delegation_set": {
          "version": 0,
          "block": {
            "attributes": {
              "caller_reference": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "required": true
              },
              "name_servers": {
                "type": [
                  "list",
                  "string"
                ],
                "computed": true
              }
            }
          }
        },
        "aws_route53_resolver_rule": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "domain_name": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "owner_id": {
                "type": "string",
                "computed": true
              },
              "resolver_endpoint_id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "resolver_rule_id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "rule_type": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "share_status": {
                "type": "string",
                "computed": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true,
                "computed": true
              }
            }
          }
        },
        "aws_route53_resolver_rules": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "owner_id": {
                "type": "string",
                "optional": true
              },
              "resolver_endpoint_id": {
                "type": "string",
                "optional": true
              },
              "resolver_rule_ids": {
                "type": [
                  "set",
                  "string"
                ],
                "computed": true
              },
              "rule_type": {
                "type": "string",
                "optional": true
              },
              "share_status": {
                "type": "string",
                "optional": true
              }
            }
          }
        },
        "aws_route53_zone": {
          "version": 0,
          "block": {
            "attributes": {
              "caller_reference": {
                "type": "string",
                "computed": true
              },
              "comment": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "linked_service_description": {
                "type": "string",
                "computed": true
              },
              "linked_service_principal": {
                "type": "string",
                "computed": true
              },
              "name": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name_servers": {
                "type": [
                  "list",
                  "string"
                ],
                "computed": true
              },
              "private_zone": {
                "type": "bool",
                "optional": true
              },
              "resource_record_set_count": {
                "type": "number",
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true,
                "computed": true
              },
              "vpc_id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "zone_id": {
                "type": "string",
                "optional": true,
                "computed": true
              }
            }
          }
        },
        "aws_route_table": {
          "version": 0,
          "block": {
            "attributes": {
              "associations": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "gateway_id": "string",
                      "main": "bool",
                      "route_table_association_id": "string",
                      "route_table_id": "string",
                      "subnet_id": "string"
                    }
                  ]
                ],
                "computed": true
              },
              "gateway_id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "owner_id": {
                "type": "string",
                "computed": true
              },
              "route_table_id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "routes": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "cidr_block": "string",
                      "egress_only_gateway_id": "string",
                      "gateway_id": "string",
                      "instance_id": "string",
                      "ipv6_cidr_block": "string",
                      "nat_gateway_id": "string",
                      "network_interface_id": "string",
                      "transit_gateway_id": "string",
                      "vpc_peering_connection_id": "string"
                    }
                  ]
                ],
                "computed": true
              },
              "subnet_id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true,
                "computed": true
              },
              "vpc_id": {
                "type": "string",
                "optional": true,
                "computed": true
              }
            },
            "block_types": {
              "filter": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "name": {
                      "type": "string",
                      "required": true
                    },
                    "values": {
                      "type": [
                        "set",
                        "string"
                      ],
                      "required": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_route_tables": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "ids": {
                "type": [
                  "set",
                  "string"
                ],
                "computed": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true,
                "computed": true
              },
              "vpc_id": {
                "type": "string",
                "optional": true
              }
            },
            "block_types": {
              "filter": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "name": {
                      "type": "string",
                      "required": true
                    },
                    "values": {
                      "type": [
                        "set",
                        "string"
                      ],
                      "required": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_s3_bucket": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "bucket": {
                "type": "string",
                "required": true
              },
              "bucket_domain_name": {
                "type": "string",
                "computed": true
              },
              "bucket_regional_domain_name": {
                "type": "string",
                "computed": true
              },
              "hosted_zone_id": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "region": {
                "type": "string",
                "computed": true
              },
              "website_domain": {
                "type": "string",
                "computed": true
              },
              "website_endpoint": {
                "type": "string",
                "computed": true
              }
            }
          }
        },
        "aws_s3_bucket_object": {
          "version": 0,
          "block": {
            "attributes": {
              "body": {
                "type": "string",
                "computed": true
              },
              "bucket": {
                "type": "string",
                "required": true
              },
              "cache_control": {
                "type": "string",
                "computed": true
              },
              "content_disposition": {
                "type": "string",
                "computed": true
              },
              "content_encoding": {
                "type": "string",
                "computed": true
              },
              "content_language": {
                "type": "string",
                "computed": true
              },
              "content_length": {
                "type": "number",
                "computed": true
              },
              "content_type": {
                "type": "string",
                "computed": true
              },
              "etag": {
                "type": "string",
                "computed": true
              },
              "expiration": {
                "type": "string",
                "computed": true
              },
              "expires": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "key": {
                "type": "string",
                "required": true
              },
              "last_modified": {
                "type": "string",
                "computed": true
              },
              "metadata": {
                "type": [
                  "map",
                  "string"
                ],
                "computed": true
              },
              "object_lock_legal_hold_status": {
                "type": "string",
                "computed": true
              },
              "object_lock_mode": {
                "type": "string",
                "computed": true
              },
              "object_lock_retain_until_date": {
                "type": "string",
                "computed": true
              },
              "range": {
                "type": "string",
                "optional": true
              },
              "server_side_encryption": {
                "type": "string",
                "computed": true
              },
              "sse_kms_key_id": {
                "type": "string",
                "computed": true
              },
              "storage_class": {
                "type": "string",
                "computed": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true,
                "computed": true
              },
              "version_id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "website_redirect_location": {
                "type": "string",
                "computed": true
              }
            }
          }
        },
        "aws_s3_bucket_objects": {
          "version": 0,
          "block": {
            "attributes": {
              "bucket": {
                "type": "string",
                "required": true
              },
              "common_prefixes": {
                "type": [
                  "list",
                  "string"
                ],
                "computed": true
              },
              "delimiter": {
                "type": "string",
                "optional": true
              },
              "encoding_type": {
                "type": "string",
                "optional": true
              },
              "fetch_owner": {
                "type": "bool",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "keys": {
                "type": [
                  "list",
                  "string"
                ],
                "computed": true
              },
              "max_keys": {
                "type": "number",
                "optional": true
              },
              "owners": {
                "type": [
                  "list",
                  "string"
                ],
                "computed": true
              },
              "prefix": {
                "type": "string",
                "optional": true
              },
              "start_after": {
                "type": "string",
                "optional": true
              }
            }
          }
        },
        "aws_secretsmanager_secret": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "description": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "kms_key_id": {
                "type": "string",
                "computed": true
              },
              "name": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "policy": {
                "type": "string",
                "computed": true
              },
              "rotation_enabled": {
                "type": "bool",
                "computed": true
              },
              "rotation_lambda_arn": {
                "type": "string",
                "computed": true
              },
              "rotation_rules": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "automatically_after_days": "number"
                    }
                  ]
                ],
                "computed": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "computed": true
              }
            }
          }
        },
        "aws_secretsmanager_secret_version": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "secret_binary": {
                "type": "string",
                "computed": true,
                "sensitive": true
              },
              "secret_id": {
                "type": "string",
                "required": true
              },
              "secret_string": {
                "type": "string",
                "computed": true,
                "sensitive": true
              },
              "version_id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "version_stage": {
                "type": "string",
                "optional": true
              },
              "version_stages": {
                "type": [
                  "set",
                  "string"
                ],
                "computed": true
              }
            }
          }
        },
        "aws_security_group": {
          "version": 1,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "description": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true,
                "computed": true
              },
              "vpc_id": {
                "type": "string",
                "optional": true,
                "computed": true
              }
            },
            "block_types": {
              "filter": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "name": {
                      "type": "string",
                      "required": true
                    },
                    "values": {
                      "type": [
                        "set",
                        "string"
                      ],
                      "required": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_security_groups": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "ids": {
                "type": [
                  "list",
                  "string"
                ],
                "computed": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true,
                "computed": true
              },
              "vpc_ids": {
                "type": [
                  "list",
                  "string"
                ],
                "computed": true
              }
            },
            "block_types": {
              "filter": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "name": {
                      "type": "string",
                      "required": true
                    },
                    "values": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "required": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_servicequotas_service": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "service_code": {
                "type": "string",
                "computed": true
              },
              "service_name": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "aws_servicequotas_service_quota": {
          "version": 0,
          "block": {
            "attributes": {
              "adjustable": {
                "type": "bool",
                "computed": true
              },
              "arn": {
                "type": "string",
                "computed": true
              },
              "default_value": {
                "type": "number",
                "computed": true
              },
              "global_quota": {
                "type": "bool",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "quota_code": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "quota_name": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "service_code": {
                "type": "string",
                "required": true
              },
              "service_name": {
                "type": "string",
                "computed": true
              },
              "value": {
                "type": "number",
                "computed": true
              }
            }
          }
        },
        "aws_sfn_activity": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "creation_date": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "optional": true,
                "computed": true
              }
            }
          }
        },
        "aws_sfn_state_machine": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "creation_date": {
                "type": "string",
                "computed": true
              },
              "definition": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "role_arn": {
                "type": "string",
                "computed": true
              },
              "status": {
                "type": "string",
                "computed": true
              }
            }
          }
        },
        "aws_sns_topic": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "aws_sqs_queue": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true,
                "computed": true
              },
              "url": {
                "type": "string",
                "computed": true
              }
            }
          }
        },
        "aws_ssm_document": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "content": {
                "type": "string",
                "computed": true
              },
              "document_format": {
                "type": "string",
                "optional": true
              },
              "document_type": {
                "type": "string",
                "computed": true
              },
              "document_version": {
                "type": "string",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "aws_ssm_parameter": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "type": {
                "type": "string",
                "computed": true
              },
              "value": {
                "type": "string",
                "computed": true,
                "sensitive": true
              },
              "version": {
                "type": "number",
                "computed": true
              },
              "with_decryption": {
                "type": "bool",
                "optional": true
              }
            }
          }
        },
        "aws_ssm_patch_baseline": {
          "version": 0,
          "block": {
            "attributes": {
              "default_baseline": {
                "type": "bool",
                "optional": true
              },
              "description": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "computed": true
              },
              "name_prefix": {
                "type": "string",
                "optional": true
              },
              "operating_system": {
                "type": "string",
                "optional": true
              },
              "owner": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "aws_storagegateway_local_disk": {
          "version": 0,
          "block": {
            "attributes": {
              "disk_id": {
                "type": "string",
                "computed": true
              },
              "disk_node": {
                "type": "string",
                "optional": true
              },
              "disk_path": {
                "type": "string",
                "optional": true
              },
              "gateway_arn": {
                "type": "string",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              }
            }
          }
        },
        "aws_subnet": {
          "version": 1,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "assign_ipv6_address_on_creation": {
                "type": "bool",
                "computed": true
              },
              "availability_zone": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "availability_zone_id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "cidr_block": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "default_for_az": {
                "type": "bool",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "ipv6_cidr_block": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "ipv6_cidr_block_association_id": {
                "type": "string",
                "computed": true
              },
              "map_public_ip_on_launch": {
                "type": "bool",
                "computed": true
              },
              "owner_id": {
                "type": "string",
                "computed": true
              },
              "state": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true,
                "computed": true
              },
              "vpc_id": {
                "type": "string",
                "optional": true,
                "computed": true
              }
            },
            "block_types": {
              "filter": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "name": {
                      "type": "string",
                      "required": true
                    },
                    "values": {
                      "type": [
                        "set",
                        "string"
                      ],
                      "required": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_subnet_ids": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "ids": {
                "type": [
                  "set",
                  "string"
                ],
                "computed": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true,
                "computed": true
              },
              "vpc_id": {
                "type": "string",
                "required": true
              }
            },
            "block_types": {
              "filter": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "name": {
                      "type": "string",
                      "required": true
                    },
                    "values": {
                      "type": [
                        "set",
                        "string"
                      ],
                      "required": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_transfer_server": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "endpoint": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "identity_provider_type": {
                "type": "string",
                "computed": true
              },
              "invocation_role": {
                "type": "string",
                "computed": true
              },
              "logging_role": {
                "type": "string",
                "computed": true
              },
              "server_id": {
                "type": "string",
                "required": true
              },
              "url": {
                "type": "string",
                "computed": true
              }
            }
          }
        },
        "aws_vpc": {
          "version": 1,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "computed": true
              },
              "cidr_block": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "cidr_block_associations": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "association_id": "string",
                      "cidr_block": "string",
                      "state": "string"
                    }
                  ]
                ],
                "computed": true
              },
              "default": {
                "type": "bool",
                "optional": true,
                "computed": true
              },
              "dhcp_options_id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "enable_dns_hostnames": {
                "type": "bool",
                "computed": true
              },
              "enable_dns_support": {
                "type": "bool",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "instance_tenancy": {
                "type": "string",
                "computed": true
              },
              "ipv6_association_id": {
                "type": "string",
                "computed": true
              },
              "ipv6_cidr_block": {
                "type": "string",
                "computed": true
              },
              "main_route_table_id": {
                "type": "string",
                "computed": true
              },
              "owner_id": {
                "type": "string",
                "computed": true
              },
              "state": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true,
                "computed": true
              }
            },
            "block_types": {
              "filter": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "name": {
                      "type": "string",
                      "required": true
                    },
                    "values": {
                      "type": [
                        "set",
                        "string"
                      ],
                      "required": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_vpc_dhcp_options": {
          "version": 0,
          "block": {
            "attributes": {
              "dhcp_options_id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "domain_name": {
                "type": "string",
                "computed": true
              },
              "domain_name_servers": {
                "type": [
                  "list",
                  "string"
                ],
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "netbios_name_servers": {
                "type": [
                  "list",
                  "string"
                ],
                "computed": true
              },
              "netbios_node_type": {
                "type": "string",
                "computed": true
              },
              "ntp_servers": {
                "type": [
                  "list",
                  "string"
                ],
                "computed": true
              },
              "owner_id": {
                "type": "string",
                "computed": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true,
                "computed": true
              }
            },
            "block_types": {
              "filter": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "name": {
                      "type": "string",
                      "required": true
                    },
                    "values": {
                      "type": [
                        "set",
                        "string"
                      ],
                      "required": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_vpc_endpoint": {
          "version": 0,
          "block": {
            "attributes": {
              "cidr_blocks": {
                "type": [
                  "list",
                  "string"
                ],
                "computed": true
              },
              "dns_entry": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "dns_name": "string",
                      "hosted_zone_id": "string"
                    }
                  ]
                ],
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "network_interface_ids": {
                "type": [
                  "set",
                  "string"
                ],
                "computed": true
              },
              "owner_id": {
                "type": "string",
                "computed": true
              },
              "policy": {
                "type": "string",
                "computed": true
              },
              "prefix_list_id": {
                "type": "string",
                "computed": true
              },
              "private_dns_enabled": {
                "type": "bool",
                "computed": true
              },
              "requester_managed": {
                "type": "bool",
                "computed": true
              },
              "route_table_ids": {
                "type": [
                  "set",
                  "string"
                ],
                "computed": true
              },
              "security_group_ids": {
                "type": [
                  "set",
                  "string"
                ],
                "computed": true
              },
              "service_name": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "state": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "subnet_ids": {
                "type": [
                  "set",
                  "string"
                ],
                "computed": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true,
                "computed": true
              },
              "vpc_endpoint_type": {
                "type": "string",
                "computed": true
              },
              "vpc_id": {
                "type": "string",
                "optional": true,
                "computed": true
              }
            },
            "block_types": {
              "filter": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "name": {
                      "type": "string",
                      "required": true
                    },
                    "values": {
                      "type": [
                        "set",
                        "string"
                      ],
                      "required": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_vpc_endpoint_service": {
          "version": 0,
          "block": {
            "attributes": {
              "acceptance_required": {
                "type": "bool",
                "computed": true
              },
              "availability_zones": {
                "type": [
                  "set",
                  "string"
                ],
                "computed": true
              },
              "base_endpoint_dns_names": {
                "type": [
                  "set",
                  "string"
                ],
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "manages_vpc_endpoints": {
                "type": "bool",
                "computed": true
              },
              "owner": {
                "type": "string",
                "computed": true
              },
              "private_dns_name": {
                "type": "string",
                "computed": true
              },
              "service": {
                "type": "string",
                "optional": true
              },
              "service_id": {
                "type": "string",
                "computed": true
              },
              "service_name": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "service_type": {
                "type": "string",
                "computed": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true,
                "computed": true
              },
              "vpc_endpoint_policy_supported": {
                "type": "bool",
                "computed": true
              }
            }
          }
        },
        "aws_vpc_peering_connection": {
          "version": 0,
          "block": {
            "attributes": {
              "accepter": {
                "type": [
                  "map",
                  "bool"
                ],
                "computed": true
              },
              "cidr_block": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "owner_id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "peer_cidr_block": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "peer_owner_id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "peer_region": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "peer_vpc_id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "region": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "requester": {
                "type": [
                  "map",
                  "bool"
                ],
                "computed": true
              },
              "status": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true,
                "computed": true
              },
              "vpc_id": {
                "type": "string",
                "optional": true,
                "computed": true
              }
            },
            "block_types": {
              "filter": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "name": {
                      "type": "string",
                      "required": true
                    },
                    "values": {
                      "type": [
                        "set",
                        "string"
                      ],
                      "required": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_vpcs": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "ids": {
                "type": [
                  "set",
                  "string"
                ],
                "computed": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true,
                "computed": true
              }
            },
            "block_types": {
              "filter": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "name": {
                      "type": "string",
                      "required": true
                    },
                    "values": {
                      "type": [
                        "set",
                        "string"
                      ],
                      "required": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_vpn_gateway": {
          "version": 0,
          "block": {
            "attributes": {
              "amazon_side_asn": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "attached_vpc_id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "availability_zone": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "state": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true,
                "computed": true
              }
            },
            "block_types": {
              "filter": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "name": {
                      "type": "string",
                      "required": true
                    },
                    "values": {
                      "type": [
                        "set",
                        "string"
                      ],
                      "required": true
                    }
                  }
                }
              }
            }
          }
        },
        "aws_waf_ipset": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "aws_waf_rate_based_rule": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "aws_waf_rule": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "aws_waf_web_acl": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "aws_wafregional_ipset": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "aws_wafregional_rate_based_rule": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "aws_wafregional_rule": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "aws_wafregional_web_acl": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "aws_workspaces_bundle": {
          "version": 0,
          "block": {
            "attributes": {
              "bundle_id": {
                "type": "string",
                "required": true
              },
              "compute_type": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "name": "string"
                    }
                  ]
                ],
                "computed": true
              },
              "description": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "computed": true
              },
              "owner": {
                "type": "string",
                "computed": true
              },
              "root_storage": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "capacity": "string"
                    }
                  ]
                ],
                "computed": true
              },
              "user_storage": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "capacity": "string"
                    }
                  ]
                ],
                "computed": true
              }
            }
          }
        }
      }
    },
    "google": {
      "provider": {
        "version": 0,
        "block": {
          "attributes": {
            "access_context_manager_custom_endpoint": {
              "type": "string",
              "optional": true
            },
            "access_token": {
              "type": "string",
              "optional": true
            },
            "app_engine_custom_endpoint": {
              "type": "string",
              "optional": true
            },
            "big_query_custom_endpoint": {
              "type": "string",
              "optional": true
            },
            "bigquery_data_transfer_custom_endpoint": {
              "type": "string",
              "optional": true
            },
            "bigtable_custom_endpoint": {
              "type": "string",
              "optional": true
            },
            "binary_authorization_custom_endpoint": {
              "type": "string",
              "optional": true
            },
            "cloud_billing_custom_endpoint": {
              "type": "string",
              "optional": true
            },
            "cloud_build_custom_endpoint": {
              "type": "string",
              "optional": true
            },
            "cloud_functions_custom_endpoint": {
              "type": "string",
              "optional": true
            },
            "cloud_iot_custom_endpoint": {
              "type": "string",
              "optional": true
            },
            "cloud_run_custom_endpoint": {
              "type": "string",
              "optional": true
            },
            "cloud_scheduler_custom_endpoint": {
              "type": "string",
              "optional": true
            },
            "cloud_tasks_custom_endpoint": {
              "type": "string",
              "optional": true
            },
            "composer_custom_endpoint": {
              "type": "string",
              "optional": true
            },
            "compute_beta_custom_endpoint": {
              "type": "string",
              "optional": true
            },
            "compute_custom_endpoint": {
              "type": "string",
              "optional": true
            },
            "container_analysis_custom_endpoint": {
              "type": "string",
              "optional": true
            },
            "container_beta_custom_endpoint": {
              "type": "string",
              "optional": true
            },
            "container_custom_endpoint": {
              "type": "string",
              "optional": true
            },
            "credentials": {
              "type": "string",
              "optional": true
            },
            "dataflow_custom_endpoint": {
              "type": "string",
              "optional": true
            },
            "dataproc_beta_custom_endpoint": {
              "type": "string",
              "optional": true
            },
            "dataproc_custom_endpoint": {
              "type": "string",
              "optional": true
            },
            "datastore_custom_endpoint": {
              "type": "string",
              "optional": true
            },
            "deployment_manager_custom_endpoint": {
              "type": "string",
              "optional": true
            },
            "dialogflow_custom_endpoint": {
              "type": "string",
              "optional": true
            },
            "dns_beta_custom_endpoint": {
              "type": "string",
              "optional": true
            },
            "dns_custom_endpoint": {
              "type": "string",
              "optional": true
            },
            "filestore_custom_endpoint": {
              "type": "string",
              "optional": true
            },
            "firestore_custom_endpoint": {
              "type": "string",
              "optional": true
            },
            "iam_credentials_custom_endpoint": {
              "type": "string",
              "optional": true
            },
            "iam_custom_endpoint": {
              "type": "string",
              "optional": true
            },
            "iap_custom_endpoint": {
              "type": "string",
              "optional": true
            },
            "identity_platform_custom_endpoint": {
              "type": "string",
              "optional": true
            },
            "kms_custom_endpoint": {
              "type": "string",
              "optional": true
            },
            "logging_custom_endpoint": {
              "type": "string",
              "optional": true
            },
            "ml_engine_custom_endpoint": {
              "type": "string",
              "optional": true
            },
            "monitoring_custom_endpoint": {
              "type": "string",
              "optional": true
            },
            "project": {
              "type": "string",
              "optional": true
            },
            "pubsub_custom_endpoint": {
              "type": "string",
              "optional": true
            },
            "redis_custom_endpoint": {
              "type": "string",
              "optional": true
            },
            "region": {
              "type": "string",
              "optional": true
            },
            "request_timeout": {
              "type": "string",
              "optional": true
            },
            "resource_manager_custom_endpoint": {
              "type": "string",
              "optional": true
            },
            "resource_manager_v2beta1_custom_endpoint": {
              "type": "string",
              "optional": true
            },
            "runtime_config_custom_endpoint": {
              "type": "string",
              "optional": true
            },
            "runtimeconfig_custom_endpoint": {
              "type": "string",
              "optional": true
            },
            "scopes": {
              "type": [
                "list",
                "string"
              ],
              "optional": true
            },
            "security_center_custom_endpoint": {
              "type": "string",
              "optional": true
            },
            "service_management_custom_endpoint": {
              "type": "string",
              "optional": true
            },
            "service_networking_custom_endpoint": {
              "type": "string",
              "optional": true
            },
            "service_usage_custom_endpoint": {
              "type": "string",
              "optional": true
            },
            "source_repo_custom_endpoint": {
              "type": "string",
              "optional": true
            },
            "spanner_custom_endpoint": {
              "type": "string",
              "optional": true
            },
            "sql_custom_endpoint": {
              "type": "string",
              "optional": true
            },
            "storage_custom_endpoint": {
              "type": "string",
              "optional": true
            },
            "storage_transfer_custom_endpoint": {
              "type": "string",
              "optional": true
            },
            "tpu_custom_endpoint": {
              "type": "string",
              "optional": true
            },
            "user_project_override": {
              "type": "bool",
              "optional": true
            },
            "vpc_access_custom_endpoint": {
              "type": "string",
              "optional": true
            },
            "zone": {
              "type": "string",
              "optional": true
            }
          },
          "block_types": {
            "batching": {
              "nesting_mode": "list",
              "block": {
                "attributes": {
                  "enable_batching": {
                    "type": "bool",
                    "optional": true
                  },
                  "send_after": {
                    "type": "string",
                    "optional": true
                  }
                }
              },
              "max_items": 1
            }
          }
        }
      },
      "resource_schemas": {
        "google_access_context_manager_access_level": {
          "version": 0,
          "block": {
            "attributes": {
              "description": {
                "type": "string",
                "description": "Description of the AccessLevel and its use. Does not affect behavior.",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "Resource name for the Access Level. The short_name component must begin\nwith a letter and only include alphanumeric and '_'.\nFormat: accessPolicies/{policy_id}/accessLevels/{short_name}",
                "required": true
              },
              "parent": {
                "type": "string",
                "description": "The AccessPolicy this AccessLevel lives in.\nFormat: accessPolicies/{policy_id}",
                "required": true
              },
              "title": {
                "type": "string",
                "description": "Human readable title. Must be unique within the Policy.",
                "required": true
              }
            },
            "block_types": {
              "basic": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "combining_function": {
                      "type": "string",
                      "description": "How the conditions list should be combined to determine if a request\nis granted this AccessLevel. If AND is used, each Condition in\nconditions must be satisfied for the AccessLevel to be applied. If\nOR is used, at least one Condition in conditions must be satisfied\nfor the AccessLevel to be applied. Defaults to AND if unspecified.",
                      "optional": true
                    }
                  },
                  "block_types": {
                    "conditions": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "ip_subnetworks": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description": "A list of CIDR block IP subnetwork specification. May be IPv4\nor IPv6.\nNote that for a CIDR IP address block, the specified IP address\nportion must be properly truncated (i.e. all the host bits must\nbe zero) or the input is considered malformed. For example,\n\"192.0.2.0/24\" is accepted but \"192.0.2.1/24\" is not. Similarly,\nfor IPv6, \"2001:db8::/32\" is accepted whereas \"2001:db8::1/32\"\nis not. The originating IP of a request must be in one of the\nlisted subnets in order for this Condition to be true.\nIf empty, all IP addresses are allowed.",
                            "optional": true
                          },
                          "members": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description": "An allowed list of members (users, service accounts).\nUsing groups is not supported yet.\n\nThe signed-in user originating the request must be a part of one\nof the provided members. If not specified, a request may come\nfrom any user (logged in/not logged in, not present in any\ngroups, etc.).\nFormats: 'user:{emailid}', 'serviceAccount:{emailid}'",
                            "optional": true
                          },
                          "negate": {
                            "type": "bool",
                            "description": "Whether to negate the Condition. If true, the Condition becomes\na NAND over its non-empty fields, each field must be false for\nthe Condition overall to be satisfied. Defaults to false.",
                            "optional": true
                          },
                          "required_access_levels": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description": "A list of other access levels defined in the same Policy,\nreferenced by resource name. Referencing an AccessLevel which\ndoes not exist is an error. All access levels listed must be\ngranted for the Condition to be true.\nFormat: accessPolicies/{policy_id}/accessLevels/{short_name}",
                            "optional": true
                          }
                        },
                        "block_types": {
                          "device_policy": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "allowed_device_management_levels": {
                                  "type": [
                                    "list",
                                    "string"
                                  ],
                                  "description": "A list of allowed device management levels.\nAn empty list allows all management levels.",
                                  "optional": true
                                },
                                "allowed_encryption_statuses": {
                                  "type": [
                                    "list",
                                    "string"
                                  ],
                                  "description": "A list of allowed encryptions statuses.\nAn empty list allows all statuses.",
                                  "optional": true
                                },
                                "require_admin_approval": {
                                  "type": "bool",
                                  "description": "Whether the device needs to be approved by the customer admin.",
                                  "optional": true
                                },
                                "require_corp_owned": {
                                  "type": "bool",
                                  "description": "Whether the device needs to be corp owned.",
                                  "optional": true
                                },
                                "require_screen_lock": {
                                  "type": "bool",
                                  "description": "Whether or not screenlock is required for the DevicePolicy\nto be true. Defaults to false.",
                                  "optional": true
                                }
                              },
                              "block_types": {
                                "os_constraints": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "minimum_version": {
                                        "type": "string",
                                        "description": "The minimum allowed OS version. If not set, any version\nof this OS satisfies the constraint.\nFormat: \"major.minor.patch\" such as \"10.5.301\", \"9.2.1\".",
                                        "optional": true
                                      },
                                      "os_type": {
                                        "type": "string",
                                        "description": "The operating system type of the device.",
                                        "required": true
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "max_items": 1
                          }
                        }
                      },
                      "min_items": 1
                    }
                  }
                },
                "max_items": 1
              },
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "google_access_context_manager_access_policy": {
          "version": 0,
          "block": {
            "attributes": {
              "create_time": {
                "type": "string",
                "description": "Time the AccessPolicy was created in UTC.",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "Resource name of the AccessPolicy. Format: {policy_id}",
                "computed": true
              },
              "parent": {
                "type": "string",
                "description": "The parent of this AccessPolicy in the Cloud Resource Hierarchy.\nFormat: organizations/{organization_id}",
                "required": true
              },
              "title": {
                "type": "string",
                "description": "Human readable title. Does not affect behavior.",
                "required": true
              },
              "update_time": {
                "type": "string",
                "description": "Time the AccessPolicy was updated in UTC.",
                "computed": true
              }
            },
            "block_types": {
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "google_access_context_manager_service_perimeter": {
          "version": 0,
          "block": {
            "attributes": {
              "create_time": {
                "type": "string",
                "description": "Time the AccessPolicy was created in UTC.",
                "computed": true
              },
              "description": {
                "type": "string",
                "description": "Description of the ServicePerimeter and its use. Does not affect\nbehavior.",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "Resource name for the ServicePerimeter. The short_name component must\nbegin with a letter and only include alphanumeric and '_'.\nFormat: accessPolicies/{policy_id}/servicePerimeters/{short_name}",
                "required": true
              },
              "parent": {
                "type": "string",
                "description": "The AccessPolicy this ServicePerimeter lives in.\nFormat: accessPolicies/{policy_id}",
                "required": true
              },
              "perimeter_type": {
                "type": "string",
                "description": "Specifies the type of the Perimeter. There are two types: regular and\nbridge. Regular Service Perimeter contains resources, access levels,\nand restricted services. Every resource can be in at most\nONE regular Service Perimeter.\n\nIn addition to being in a regular service perimeter, a resource can also\nbe in zero or more perimeter bridges. A perimeter bridge only contains\nresources. Cross project operations are permitted if all effected\nresources share some perimeter (whether bridge or regular). Perimeter\nBridge does not contain access levels or services: those are governed\nentirely by the regular perimeter that resource is in.\n\nPerimeter Bridges are typically useful when building more complex\ntopologies with many independent perimeters that need to share some data\nwith a common perimeter, but should not be able to share data among\nthemselves.",
                "optional": true
              },
              "title": {
                "type": "string",
                "description": "Human readable title. Must be unique within the Policy.",
                "required": true
              },
              "update_time": {
                "type": "string",
                "description": "Time the AccessPolicy was updated in UTC.",
                "computed": true
              }
            },
            "block_types": {
              "status": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "access_levels": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "A list of AccessLevel resource names that allow resources within\nthe ServicePerimeter to be accessed from the internet.\nAccessLevels listed must be in the same policy as this\nServicePerimeter. Referencing a nonexistent AccessLevel is a\nsyntax error. If no AccessLevel names are listed, resources within\nthe perimeter can only be accessed via GCP calls with request\norigins within the perimeter. For Service Perimeter Bridge, must\nbe empty.\n\nFormat: accessPolicies/{policy_id}/accessLevels/{access_level_name}",
                      "optional": true
                    },
                    "resources": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "A list of GCP resources that are inside of the service perimeter.\nCurrently only projects are allowed.\nFormat: projects/{project_number}",
                      "optional": true
                    },
                    "restricted_services": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "GCP services that are subject to the Service Perimeter\nrestrictions. Must contain a list of services. For example, if\n'storage.googleapis.com' is specified, access to the storage\nbuckets inside the perimeter must meet the perimeter's access\nrestrictions.",
                      "optional": true
                    }
                  }
                },
                "max_items": 1
              },
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "google_access_context_manager_service_perimeter_resource": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "perimeter_name": {
                "type": "string",
                "description": "The name of the Service Perimeter to add this resource to.",
                "required": true
              },
              "resource": {
                "type": "string",
                "description": "A GCP resource that is inside of the service perimeter.\nCurrently only projects are allowed.\nFormat: projects/{project_number}",
                "required": true
              }
            },
            "block_types": {
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "google_app_engine_application": {
          "version": 0,
          "block": {
            "attributes": {
              "app_id": {
                "type": "string",
                "computed": true
              },
              "auth_domain": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "code_bucket": {
                "type": "string",
                "computed": true
              },
              "default_bucket": {
                "type": "string",
                "computed": true
              },
              "default_hostname": {
                "type": "string",
                "computed": true
              },
              "gcr_domain": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "location_id": {
                "type": "string",
                "required": true
              },
              "name": {
                "type": "string",
                "computed": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "serving_status": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "url_dispatch_rule": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "domain": "string",
                      "path": "string",
                      "service": "string"
                    }
                  ]
                ],
                "computed": true
              }
            },
            "block_types": {
              "feature_settings": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "split_health_checks": {
                      "type": "bool",
                      "required": true
                    }
                  }
                },
                "max_items": 1
              },
              "iap": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "oauth2_client_id": {
                      "type": "string",
                      "required": true
                    },
                    "oauth2_client_secret": {
                      "type": "string",
                      "required": true,
                      "sensitive": true
                    },
                    "oauth2_client_secret_sha256": {
                      "type": "string",
                      "computed": true,
                      "sensitive": true
                    }
                  }
                },
                "max_items": 1
              }
            }
          }
        },
        "google_app_engine_application_url_dispatch_rules": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              }
            },
            "block_types": {
              "dispatch_rules": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "domain": {
                      "type": "string",
                      "description": "Domain name to match against. The wildcard \"*\" is supported if specified before a period: \"*.\".\nDefaults to matching all domains: \"*\".",
                      "optional": true
                    },
                    "path": {
                      "type": "string",
                      "description": "Pathname within the host. Must start with a \"/\". A single \"*\" can be included at the end of the path.\nThe sum of the lengths of the domain and path may not exceed 100 characters.",
                      "required": true
                    },
                    "service": {
                      "type": "string",
                      "description": "Pathname within the host. Must start with a \"/\". A single \"*\" can be included at the end of the path.\nThe sum of the lengths of the domain and path may not exceed 100 characters.",
                      "required": true
                    }
                  }
                },
                "min_items": 1
              },
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "google_app_engine_domain_mapping": {
          "version": 0,
          "block": {
            "attributes": {
              "domain_name": {
                "type": "string",
                "description": "Relative name of the domain serving the application. Example: example.com.",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "Full path to the DomainMapping resource in the API. Example: apps/myapp/domainMapping/example.com.",
                "computed": true
              },
              "override_strategy": {
                "type": "string",
                "description": "Whether the domain creation should override any existing mappings for this domain.\nBy default, overrides are rejected.",
                "optional": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "resource_records": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "name": "string",
                      "rrdata": "string",
                      "type": "string"
                    }
                  ]
                ],
                "description": "The resource records required to configure this domain mapping. These records must be added to the domain's DNS\nconfiguration in order to serve the application via this domain mapping.",
                "computed": true
              }
            },
            "block_types": {
              "ssl_settings": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "certificate_id": {
                      "type": "string",
                      "description": "ID of the AuthorizedCertificate resource configuring SSL for the application. Clearing this field will\nremove SSL support.\nBy default, a managed certificate is automatically created for every domain mapping. To omit SSL support\nor to configure SSL manually, specify 'SslManagementType.MANUAL' on a 'CREATE' or 'UPDATE' request. You must be\nauthorized to administer the 'AuthorizedCertificate' resource to manually map it to a DomainMapping resource.\nExample: 12345.",
                      "optional": true,
                      "computed": true
                    },
                    "pending_managed_certificate_id": {
                      "type": "string",
                      "description": "ID of the managed 'AuthorizedCertificate' resource currently being provisioned, if applicable. Until the new\nmanaged certificate has been successfully provisioned, the previous SSL state will be preserved. Once the\nprovisioning process completes, the 'certificateId' field will reflect the new managed certificate and this\nfield will be left empty. To remove SSL support while there is still a pending managed certificate, clear the\n'certificateId' field with an update request.",
                      "computed": true
                    },
                    "ssl_management_type": {
                      "type": "string",
                      "description": "SSL management type for this domain. If 'AUTOMATIC', a managed certificate is automatically provisioned.\nIf 'MANUAL', 'certificateId' must be manually specified in order to configure SSL for this domain.",
                      "required": true
                    }
                  }
                },
                "max_items": 1
              },
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "google_app_engine_firewall_rule": {
          "version": 0,
          "block": {
            "attributes": {
              "action": {
                "type": "string",
                "description": "The action to take if this rule matches.",
                "required": true
              },
              "description": {
                "type": "string",
                "description": "An optional string description of this rule.",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "priority": {
                "type": "number",
                "description": "A positive integer that defines the order of rule evaluation.\nRules with the lowest priority are evaluated first.\n\nA default rule at priority Int32.MaxValue matches all IPv4 and\nIPv6 traffic when no previous rule matches. Only the action of\nthis rule can be modified by the user.",
                "optional": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "source_range": {
                "type": "string",
                "description": "IP address or range, defined using CIDR notation, of requests that this rule applies to.",
                "required": true
              }
            },
            "block_types": {
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "google_app_engine_service_split_traffic": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "migrate_traffic": {
                "type": "bool",
                "description": "If set to true traffic will be migrated to this version.",
                "optional": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "service": {
                "type": "string",
                "description": "The name of the service these settings apply to.",
                "required": true
              }
            },
            "block_types": {
              "split": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "allocations": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description": "Mapping from version IDs within the service to fractional (0.000, 1] allocations of traffic for that version. Each version can be specified only once, but some versions in the service may not have any traffic allocation. Services that have traffic allocated cannot be deleted until either the service is deleted or their traffic allocation is removed. Allocations must sum to 1. Up to two decimal place precision is supported for IP-based splits and up to three decimal places is supported for cookie-based splits.",
                      "required": true
                    },
                    "shard_by": {
                      "type": "string",
                      "description": "Mechanism used to determine which version a request is sent to. The traffic selection algorithm will be stable for either type until allocations are changed.",
                      "optional": true
                    }
                  }
                },
                "min_items": 1,
                "max_items": 1
              },
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "google_app_engine_standard_app_version": {
          "version": 0,
          "block": {
            "attributes": {
              "delete_service_on_destroy": {
                "type": "bool",
                "optional": true
              },
              "env_variables": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "Environment variables available to the application.",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "instance_class": {
                "type": "string",
                "description": "Instance class that is used to run this version. Valid values are\nAutomaticScaling F1, F2, F4, F4_1G\n(Only AutomaticScaling is supported at the moment)",
                "optional": true
              },
              "name": {
                "type": "string",
                "description": "Full path to the Version resource in the API. Example, \"v1\".",
                "computed": true
              },
              "noop_on_destroy": {
                "type": "bool",
                "optional": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "runtime": {
                "type": "string",
                "description": "Desired runtime. Example python27.",
                "required": true
              },
              "runtime_api_version": {
                "type": "string",
                "description": "The version of the API in the given runtime environment. \nPlease see the app.yaml reference for valid values at https://cloud.google.com/appengine/docs/standard//config/appref",
                "optional": true
              },
              "service": {
                "type": "string",
                "description": "AppEngine service resource",
                "optional": true
              },
              "threadsafe": {
                "type": "bool",
                "description": "Whether multiple requests can be dispatched to this version at once.",
                "optional": true
              },
              "version_id": {
                "type": "string",
                "description": "Relative name of the version within the service. For example, 'v1'. Version names can contain only lowercase letters, numbers, or hyphens. Reserved names,\"default\", \"latest\", and any name with the prefix \"ah-\".",
                "optional": true
              }
            },
            "block_types": {
              "deployment": {
                "nesting_mode": "list",
                "block": {
                  "block_types": {
                    "files": {
                      "nesting_mode": "set",
                      "block": {
                        "attributes": {
                          "name": {
                            "type": "string",
                            "required": true
                          },
                          "sha1_sum": {
                            "type": "string",
                            "description": "SHA1 checksum of the file",
                            "optional": true
                          },
                          "source_url": {
                            "type": "string",
                            "description": "Source URL",
                            "required": true
                          }
                        }
                      }
                    },
                    "zip": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "files_count": {
                            "type": "number",
                            "description": "files count",
                            "optional": true
                          },
                          "source_url": {
                            "type": "string",
                            "description": "Source URL",
                            "required": true
                          }
                        }
                      },
                      "max_items": 1
                    }
                  }
                },
                "max_items": 1
              },
              "entrypoint": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "shell": {
                      "type": "string",
                      "description": "The format should be a shell command that can be fed to bash -c.",
                      "required": true
                    }
                  }
                },
                "max_items": 1
              },
              "handlers": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "auth_fail_action": {
                      "type": "string",
                      "description": "Actions to take when the user is not logged in.",
                      "optional": true
                    },
                    "login": {
                      "type": "string",
                      "description": "Methods to restrict access to a URL based on login status.",
                      "optional": true
                    },
                    "redirect_http_response_code": {
                      "type": "string",
                      "description": "Redirect codes.",
                      "optional": true
                    },
                    "security_level": {
                      "type": "string",
                      "description": "Security (HTTPS) enforcement for this URL.",
                      "optional": true
                    },
                    "url_regex": {
                      "type": "string",
                      "description": "URL prefix. Uses regular expression syntax, which means regexp special characters must be escaped, but should not contain groupings. \nAll URLs that begin with this prefix are handled by this handler, using the portion of the URL after the prefix as part of the file path.",
                      "optional": true
                    }
                  },
                  "block_types": {
                    "script": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "script_path": {
                            "type": "string",
                            "description": "Path to the script from the application root directory.",
                            "required": true
                          }
                        }
                      },
                      "max_items": 1
                    },
                    "static_files": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "application_readable": {
                            "type": "bool",
                            "description": "Whether files should also be uploaded as code data. By default, files declared in static file handlers are uploaded as static data and are only served to end users; they cannot be read by the application. If enabled, uploads are charged against both your code and static data storage resource quotas.",
                            "optional": true
                          },
                          "expiration": {
                            "type": "string",
                            "description": "Time a static file served by this handler should be cached by web proxies and browsers.\nA duration in seconds with up to nine fractional digits, terminated by 's'. Example \"3.5s\".",
                            "optional": true
                          },
                          "http_headers": {
                            "type": [
                              "map",
                              "string"
                            ],
                            "description": "HTTP headers to use for all responses from these URLs.\nAn object containing a list of \"key:value\" value pairs.\".",
                            "optional": true
                          },
                          "mime_type": {
                            "type": "string",
                            "description": "MIME type used to serve all files served by this handler.\nDefaults to file-specific MIME types, which are derived from each file's filename extension.",
                            "optional": true
                          },
                          "path": {
                            "type": "string",
                            "description": "Path to the static files matched by the URL pattern, from the application root directory. The path can refer to text matched in groupings in the URL pattern.",
                            "optional": true
                          },
                          "require_matching_file": {
                            "type": "bool",
                            "description": "Whether this handler should match the request if the file referenced by the handler does not exist.",
                            "optional": true
                          },
                          "upload_path_regex": {
                            "type": "string",
                            "description": "Regular expression that matches the file paths for all files that should be referenced by this handler.",
                            "optional": true
                          }
                        }
                      },
                      "max_items": 1
                    }
                  }
                }
              },
              "libraries": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "name": {
                      "type": "string",
                      "description": "Name of the library. Example \"django\".",
                      "optional": true
                    },
                    "version": {
                      "type": "string",
                      "description": "Version of the library to select, or \"latest\".",
                      "optional": true
                    }
                  }
                }
              },
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "google_bigquery_data_transfer_config": {
          "version": 0,
          "block": {
            "attributes": {
              "data_refresh_window_days": {
                "type": "number",
                "description": "The number of days to look back to automatically refresh the data.\nFor example, if dataRefreshWindowDays = 10, then every day BigQuery\nreingests data for [today-10, today-1], rather than ingesting data for\njust [today-1]. Only valid if the data source supports the feature.\nSet the value to 0 to use the default value.",
                "optional": true
              },
              "data_source_id": {
                "type": "string",
                "description": "The data source id. Cannot be changed once the transfer config is created.",
                "required": true
              },
              "destination_dataset_id": {
                "type": "string",
                "description": "The BigQuery target dataset id.",
                "required": true
              },
              "disabled": {
                "type": "bool",
                "description": "When set to true, no runs are scheduled for a given transfer.",
                "optional": true
              },
              "display_name": {
                "type": "string",
                "description": "The user specified display name for the transfer config.",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "location": {
                "type": "string",
                "description": "The geographic location where the transfer config should reside.\nExamples: US, EU, asia-northeast1. The default value is US.",
                "optional": true
              },
              "name": {
                "type": "string",
                "description": "The resource name of the transfer config. Transfer config names have the\nform projects/{projectId}/locations/{location}/transferConfigs/{configId}.\nWhere configId is usually a uuid, but this is not required.\nThe name is ignored when creating a transfer config.",
                "computed": true
              },
              "params": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "These parameters are specific to each data source.",
                "required": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "schedule": {
                "type": "string",
                "description": "Data transfer schedule. If the data source does not support a custom\nschedule, this should be empty. If it is empty, the default value for\nthe data source will be used. The specified times are in UTC. Examples\nof valid format: 1st,3rd monday of month 15:30, every wed,fri of jan,\njun 13:15, and first sunday of quarter 00:00. See more explanation\nabout the format here:\nhttps://cloud.google.com/appengine/docs/flexible/python/scheduling-jobs-with-cron-yaml#the_schedule_format\nNOTE: the granularity should be at least 8 hours, or less frequent.",
                "optional": true
              }
            },
            "block_types": {
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "google_bigquery_dataset": {
          "version": 0,
          "block": {
            "attributes": {
              "creation_time": {
                "type": "number",
                "description": "The time when this dataset was created, in milliseconds since the\nepoch.",
                "computed": true
              },
              "dataset_id": {
                "type": "string",
                "description": "A unique ID for this dataset, without the project name. The ID\nmust contain only letters (a-z, A-Z), numbers (0-9), or\nunderscores (_). The maximum length is 1,024 characters.",
                "required": true
              },
              "default_partition_expiration_ms": {
                "type": "number",
                "description": "The default partition expiration for all partitioned tables in\nthe dataset, in milliseconds.\n\n\nOnce this property is set, all newly-created partitioned tables in\nthe dataset will have an 'expirationMs' property in the 'timePartitioning'\nsettings set to this value, and changing the value will only\naffect new tables, not existing ones. The storage in a partition will\nhave an expiration time of its partition time plus this value.\nSetting this property overrides the use of 'defaultTableExpirationMs'\nfor partitioned tables: only one of 'defaultTableExpirationMs' and\n'defaultPartitionExpirationMs' will be used for any new partitioned\ntable. If you provide an explicit 'timePartitioning.expirationMs' when\ncreating or updating a partitioned table, that value takes precedence\nover the default partition expiration time indicated by this property.",
                "optional": true
              },
              "default_table_expiration_ms": {
                "type": "number",
                "description": "The default lifetime of all tables in the dataset, in milliseconds.\nThe minimum value is 3600000 milliseconds (one hour).\n\n\nOnce this property is set, all newly-created tables in the dataset\nwill have an 'expirationTime' property set to the creation time plus\nthe value in this property, and changing the value will only affect\nnew tables, not existing ones. When the 'expirationTime' for a given\ntable is reached, that table will be deleted automatically.\nIf a table's 'expirationTime' is modified or removed before the\ntable expires, or if you provide an explicit 'expirationTime' when\ncreating a table, that value takes precedence over the default\nexpiration time indicated by this property.",
                "optional": true
              },
              "delete_contents_on_destroy": {
                "type": "bool",
                "optional": true
              },
              "description": {
                "type": "string",
                "description": "A user-friendly description of the dataset",
                "optional": true
              },
              "etag": {
                "type": "string",
                "description": "A hash of the resource.",
                "computed": true
              },
              "friendly_name": {
                "type": "string",
                "description": "A descriptive name for the dataset",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "labels": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "The labels associated with this dataset. You can use these to\norganize and group your datasets",
                "optional": true
              },
              "last_modified_time": {
                "type": "number",
                "description": "The date when this dataset or any of its tables was last modified, in\nmilliseconds since the epoch.",
                "computed": true
              },
              "location": {
                "type": "string",
                "description": "The geographic location where the dataset should reside.\nSee [official docs](https://cloud.google.com/bigquery/docs/dataset-locations).\n\n\nThere are two types of locations, regional or multi-regional. A regional\nlocation is a specific geographic place, such as Tokyo, and a multi-regional\nlocation is a large geographic area, such as the United States, that\ncontains at least two geographic places.\n\n\nPossible regional values include: 'asia-east1', 'asia-northeast1',\n'asia-southeast1', 'australia-southeast1', 'europe-north1',\n'europe-west2' and 'us-east4'.\n\n\nPossible multi-regional values: 'EU' and 'US'.\n\n\nThe default value is multi-regional location 'US'.\nChanging this forces a new resource to be created.",
                "optional": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "self_link": {
                "type": "string",
                "computed": true
              }
            },
            "block_types": {
              "access": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "domain": {
                      "type": "string",
                      "description": "A domain to grant access to. Any users signed in with the\ndomain specified will be granted the specified access",
                      "optional": true
                    },
                    "group_by_email": {
                      "type": "string",
                      "description": "An email address of a Google Group to grant access to.",
                      "optional": true
                    },
                    "role": {
                      "type": "string",
                      "description": "Describes the rights granted to the user specified by the other\nmember of the access object. Primitive, Predefined and custom\nroles are supported. Predefined roles that have equivalent\nprimitive roles are swapped by the API to their Primitive\ncounterparts, and will show a diff post-create. See\n[official docs](https://cloud.google.com/bigquery/docs/access-control).",
                      "optional": true
                    },
                    "special_group": {
                      "type": "string",
                      "description": "A special group to grant access to. Possible values include:\n\n\n* 'projectOwners': Owners of the enclosing project.\n\n\n* 'projectReaders': Readers of the enclosing project.\n\n\n* 'projectWriters': Writers of the enclosing project.\n\n\n* 'allAuthenticatedUsers': All authenticated BigQuery users.",
                      "optional": true
                    },
                    "user_by_email": {
                      "type": "string",
                      "description": "An email address of a user to grant access to. For example:\nfred@example.com",
                      "optional": true
                    }
                  },
                  "block_types": {
                    "view": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "dataset_id": {
                            "type": "string",
                            "description": "The ID of the dataset containing this table.",
                            "required": true
                          },
                          "project_id": {
                            "type": "string",
                            "description": "The ID of the project containing this table.",
                            "required": true
                          },
                          "table_id": {
                            "type": "string",
                            "description": "The ID of the table. The ID must contain only letters (a-z,\nA-Z), numbers (0-9), or underscores (_). The maximum length\nis 1,024 characters.",
                            "required": true
                          }
                        }
                      },
                      "max_items": 1
                    }
                  }
                }
              },
              "default_encryption_configuration": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "kms_key_name": {
                      "type": "string",
                      "description": "Describes the Cloud KMS encryption key that will be used to protect destination\nBigQuery table. The BigQuery Service Account associated with your project requires\naccess to this encryption key.",
                      "required": true
                    }
                  }
                },
                "max_items": 1
              },
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "google_bigquery_table": {
          "version": 0,
          "block": {
            "attributes": {
              "clustering": {
                "type": [
                  "list",
                  "string"
                ],
                "optional": true
              },
              "creation_time": {
                "type": "number",
                "computed": true
              },
              "dataset_id": {
                "type": "string",
                "required": true
              },
              "description": {
                "type": "string",
                "optional": true
              },
              "etag": {
                "type": "string",
                "computed": true
              },
              "expiration_time": {
                "type": "number",
                "optional": true,
                "computed": true
              },
              "friendly_name": {
                "type": "string",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "labels": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              },
              "last_modified_time": {
                "type": "number",
                "computed": true
              },
              "location": {
                "type": "string",
                "computed": true
              },
              "num_bytes": {
                "type": "number",
                "computed": true
              },
              "num_long_term_bytes": {
                "type": "number",
                "computed": true
              },
              "num_rows": {
                "type": "number",
                "computed": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "schema": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "self_link": {
                "type": "string",
                "computed": true
              },
              "table_id": {
                "type": "string",
                "required": true
              },
              "type": {
                "type": "string",
                "computed": true
              }
            },
            "block_types": {
              "encryption_configuration": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "kms_key_name": {
                      "type": "string",
                      "required": true
                    }
                  }
                },
                "max_items": 1
              },
              "external_data_configuration": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "autodetect": {
                      "type": "bool",
                      "required": true
                    },
                    "compression": {
                      "type": "string",
                      "optional": true
                    },
                    "ignore_unknown_values": {
                      "type": "bool",
                      "optional": true
                    },
                    "max_bad_records": {
                      "type": "number",
                      "optional": true
                    },
                    "source_format": {
                      "type": "string",
                      "required": true
                    },
                    "source_uris": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "required": true
                    }
                  },
                  "block_types": {
                    "csv_options": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "allow_jagged_rows": {
                            "type": "bool",
                            "optional": true
                          },
                          "allow_quoted_newlines": {
                            "type": "bool",
                            "optional": true
                          },
                          "encoding": {
                            "type": "string",
                            "optional": true
                          },
                          "field_delimiter": {
                            "type": "string",
                            "optional": true
                          },
                          "quote": {
                            "type": "string",
                            "required": true
                          },
                          "skip_leading_rows": {
                            "type": "number",
                            "optional": true
                          }
                        }
                      },
                      "max_items": 1
                    },
                    "google_sheets_options": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "range": {
                            "type": "string",
                            "optional": true
                          },
                          "skip_leading_rows": {
                            "type": "number",
                            "optional": true
                          }
                        }
                      },
                      "max_items": 1
                    }
                  }
                },
                "max_items": 1
              },
              "time_partitioning": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "expiration_ms": {
                      "type": "number",
                      "optional": true
                    },
                    "field": {
                      "type": "string",
                      "optional": true
                    },
                    "require_partition_filter": {
                      "type": "bool",
                      "optional": true
                    },
                    "type": {
                      "type": "string",
                      "required": true
                    }
                  }
                },
                "max_items": 1
              },
              "view": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "query": {
                      "type": "string",
                      "required": true
                    },
                    "use_legacy_sql": {
                      "type": "bool",
                      "optional": true
                    }
                  }
                },
                "max_items": 1
              }
            }
          }
        },
        "google_bigtable_app_profile": {
          "version": 0,
          "block": {
            "attributes": {
              "app_profile_id": {
                "type": "string",
                "description": "The unique name of the app profile in the form '[_a-zA-Z0-9][-_.a-zA-Z0-9]*'.",
                "required": true
              },
              "description": {
                "type": "string",
                "description": "Long form description of the use case for this app profile.",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "ignore_warnings": {
                "type": "bool",
                "description": "If true, ignore safety checks when deleting/updating the app profile.",
                "optional": true
              },
              "instance": {
                "type": "string",
                "description": "The name of the instance to create the app profile within.",
                "optional": true
              },
              "multi_cluster_routing_use_any": {
                "type": "bool",
                "description": "If true, read/write requests are routed to the nearest cluster in the instance, and will fail over to the nearest cluster that is available\nin the event of transient errors or delays. Clusters in a region are considered equidistant. Choosing this option sacrifices read-your-writes\nconsistency to improve availability.",
                "optional": true
              },
              "name": {
                "type": "string",
                "description": "The unique name of the requested app profile. Values are of the form 'projects/<project>/instances/<instance>/appProfiles/<appProfileId>'.",
                "computed": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              }
            },
            "block_types": {
              "single_cluster_routing": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "allow_transactional_writes": {
                      "type": "bool",
                      "description": "If true, CheckAndMutateRow and ReadModifyWriteRow requests are allowed by this app profile.\nIt is unsafe to send these requests to the same table/row/column in multiple clusters.",
                      "optional": true
                    },
                    "cluster_id": {
                      "type": "string",
                      "description": "The cluster to which read/write requests should be routed.",
                      "required": true
                    }
                  }
                },
                "max_items": 1
              },
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "google_bigtable_gc_policy": {
          "version": 0,
          "block": {
            "attributes": {
              "column_family": {
                "type": "string",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "instance_name": {
                "type": "string",
                "required": true
              },
              "mode": {
                "type": "string",
                "optional": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "table": {
                "type": "string",
                "required": true
              }
            },
            "block_types": {
              "max_age": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "days": {
                      "type": "number",
                      "required": true
                    }
                  }
                }
              },
              "max_version": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "number": {
                      "type": "number",
                      "required": true
                    }
                  }
                }
              }
            }
          }
        },
        "google_bigtable_instance": {
          "version": 0,
          "block": {
            "attributes": {
              "display_name": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "instance_type": {
                "type": "string",
                "optional": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              }
            },
            "block_types": {
              "cluster": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "cluster_id": {
                      "type": "string",
                      "required": true
                    },
                    "num_nodes": {
                      "type": "number",
                      "optional": true,
                      "computed": true
                    },
                    "storage_type": {
                      "type": "string",
                      "optional": true
                    },
                    "zone": {
                      "type": "string",
                      "required": true
                    }
                  }
                }
              }
            }
          }
        },
        "google_bigtable_instance_iam_binding": {
          "version": 0,
          "block": {
            "attributes": {
              "etag": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "instance": {
                "type": "string",
                "required": true
              },
              "members": {
                "type": [
                  "set",
                  "string"
                ],
                "required": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "role": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "google_bigtable_instance_iam_member": {
          "version": 0,
          "block": {
            "attributes": {
              "etag": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "instance": {
                "type": "string",
                "required": true
              },
              "member": {
                "type": "string",
                "required": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "role": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "google_bigtable_instance_iam_policy": {
          "version": 0,
          "block": {
            "attributes": {
              "etag": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "instance": {
                "type": "string",
                "required": true
              },
              "policy_data": {
                "type": "string",
                "required": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              }
            }
          }
        },
        "google_bigtable_table": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "instance_name": {
                "type": "string",
                "required": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "split_keys": {
                "type": [
                  "list",
                  "string"
                ],
                "optional": true
              }
            },
            "block_types": {
              "column_family": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "family": {
                      "type": "string",
                      "required": true
                    }
                  }
                }
              }
            }
          }
        },
        "google_billing_account_iam_binding": {
          "version": 0,
          "block": {
            "attributes": {
              "billing_account_id": {
                "type": "string",
                "required": true
              },
              "etag": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "members": {
                "type": [
                  "set",
                  "string"
                ],
                "required": true
              },
              "role": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "google_billing_account_iam_member": {
          "version": 0,
          "block": {
            "attributes": {
              "billing_account_id": {
                "type": "string",
                "required": true
              },
              "etag": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "member": {
                "type": "string",
                "required": true
              },
              "role": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "google_billing_account_iam_policy": {
          "version": 0,
          "block": {
            "attributes": {
              "billing_account_id": {
                "type": "string",
                "required": true
              },
              "etag": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "policy_data": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "google_binary_authorization_attestor": {
          "version": 0,
          "block": {
            "attributes": {
              "description": {
                "type": "string",
                "description": "A descriptive comment. This field may be updated. The field may be\ndisplayed in chooser dialogs.",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "The resource name.",
                "required": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              }
            },
            "block_types": {
              "attestation_authority_note": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "delegation_service_account_email": {
                      "type": "string",
                      "description": "This field will contain the service account email address that\nthis Attestor will use as the principal when querying Container\nAnalysis. Attestor administrators must grant this service account\nthe IAM role needed to read attestations from the noteReference in\nContainer Analysis (containeranalysis.notes.occurrences.viewer).\nThis email address is fixed for the lifetime of the Attestor, but\ncallers should not make any other assumptions about the service\naccount email; future versions may use an email based on a\ndifferent naming pattern.",
                      "computed": true
                    },
                    "note_reference": {
                      "type": "string",
                      "description": "The resource name of a ATTESTATION_AUTHORITY Note, created by the\nuser. If the Note is in a different project from the Attestor, it\nshould be specified in the format 'projects/*/notes/*' (or the legacy\n'providers/*/notes/*'). This field may not be updated.\nAn attestation by this attestor is stored as a Container Analysis\nATTESTATION_AUTHORITY Occurrence that names a container image\nand that links to this Note.",
                      "required": true
                    }
                  },
                  "block_types": {
                    "public_keys": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "ascii_armored_pgp_public_key": {
                            "type": "string",
                            "description": "ASCII-armored representation of a PGP public key, as the\nentire output by the command\n'gpg --export --armor foo@example.com' (either LF or CRLF\nline endings). When using this field, id should be left\nblank. The BinAuthz API handlers will calculate the ID\nand fill it in automatically. BinAuthz computes this ID\nas the OpenPGP RFC4880 V4 fingerprint, represented as\nupper-case hex. If id is provided by the caller, it will\nbe overwritten by the API-calculated ID.",
                            "optional": true
                          },
                          "comment": {
                            "type": "string",
                            "description": "A descriptive comment. This field may be updated.",
                            "optional": true
                          },
                          "id": {
                            "type": "string",
                            "description": "The ID of this public key. Signatures verified by BinAuthz\nmust include the ID of the public key that can be used to\nverify them, and that ID must match the contents of this\nfield exactly. Additional restrictions on this field can\nbe imposed based on which public key type is encapsulated.\nSee the documentation on publicKey cases below for details.",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "block_types": {
                          "pkix_public_key": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "public_key_pem": {
                                  "type": "string",
                                  "description": "A PEM-encoded public key, as described in\n'https://tools.ietf.org/html/rfc7468#section-13'",
                                  "optional": true
                                },
                                "signature_algorithm": {
                                  "type": "string",
                                  "description": "The signature algorithm used to verify a message against\na signature using this key. These signature algorithm must\nmatch the structure and any object identifiers encoded in\npublicKeyPem (i.e. this algorithm must match that of the\npublic key).",
                                  "optional": true
                                }
                              }
                            },
                            "max_items": 1
                          }
                        }
                      }
                    }
                  }
                },
                "min_items": 1,
                "max_items": 1
              },
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "google_binary_authorization_attestor_iam_binding": {
          "version": 0,
          "block": {
            "attributes": {
              "attestor": {
                "type": "string",
                "required": true
              },
              "etag": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "members": {
                "type": [
                  "set",
                  "string"
                ],
                "required": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "role": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "google_binary_authorization_attestor_iam_member": {
          "version": 0,
          "block": {
            "attributes": {
              "attestor": {
                "type": "string",
                "required": true
              },
              "etag": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "member": {
                "type": "string",
                "required": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "role": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "google_binary_authorization_attestor_iam_policy": {
          "version": 0,
          "block": {
            "attributes": {
              "attestor": {
                "type": "string",
                "required": true
              },
              "etag": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "policy_data": {
                "type": "string",
                "required": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              }
            }
          }
        },
        "google_binary_authorization_policy": {
          "version": 0,
          "block": {
            "attributes": {
              "description": {
                "type": "string",
                "description": "A descriptive comment.",
                "optional": true
              },
              "global_policy_evaluation_mode": {
                "type": "string",
                "description": "Controls the evaluation of a Google-maintained global admission policy\nfor common system-level images. Images not covered by the global\npolicy will be subject to the project admission policy.",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              }
            },
            "block_types": {
              "admission_whitelist_patterns": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "name_pattern": {
                      "type": "string",
                      "description": "An image name pattern to whitelist, in the form\n'registry/path/to/image'. This supports a trailing * as a\nwildcard, but this is allowed only in text after the registry/\npart.",
                      "required": true
                    }
                  }
                }
              },
              "cluster_admission_rules": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "cluster": {
                      "type": "string",
                      "required": true
                    },
                    "enforcement_mode": {
                      "type": "string",
                      "description": "The action when a pod creation is denied by the admission rule.",
                      "required": true
                    },
                    "evaluation_mode": {
                      "type": "string",
                      "description": "How this admission rule will be evaluated.",
                      "required": true
                    },
                    "require_attestations_by": {
                      "type": [
                        "set",
                        "string"
                      ],
                      "description": "The resource names of the attestors that must attest to a\ncontainer image. If the attestor is in a different project from the\npolicy, it should be specified in the format 'projects/*/attestors/*'.\nEach attestor must exist before a policy can reference it. To add an\nattestor to a policy the principal issuing the policy change\nrequest must be able to read the attestor resource.\n\nNote: this field must be non-empty when the evaluation_mode field\nspecifies REQUIRE_ATTESTATION, otherwise it must be empty.",
                      "optional": true
                    }
                  }
                }
              },
              "default_admission_rule": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "enforcement_mode": {
                      "type": "string",
                      "description": "The action when a pod creation is denied by the admission rule.",
                      "required": true
                    },
                    "evaluation_mode": {
                      "type": "string",
                      "description": "How this admission rule will be evaluated.",
                      "required": true
                    },
                    "require_attestations_by": {
                      "type": [
                        "set",
                        "string"
                      ],
                      "description": "The resource names of the attestors that must attest to a\ncontainer image. If the attestor is in a different project from the\npolicy, it should be specified in the format 'projects/*/attestors/*'.\nEach attestor must exist before a policy can reference it. To add an\nattestor to a policy the principal issuing the policy change\nrequest must be able to read the attestor resource.\n\nNote: this field must be non-empty when the evaluation_mode field\nspecifies REQUIRE_ATTESTATION, otherwise it must be empty.",
                      "optional": true
                    }
                  }
                },
                "min_items": 1,
                "max_items": 1
              },
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "google_cloud_run_domain_mapping": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "location": {
                "type": "string",
                "description": "The location of the cloud run instance. eg us-central1",
                "required": true
              },
              "name": {
                "type": "string",
                "description": "Name should be a verified domain",
                "required": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "status": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "conditions": [
                        "list",
                        [
                          "object",
                          {
                            "message": "string",
                            "reason": "string",
                            "status": "string",
                            "type": "string"
                          }
                        ]
                      ],
                      "mapped_route_name": "string",
                      "observed_generation": "number",
                      "resource_records": [
                        "list",
                        [
                          "object",
                          {
                            "name": "string",
                            "rrdata": "string",
                            "type": "string"
                          }
                        ]
                      ]
                    }
                  ]
                ],
                "description": "The current status of the DomainMapping.",
                "computed": true
              }
            },
            "block_types": {
              "metadata": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "annotations": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description": "Annotations is a key value map stored with a resource that\nmay be set by external tools to store and retrieve arbitrary metadata. More\ninfo: http://kubernetes.io/docs/user-guide/annotations",
                      "optional": true,
                      "computed": true
                    },
                    "generation": {
                      "type": "number",
                      "description": "A sequence number representing a specific generation of the desired state.",
                      "computed": true
                    },
                    "labels": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description": "Map of string keys and values that can be used to organize and categorize\n(scope and select) objects. May match selectors of replication controllers\nand routes.\nMore info: http://kubernetes.io/docs/user-guide/labels",
                      "optional": true,
                      "computed": true
                    },
                    "namespace": {
                      "type": "string",
                      "description": "In Cloud Run the namespace must be equal to either the\nproject ID or project number.",
                      "required": true
                    },
                    "resource_version": {
                      "type": "string",
                      "description": "An opaque value that represents the internal version of this object that\ncan be used by clients to determine when objects have changed. May be used\nfor optimistic concurrency, change detection, and the watch operation on a\nresource or set of resources. They may only be valid for a\nparticular resource or set of resources.\n\nMore info:\nhttps://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency",
                      "computed": true
                    },
                    "self_link": {
                      "type": "string",
                      "description": "SelfLink is a URL representing this object.",
                      "computed": true
                    },
                    "uid": {
                      "type": "string",
                      "description": "UID is a unique id generated by the server on successful creation of a resource and is not\nallowed to change on PUT operations.\n\nMore info: http://kubernetes.io/docs/user-guide/identifiers#uids",
                      "computed": true
                    }
                  }
                },
                "min_items": 1,
                "max_items": 1
              },
              "spec": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "certificate_mode": {
                      "type": "string",
                      "description": "The mode of the certificate.",
                      "optional": true
                    },
                    "force_override": {
                      "type": "bool",
                      "description": "If set, the mapping will override any mapping set before this spec was set.\nIt is recommended that the user leaves this empty to receive an error\nwarning about a potential conflict and only set it once the respective UI\nhas given such a warning.",
                      "optional": true
                    },
                    "route_name": {
                      "type": "string",
                      "description": "The name of the Cloud Run Service that this DomainMapping applies to.\nThe route must exist.",
                      "required": true
                    }
                  }
                },
                "min_items": 1,
                "max_items": 1
              },
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "google_cloud_run_service": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "location": {
                "type": "string",
                "description": "The location of the cloud run instance. eg us-central1",
                "required": true
              },
              "name": {
                "type": "string",
                "description": "Name must be unique within a namespace, within a Cloud Run region.\nIs required when creating resources. Name is primarily intended\nfor creation idempotence and configuration definition. Cannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#names",
                "required": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "status": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "conditions": [
                        "list",
                        [
                          "object",
                          {
                            "message": "string",
                            "reason": "string",
                            "status": "string",
                            "type": "string"
                          }
                        ]
                      ],
                      "latest_created_revision_name": "string",
                      "latest_ready_revision_name": "string",
                      "observed_generation": "number",
                      "url": "string"
                    }
                  ]
                ],
                "description": "The current status of the Service.",
                "computed": true
              }
            },
            "block_types": {
              "metadata": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "annotations": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description": "Annotations is a key value map stored with a resource that\nmay be set by external tools to store and retrieve arbitrary metadata. More\ninfo: http://kubernetes.io/docs/user-guide/annotations",
                      "optional": true,
                      "computed": true
                    },
                    "generation": {
                      "type": "number",
                      "description": "A sequence number representing a specific generation of the desired state.",
                      "computed": true
                    },
                    "labels": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description": "Map of string keys and values that can be used to organize and categorize\n(scope and select) objects. May match selectors of replication controllers\nand routes.\nMore info: http://kubernetes.io/docs/user-guide/labels",
                      "optional": true,
                      "computed": true
                    },
                    "namespace": {
                      "type": "string",
                      "description": "In Cloud Run the namespace must be equal to either the\nproject ID or project number.",
                      "optional": true,
                      "computed": true
                    },
                    "resource_version": {
                      "type": "string",
                      "description": "An opaque value that represents the internal version of this object that\ncan be used by clients to determine when objects have changed. May be used\nfor optimistic concurrency, change detection, and the watch operation on a\nresource or set of resources. They may only be valid for a\nparticular resource or set of resources.\n\nMore info:\nhttps://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency",
                      "computed": true
                    },
                    "self_link": {
                      "type": "string",
                      "description": "SelfLink is a URL representing this object.",
                      "computed": true
                    },
                    "uid": {
                      "type": "string",
                      "description": "UID is a unique id generated by the server on successful creation of a resource and is not\nallowed to change on PUT operations.\n\nMore info: http://kubernetes.io/docs/user-guide/identifiers#uids",
                      "computed": true
                    }
                  }
                },
                "max_items": 1
              },
              "template": {
                "nesting_mode": "list",
                "block": {
                  "block_types": {
                    "metadata": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "annotations": {
                            "type": [
                              "map",
                              "string"
                            ],
                            "description": "Annotations is a key value map stored with a resource that\nmay be set by external tools to store and retrieve arbitrary metadata. More\ninfo: http://kubernetes.io/docs/user-guide/annotations",
                            "optional": true,
                            "computed": true
                          },
                          "generation": {
                            "type": "number",
                            "description": "A sequence number representing a specific generation of the desired state.",
                            "computed": true
                          },
                          "labels": {
                            "type": [
                              "map",
                              "string"
                            ],
                            "description": "Map of string keys and values that can be used to organize and categorize\n(scope and select) objects. May match selectors of replication controllers\nand routes.\nMore info: http://kubernetes.io/docs/user-guide/labels",
                            "optional": true
                          },
                          "name": {
                            "type": "string",
                            "description": "Name must be unique within a namespace, within a Cloud Run region.\nIs required when creating resources. Name is primarily intended\nfor creation idempotence and configuration definition. Cannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#names",
                            "optional": true,
                            "computed": true
                          },
                          "namespace": {
                            "type": "string",
                            "description": "In Cloud Run the namespace must be equal to either the\nproject ID or project number. It will default to the resource's project.",
                            "optional": true,
                            "computed": true
                          },
                          "resource_version": {
                            "type": "string",
                            "description": "An opaque value that represents the internal version of this object that\ncan be used by clients to determine when objects have changed. May be used\nfor optimistic concurrency, change detection, and the watch operation on a\nresource or set of resources. They may only be valid for a\nparticular resource or set of resources.\n\nMore info:\nhttps://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency",
                            "computed": true
                          },
                          "self_link": {
                            "type": "string",
                            "description": "SelfLink is a URL representing this object.",
                            "computed": true
                          },
                          "uid": {
                            "type": "string",
                            "description": "UID is a unique id generated by the server on successful creation of a resource and is not\nallowed to change on PUT operations.\n\nMore info: http://kubernetes.io/docs/user-guide/identifiers#uids",
                            "computed": true
                          }
                        }
                      },
                      "max_items": 1
                    },
                    "spec": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "container_concurrency": {
                            "type": "number",
                            "description": "ContainerConcurrency specifies the maximum allowed in-flight (concurrent)\nrequests per container of the Revision. Values are:\n- '0' thread-safe, the system should manage the max concurrency. This is\n    the default value.\n- '1' not-thread-safe. Single concurrency\n- '2-N' thread-safe, max concurrency of N",
                            "optional": true,
                            "computed": true
                          },
                          "service_account_name": {
                            "type": "string",
                            "description": "Email address of the IAM service account associated with the revision of the\nservice. The service account represents the identity of the running revision,\nand determines what permissions the revision has. If not provided, the revision\nwill use the project's default service account.",
                            "optional": true
                          },
                          "serving_state": {
                            "type": "string",
                            "description": "ServingState holds a value describing the state the resources\nare in for this Revision.\nIt is expected\nthat the system will manipulate this based on routability and load.",
                            "computed": true
                          }
                        },
                        "block_types": {
                          "containers": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "args": {
                                  "type": [
                                    "list",
                                    "string"
                                  ],
                                  "description": "Arguments to the entrypoint.\nThe docker image's CMD is used if this is not provided.\nVariable references $(VAR_NAME) are expanded using the container's\nenvironment. If a variable cannot be resolved, the reference in the input\nstring will be unchanged. The $(VAR_NAME) syntax can be escaped with a\ndouble $$, ie: $$(VAR_NAME). Escaped references will never be expanded,\nregardless of whether the variable exists or not.\nMore info:\nhttps://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell",
                                  "optional": true
                                },
                                "command": {
                                  "type": [
                                    "list",
                                    "string"
                                  ],
                                  "description": "Entrypoint array. Not executed within a shell.\nThe docker image's ENTRYPOINT is used if this is not provided.\nVariable references $(VAR_NAME) are expanded using the container's\nenvironment. If a variable cannot be resolved, the reference in the input\nstring will be unchanged. The $(VAR_NAME) syntax can be escaped with a\ndouble $$, ie: $$(VAR_NAME). Escaped references will never be expanded,\nregardless of whether the variable exists or not.\nMore info:\nhttps://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell",
                                  "optional": true
                                },
                                "image": {
                                  "type": "string",
                                  "description": "Docker image name. This is most often a reference to a container located\nin the container registry, such as gcr.io/cloudrun/hello\nMore info: https://kubernetes.io/docs/concepts/containers/images",
                                  "required": true
                                },
                                "working_dir": {
                                  "type": "string",
                                  "description": "Container's working directory.\nIf not specified, the container runtime's default will be used, which\nmight be configured in the container image.",
                                  "optional": true
                                }
                              },
                              "block_types": {
                                "env": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "name": {
                                        "type": "string",
                                        "description": "Name of the environment variable.",
                                        "optional": true
                                      },
                                      "value": {
                                        "type": "string",
                                        "description": "Variable references $(VAR_NAME) are expanded\nusing the previous defined environment variables in the container and\nany route environment variables. If a variable cannot be resolved,\nthe reference in the input string will be unchanged. The $(VAR_NAME)\nsyntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped\nreferences will never be expanded, regardless of whether the variable\nexists or not.\nDefaults to \"\".",
                                        "optional": true
                                      }
                                    }
                                  }
                                },
                                "env_from": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "prefix": {
                                        "type": "string",
                                        "description": "An optional identifier to prepend to each key in the ConfigMap.",
                                        "optional": true
                                      }
                                    },
                                    "block_types": {
                                      "config_map_ref": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "optional": {
                                              "type": "bool",
                                              "description": "Specify whether the ConfigMap must be defined",
                                              "optional": true
                                            }
                                          },
                                          "block_types": {
                                            "local_object_reference": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "name": {
                                                    "type": "string",
                                                    "description": "Name of the referent.\nMore info:\nhttps://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                    "required": true
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "secret_ref": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "optional": {
                                              "type": "bool",
                                              "description": "Specify whether the Secret must be defined",
                                              "optional": true
                                            }
                                          },
                                          "block_types": {
                                            "local_object_reference": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "name": {
                                                    "type": "string",
                                                    "description": "Name of the referent.\nMore info:\nhttps://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                    "required": true
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      }
                                    }
                                  }
                                },
                                "resources": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "limits": {
                                        "type": [
                                          "map",
                                          "string"
                                        ],
                                        "description": "Limits describes the maximum amount of compute resources allowed.\nThe values of the map is string form of the 'quantity' k8s type:\nhttps://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apimachinery/pkg/api/resource/quantity.go",
                                        "optional": true,
                                        "computed": true
                                      },
                                      "requests": {
                                        "type": [
                                          "map",
                                          "string"
                                        ],
                                        "description": "Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is\nexplicitly specified, otherwise to an implementation-defined value.\nThe values of the map is string form of the 'quantity' k8s type:\nhttps://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apimachinery/pkg/api/resource/quantity.go",
                                        "optional": true
                                      }
                                    }
                                  },
                                  "max_items": 1
                                }
                              }
                            }
                          }
                        }
                      },
                      "max_items": 1
                    }
                  }
                },
                "max_items": 1
              },
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              },
              "traffic": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "latest_revision": {
                      "type": "bool",
                      "description": "LatestRevision may be optionally provided to indicate that the latest ready\nRevision of the Configuration should be used for this traffic target. When\nprovided LatestRevision must be true if RevisionName is empty; it must be\nfalse when RevisionName is non-empty.",
                      "optional": true
                    },
                    "percent": {
                      "type": "number",
                      "description": "Percent specifies percent of the traffic to this Revision or Configuration.",
                      "required": true
                    },
                    "revision_name": {
                      "type": "string",
                      "description": "RevisionName of a specific revision to which to send this portion of traffic.",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "google_cloud_run_service_iam_binding": {
          "version": 0,
          "block": {
            "attributes": {
              "etag": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "location": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "members": {
                "type": [
                  "set",
                  "string"
                ],
                "required": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "role": {
                "type": "string",
                "required": true
              },
              "service": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "google_cloud_run_service_iam_member": {
          "version": 0,
          "block": {
            "attributes": {
              "etag": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "location": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "member": {
                "type": "string",
                "required": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "role": {
                "type": "string",
                "required": true
              },
              "service": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "google_cloud_run_service_iam_policy": {
          "version": 0,
          "block": {
            "attributes": {
              "etag": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "location": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "policy_data": {
                "type": "string",
                "required": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "service": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "google_cloud_scheduler_job": {
          "version": 0,
          "block": {
            "attributes": {
              "attempt_deadline": {
                "type": "string",
                "description": "The deadline for job attempts. If the request handler does not respond by this deadline then the request is\ncancelled and the attempt is marked as a DEADLINE_EXCEEDED failure. The failed attempt can be viewed in\nexecution logs. Cloud Scheduler will retry the job according to the RetryConfig.\nThe allowed duration for this deadline is:\n* For HTTP targets, between 15 seconds and 30 minutes.\n* For App Engine HTTP targets, between 15 seconds and 24 hours.\nA duration in seconds with up to nine fractional digits, terminated by 's'. Example: \"3.5s\"",
                "optional": true
              },
              "description": {
                "type": "string",
                "description": "A human-readable description for the job. \nThis string must not contain more than 500 characters.",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "The name of the job.",
                "required": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "region": {
                "type": "string",
                "description": "Region where the scheduler job resides",
                "optional": true,
                "computed": true
              },
              "schedule": {
                "type": "string",
                "description": "Describes the schedule on which the job will be executed.",
                "optional": true
              },
              "time_zone": {
                "type": "string",
                "description": "Specifies the time zone to be used in interpreting schedule.\nThe value of this field must be a time zone name from the tz database.",
                "optional": true
              }
            },
            "block_types": {
              "app_engine_http_target": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "body": {
                      "type": "string",
                      "description": "HTTP request body. \nA request body is allowed only if the HTTP method is POST or PUT. \nIt will result in invalid argument error to set a body on a job with an incompatible HttpMethod.",
                      "optional": true
                    },
                    "headers": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description": "HTTP request headers.\nThis map contains the header field names and values. \nHeaders can be set when the job is created.",
                      "optional": true
                    },
                    "http_method": {
                      "type": "string",
                      "description": "Which HTTP method to use for the request.",
                      "optional": true
                    },
                    "relative_uri": {
                      "type": "string",
                      "description": "The relative URI.\nThe relative URL must begin with \"/\" and must be a valid HTTP relative URL. \nIt can contain a path, query string arguments, and \\# fragments. \nIf the relative URL is empty, then the root path \"/\" will be used. \nNo spaces are allowed, and the maximum length allowed is 2083 characters",
                      "required": true
                    }
                  },
                  "block_types": {
                    "app_engine_routing": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "instance": {
                            "type": "string",
                            "description": "App instance.\nBy default, the job is sent to an instance which is available when the job is attempted.",
                            "optional": true
                          },
                          "service": {
                            "type": "string",
                            "description": "App service.\nBy default, the job is sent to the service which is the default service when the job is attempted.",
                            "optional": true
                          },
                          "version": {
                            "type": "string",
                            "description": "App version.\nBy default, the job is sent to the version which is the default version when the job is attempted.",
                            "optional": true
                          }
                        }
                      },
                      "max_items": 1
                    }
                  }
                },
                "max_items": 1
              },
              "http_target": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "body": {
                      "type": "string",
                      "description": "HTTP request body. \nA request body is allowed only if the HTTP method is POST, PUT, or PATCH. \nIt is an error to set body on a job with an incompatible HttpMethod.",
                      "optional": true
                    },
                    "headers": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description": "This map contains the header field names and values. \nRepeated headers are not supported, but a header value can contain commas.",
                      "optional": true
                    },
                    "http_method": {
                      "type": "string",
                      "description": "Which HTTP method to use for the request.",
                      "optional": true
                    },
                    "uri": {
                      "type": "string",
                      "description": "The full URI path that the request will be sent to.",
                      "required": true
                    }
                  },
                  "block_types": {
                    "oauth_token": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "scope": {
                            "type": "string",
                            "description": "OAuth scope to be used for generating OAuth access token. If not specified,\n\"https://www.googleapis.com/auth/cloud-platform\" will be used.",
                            "optional": true
                          },
                          "service_account_email": {
                            "type": "string",
                            "description": "Service account email to be used for generating OAuth token.\nThe service account must be within the same project as the job.",
                            "required": true
                          }
                        }
                      },
                      "max_items": 1
                    },
                    "oidc_token": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "audience": {
                            "type": "string",
                            "description": "Audience to be used when generating OIDC token. If not specified,\nthe URI specified in target will be used.",
                            "optional": true
                          },
                          "service_account_email": {
                            "type": "string",
                            "description": "Service account email to be used for generating OAuth token.\nThe service account must be within the same project as the job.",
                            "required": true
                          }
                        }
                      },
                      "max_items": 1
                    }
                  }
                },
                "max_items": 1
              },
              "pubsub_target": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "attributes": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description": "Attributes for PubsubMessage.\nPubsub message must contain either non-empty data, or at least one attribute.",
                      "optional": true
                    },
                    "data": {
                      "type": "string",
                      "description": "The message payload for PubsubMessage.\nPubsub message must contain either non-empty data, or at least one attribute.",
                      "optional": true
                    },
                    "topic_name": {
                      "type": "string",
                      "description": "The full resource name for the Cloud Pub/Sub topic to which\nmessages will be published when a job is delivered. ~>**NOTE**:\nThe topic name must be in the same format as required by PubSub's\nPublishRequest.name, e.g. 'projects/my-project/topics/my-topic'.",
                      "required": true
                    }
                  }
                },
                "max_items": 1
              },
              "retry_config": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "max_backoff_duration": {
                      "type": "string",
                      "description": "The maximum amount of time to wait before retrying a job after it fails.\nA duration in seconds with up to nine fractional digits, terminated by 's'.",
                      "optional": true
                    },
                    "max_doublings": {
                      "type": "number",
                      "description": "The time between retries will double maxDoublings times.\nA job's retry interval starts at minBackoffDuration, \nthen doubles maxDoublings times, then increases linearly, \nand finally retries retries at intervals of maxBackoffDuration up to retryCount times.",
                      "optional": true
                    },
                    "max_retry_duration": {
                      "type": "string",
                      "description": "The time limit for retrying a failed job, measured from time when an execution was first attempted. \nIf specified with retryCount, the job will be retried until both limits are reached.\nA duration in seconds with up to nine fractional digits, terminated by 's'.",
                      "optional": true
                    },
                    "min_backoff_duration": {
                      "type": "string",
                      "description": "The minimum amount of time to wait before retrying a job after it fails.\nA duration in seconds with up to nine fractional digits, terminated by 's'.",
                      "optional": true
                    },
                    "retry_count": {
                      "type": "number",
                      "description": "The number of attempts that the system will make to run a \njob using the exponential backoff procedure described by maxDoublings.\nValues greater than 5 and negative values are not allowed.",
                      "optional": true
                    }
                  }
                },
                "max_items": 1
              },
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "google_cloud_tasks_queue": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "location": {
                "type": "string",
                "description": "The location of the queue",
                "required": true
              },
              "name": {
                "type": "string",
                "description": "The queue name.",
                "optional": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              }
            },
            "block_types": {
              "app_engine_routing_override": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "host": {
                      "type": "string",
                      "description": "The host that the task is sent to.",
                      "computed": true
                    },
                    "instance": {
                      "type": "string",
                      "description": "App instance.\n\nBy default, the task is sent to an instance which is available when the task is attempted.",
                      "optional": true
                    },
                    "service": {
                      "type": "string",
                      "description": "App service.\n\nBy default, the task is sent to the service which is the default service when the task is attempted.",
                      "optional": true
                    },
                    "version": {
                      "type": "string",
                      "description": "App version.\n\nBy default, the task is sent to the version which is the default version when the task is attempted.",
                      "optional": true
                    }
                  }
                },
                "max_items": 1
              },
              "rate_limits": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "max_burst_size": {
                      "type": "number",
                      "description": "The max burst size.\n\nMax burst size limits how fast tasks in queue are processed when many tasks are\nin the queue and the rate is high. This field allows the queue to have a high\nrate so processing starts shortly after a task is enqueued, but still limits\nresource usage when many tasks are enqueued in a short period of time.",
                      "computed": true
                    },
                    "max_concurrent_dispatches": {
                      "type": "number",
                      "description": "The maximum number of concurrent tasks that Cloud Tasks allows to\nbe dispatched for this queue. After this threshold has been\nreached, Cloud Tasks stops dispatching tasks until the number of\nconcurrent requests decreases.",
                      "optional": true,
                      "computed": true
                    },
                    "max_dispatches_per_second": {
                      "type": "number",
                      "description": "The maximum rate at which tasks are dispatched from this queue.\n\nIf unspecified when the queue is created, Cloud Tasks will pick the default.",
                      "optional": true,
                      "computed": true
                    }
                  }
                },
                "max_items": 1
              },
              "retry_config": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "max_attempts": {
                      "type": "number",
                      "description": "Number of attempts per task.\n\nCloud Tasks will attempt the task maxAttempts times (that is, if\nthe first attempt fails, then there will be maxAttempts - 1\nretries). Must be >= -1.\n\nIf unspecified when the queue is created, Cloud Tasks will pick\nthe default.\n\n-1 indicates unlimited attempts.",
                      "optional": true,
                      "computed": true
                    },
                    "max_backoff": {
                      "type": "string",
                      "description": "A task will be scheduled for retry between minBackoff and\nmaxBackoff duration after it fails, if the queue's RetryConfig\nspecifies that the task should be retried.",
                      "optional": true,
                      "computed": true
                    },
                    "max_doublings": {
                      "type": "number",
                      "description": "The time between retries will double maxDoublings times.\n\nA task's retry interval starts at minBackoff, then doubles maxDoublings times,\nthen increases linearly, and finally retries retries at intervals of maxBackoff\nup to maxAttempts times.",
                      "optional": true,
                      "computed": true
                    },
                    "max_retry_duration": {
                      "type": "string",
                      "description": "If positive, maxRetryDuration specifies the time limit for\nretrying a failed task, measured from when the task was first\nattempted. Once maxRetryDuration time has passed and the task has\nbeen attempted maxAttempts times, no further attempts will be\nmade and the task will be deleted.\n\nIf zero, then the task age is unlimited.",
                      "optional": true,
                      "computed": true
                    },
                    "min_backoff": {
                      "type": "string",
                      "description": "A task will be scheduled for retry between minBackoff and\nmaxBackoff duration after it fails, if the queue's RetryConfig\nspecifies that the task should be retried.",
                      "optional": true,
                      "computed": true
                    }
                  }
                },
                "max_items": 1
              },
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "google_cloudbuild_trigger": {
          "version": 1,
          "block": {
            "attributes": {
              "create_time": {
                "type": "string",
                "description": "Time when the trigger was created.",
                "computed": true
              },
              "description": {
                "type": "string",
                "description": "Human-readable description of the trigger.",
                "optional": true
              },
              "disabled": {
                "type": "bool",
                "description": "Whether the trigger is disabled or not. If true, the trigger will never result in a build.",
                "optional": true
              },
              "filename": {
                "type": "string",
                "description": "Path, from the source root, to a file whose contents is used for the template. Either a filename or build template must be provided.",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "ignored_files": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "ignoredFiles and includedFiles are file glob matches using https://golang.org/pkg/path/filepath/#Match\nextended with support for '**'.\n\nIf ignoredFiles and changed files are both empty, then they are not\nused to determine whether or not to trigger a build.\n\nIf ignoredFiles is not empty, then we ignore any files that match any\nof the ignored_file globs. If the change has no files that are outside\nof the ignoredFiles globs, then we do not trigger a build.",
                "optional": true
              },
              "included_files": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "ignoredFiles and includedFiles are file glob matches using http://godoc/pkg/path/filepath#Match\nextended with support for '**'.\n\nIf any of the files altered in the commit pass the ignoredFiles filter\nand includedFiles is empty, then as far as this filter is concerned, we\nshould trigger the build.\n\nIf any of the files altered in the commit pass the ignoredFiles filter\nand includedFiles is not empty, then we make sure that at least one of\nthose files matches a includedFiles glob. If not, then we do not trigger\na build.",
                "optional": true
              },
              "name": {
                "type": "string",
                "description": "Name of the trigger. Must be unique within the project.",
                "optional": true,
                "computed": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "substitutions": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "Substitutions data for Build resource.",
                "optional": true
              },
              "trigger_id": {
                "type": "string",
                "description": "The unique identifier for the trigger.",
                "computed": true
              }
            },
            "block_types": {
              "build": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "images": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "A list of images to be pushed upon the successful completion of all build steps.\nThe images are pushed using the builder service account's credentials.\nThe digests of the pushed images will be stored in the Build resource's results field.\nIf any of the images fail to be pushed, the build status is marked FAILURE.",
                      "optional": true
                    },
                    "tags": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "Tags for annotation of a Build. These are not docker tags.",
                      "optional": true
                    },
                    "timeout": {
                      "type": "string",
                      "description": "Amount of time that this build should be allowed to run, to second granularity. \nIf this amount of time elapses, work on the build will cease and the build status will be TIMEOUT.\nThis timeout must be equal to or greater than the sum of the timeouts for build steps within the build.\nThe expected format is the number of seconds followed by s.\nDefault time is ten minutes (600s).",
                      "optional": true
                    }
                  },
                  "block_types": {
                    "step": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "args": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description": "A list of arguments that will be presented to the step when it is started.\n\nIf the image used to run the step's container has an entrypoint, the args\nare used as arguments to that entrypoint. If the image does not define an\nentrypoint, the first element in args is used as the entrypoint, and the\nremainder will be used as arguments.",
                            "optional": true
                          },
                          "dir": {
                            "type": "string",
                            "description": "Working directory to use when running this step's container.\n\nIf this value is a relative path, it is relative to the build's working\ndirectory. If this value is absolute, it may be outside the build's working\ndirectory, in which case the contents of the path may not be persisted\nacross build step executions, unless a 'volume' for that path is specified.\n\nIf the build specifies a 'RepoSource' with 'dir' and a step with a\n'dir',\nwhich specifies an absolute path, the 'RepoSource' 'dir' is ignored\nfor the step's execution.",
                            "optional": true
                          },
                          "entrypoint": {
                            "type": "string",
                            "description": "Entrypoint to be used instead of the build step image's\ndefault entrypoint.\nIf unset, the image's default entrypoint is used",
                            "optional": true
                          },
                          "env": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description": "A list of environment variable definitions to be used when\nrunning a step.\n\nThe elements are of the form \"KEY=VALUE\" for the environment variable\n\"KEY\" being given the value \"VALUE\".",
                            "optional": true
                          },
                          "id": {
                            "type": "string",
                            "description": "Unique identifier for this build step, used in 'wait_for' to\nreference this build step as a dependency.",
                            "optional": true
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the container image that will run this particular build step.\n\nIf the image is available in the host's Docker daemon's cache, it will be\nrun directly. If not, the host will attempt to pull the image first, using\nthe builder service account's credentials if necessary.\n\nThe Docker daemon's cache will already have the latest versions of all of\nthe officially supported build steps (https://github.com/GoogleCloudPlatform/cloud-builders).\nThe Docker daemon will also have cached many of the layers for some popular\nimages, like \"ubuntu\", \"debian\", but they will be refreshed at the time\nyou attempt to use them.\n\nIf you built an image in a previous build step, it will be stored in the\nhost's Docker daemon's cache and is available to use as the name for a\nlater build step.",
                            "required": true
                          },
                          "secret_env": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description": "A list of environment variables which are encrypted using\na Cloud Key\nManagement Service crypto key. These values must be specified in\nthe build's 'Secret'.",
                            "optional": true
                          },
                          "timeout": {
                            "type": "string",
                            "description": "Time limit for executing this build step. If not defined,\nthe step has no\ntime limit and will be allowed to continue to run until either it\ncompletes or the build itself times out.",
                            "optional": true
                          },
                          "timing": {
                            "type": "string",
                            "description": "Output only. Stores timing information for executing this\nbuild step.",
                            "optional": true
                          },
                          "wait_for": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description": "The ID(s) of the step(s) that this build step depends on.\n\nThis build step will not start until all the build steps in 'wait_for'\nhave completed successfully. If 'wait_for' is empty, this build step\nwill start when all previous build steps in the 'Build.Steps' list\nhave completed successfully.",
                            "optional": true
                          }
                        },
                        "block_types": {
                          "volumes": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "name": {
                                  "type": "string",
                                  "description": "Name of the volume to mount.\n\nVolume names must be unique per build step and must be valid names for\nDocker volumes. Each named volume must be used by at least two build steps.",
                                  "required": true
                                },
                                "path": {
                                  "type": "string",
                                  "description": "Path at which to mount the volume.\n\nPaths must be absolute and cannot conflict with other volume paths on\nthe same build step or with certain reserved volume paths.",
                                  "required": true
                                }
                              }
                            }
                          }
                        }
                      },
                      "min_items": 1
                    }
                  }
                },
                "max_items": 1
              },
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              },
              "trigger_template": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "branch_name": {
                      "type": "string",
                      "description": "Name of the branch to build. Exactly one a of branch name, tag, or commit SHA must be provided.\nThis field is a regular expression.",
                      "optional": true
                    },
                    "commit_sha": {
                      "type": "string",
                      "description": "Explicit commit SHA to build. Exactly one of a branch name, tag, or commit SHA must be provided.",
                      "optional": true
                    },
                    "dir": {
                      "type": "string",
                      "description": "Directory, relative to the source root, in which to run the build.\n\nThis must be a relative path. If a step's dir is specified and\nis an absolute path, this value is ignored for that step's\nexecution.",
                      "optional": true
                    },
                    "project_id": {
                      "type": "string",
                      "description": "ID of the project that owns the Cloud Source Repository. If\nomitted, the project ID requesting the build is assumed.",
                      "optional": true,
                      "computed": true
                    },
                    "repo_name": {
                      "type": "string",
                      "description": "Name of the Cloud Source Repository. If omitted, the name \"default\" is assumed.",
                      "optional": true
                    },
                    "tag_name": {
                      "type": "string",
                      "description": "Name of the tag to build. Exactly one of a branch name, tag, or commit SHA must be provided.\nThis field is a regular expression.",
                      "optional": true
                    }
                  }
                },
                "max_items": 1
              }
            }
          }
        },
        "google_cloudfunctions_function": {
          "version": 0,
          "block": {
            "attributes": {
              "available_memory_mb": {
                "type": "number",
                "optional": true
              },
              "description": {
                "type": "string",
                "optional": true
              },
              "entry_point": {
                "type": "string",
                "optional": true
              },
              "environment_variables": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              },
              "https_trigger_url": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "labels": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              },
              "max_instances": {
                "type": "number",
                "optional": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "region": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "runtime": {
                "type": "string",
                "required": true
              },
              "service_account_email": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "source_archive_bucket": {
                "type": "string",
                "optional": true
              },
              "source_archive_object": {
                "type": "string",
                "optional": true
              },
              "timeout": {
                "type": "number",
                "optional": true
              },
              "trigger_http": {
                "type": "bool",
                "optional": true
              },
              "vpc_connector": {
                "type": "string",
                "optional": true
              }
            },
            "block_types": {
              "event_trigger": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "event_type": {
                      "type": "string",
                      "required": true
                    },
                    "resource": {
                      "type": "string",
                      "required": true
                    }
                  },
                  "block_types": {
                    "failure_policy": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "retry": {
                            "type": "bool",
                            "required": true
                          }
                        }
                      },
                      "max_items": 1
                    }
                  }
                },
                "max_items": 1
              },
              "source_repository": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "deployed_url": {
                      "type": "string",
                      "computed": true
                    },
                    "url": {
                      "type": "string",
                      "required": true
                    }
                  }
                },
                "max_items": 1
              },
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    },
                    "read": {
                      "type": "string",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "google_cloudfunctions_function_iam_binding": {
          "version": 0,
          "block": {
            "attributes": {
              "cloud_function": {
                "type": "string",
                "required": true
              },
              "etag": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "members": {
                "type": [
                  "set",
                  "string"
                ],
                "required": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "region": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "role": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "google_cloudfunctions_function_iam_member": {
          "version": 0,
          "block": {
            "attributes": {
              "cloud_function": {
                "type": "string",
                "required": true
              },
              "etag": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "member": {
                "type": "string",
                "required": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "region": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "role": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "google_cloudfunctions_function_iam_policy": {
          "version": 0,
          "block": {
            "attributes": {
              "cloud_function": {
                "type": "string",
                "required": true
              },
              "etag": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "policy_data": {
                "type": "string",
                "required": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "region": {
                "type": "string",
                "optional": true,
                "computed": true
              }
            }
          }
        },
        "google_cloudiot_registry": {
          "version": 0,
          "block": {
            "attributes": {
              "event_notification_config": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true,
                "computed": true
              },
              "http_config": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "log_level": {
                "type": "string",
                "optional": true
              },
              "mqtt_config": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "region": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "state_notification_config": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              }
            },
            "block_types": {
              "credentials": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "public_key_certificate": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "required": true
                    }
                  }
                },
                "max_items": 10
              },
              "event_notification_configs": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "pubsub_topic_name": {
                      "type": "string",
                      "required": true
                    },
                    "subfolder_matches": {
                      "type": "string",
                      "optional": true
                    }
                  }
                },
                "max_items": 10
              }
            }
          }
        },
        "google_composer_environment": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "labels": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "region": {
                "type": "string",
                "optional": true
              }
            },
            "block_types": {
              "config": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "airflow_uri": {
                      "type": "string",
                      "computed": true
                    },
                    "dag_gcs_prefix": {
                      "type": "string",
                      "computed": true
                    },
                    "gke_cluster": {
                      "type": "string",
                      "computed": true
                    },
                    "node_count": {
                      "type": "number",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "block_types": {
                    "node_config": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "disk_size_gb": {
                            "type": "number",
                            "optional": true,
                            "computed": true
                          },
                          "ip_allocation_policy": {
                            "type": [
                              "list",
                              [
                                "object",
                                {
                                  "cluster_ipv4_cidr_block": "string",
                                  "cluster_secondary_range_name": "string",
                                  "services_ipv4_cidr_block": "string",
                                  "services_secondary_range_name": "string",
                                  "use_ip_aliases": "bool"
                                }
                              ]
                            ],
                            "optional": true,
                            "computed": true
                          },
                          "machine_type": {
                            "type": "string",
                            "optional": true,
                            "computed": true
                          },
                          "network": {
                            "type": "string",
                            "optional": true,
                            "computed": true
                          },
                          "oauth_scopes": {
                            "type": [
                              "set",
                              "string"
                            ],
                            "optional": true,
                            "computed": true
                          },
                          "service_account": {
                            "type": "string",
                            "optional": true,
                            "computed": true
                          },
                          "subnetwork": {
                            "type": "string",
                            "optional": true
                          },
                          "tags": {
                            "type": [
                              "set",
                              "string"
                            ],
                            "optional": true
                          },
                          "zone": {
                            "type": "string",
                            "required": true
                          }
                        }
                      },
                      "max_items": 1
                    },
                    "private_environment_config": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "enable_private_endpoint": {
                            "type": "bool",
                            "optional": true
                          },
                          "master_ipv4_cidr_block": {
                            "type": "string",
                            "optional": true
                          }
                        }
                      },
                      "max_items": 1
                    },
                    "software_config": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "airflow_config_overrides": {
                            "type": [
                              "map",
                              "string"
                            ],
                            "optional": true
                          },
                          "env_variables": {
                            "type": [
                              "map",
                              "string"
                            ],
                            "optional": true
                          },
                          "image_version": {
                            "type": "string",
                            "optional": true,
                            "computed": true
                          },
                          "pypi_packages": {
                            "type": [
                              "map",
                              "string"
                            ],
                            "optional": true
                          },
                          "python_version": {
                            "type": "string",
                            "optional": true,
                            "computed": true
                          }
                        }
                      },
                      "max_items": 1
                    }
                  }
                },
                "max_items": 1
              },
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "google_compute_address": {
          "version": 0,
          "block": {
            "attributes": {
              "address": {
                "type": "string",
                "description": "The static external IP address represented by this resource. Only\nIPv4 is supported. An address may only be specified for INTERNAL\naddress types. The IP address must be inside the specified subnetwork,\nif any.",
                "optional": true,
                "computed": true
              },
              "address_type": {
                "type": "string",
                "description": "The type of address to reserve, either INTERNAL or EXTERNAL.\nIf unspecified, defaults to EXTERNAL.",
                "optional": true
              },
              "creation_timestamp": {
                "type": "string",
                "description": "Creation timestamp in RFC3339 text format.",
                "computed": true
              },
              "description": {
                "type": "string",
                "description": "An optional description of this resource.",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "Name of the resource. The name must be 1-63 characters long, and\ncomply with RFC1035. Specifically, the name must be 1-63 characters\nlong and match the regular expression '[a-z]([-a-z0-9]*[a-z0-9])?'\nwhich means the first character must be a lowercase letter, and all\nfollowing characters must be a dash, lowercase letter, or digit,\nexcept the last character, which cannot be a dash.",
                "required": true
              },
              "network_tier": {
                "type": "string",
                "description": "The networking tier used for configuring this address. This field can\ntake the following values: PREMIUM or STANDARD. If this field is not\nspecified, it is assumed to be PREMIUM.",
                "optional": true,
                "computed": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "purpose": {
                "type": "string",
                "description": "The purpose of this resource, which can be one of the following values:\n\n- GCE_ENDPOINT for addresses that are used by VM instances, alias IP ranges, internal load balancers, and similar resources.\n\nThis should only be set when using an Internal address.",
                "optional": true,
                "computed": true
              },
              "region": {
                "type": "string",
                "description": "The Region in which the created address should reside.\nIf it is not provided, the provider region is used.",
                "optional": true,
                "computed": true
              },
              "self_link": {
                "type": "string",
                "computed": true
              },
              "subnetwork": {
                "type": "string",
                "description": "The URL of the subnetwork in which to reserve the address. If an IP\naddress is specified, it must be within the subnetwork's IP range.\nThis field can only be used with INTERNAL type with\nGCE_ENDPOINT/DNS_RESOLVER purposes.",
                "optional": true,
                "computed": true
              },
              "users": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "The URLs of the resources that are using this address.",
                "computed": true
              }
            },
            "block_types": {
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "google_compute_attached_disk": {
          "version": 0,
          "block": {
            "attributes": {
              "device_name": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "disk": {
                "type": "string",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "instance": {
                "type": "string",
                "required": true
              },
              "mode": {
                "type": "string",
                "optional": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "zone": {
                "type": "string",
                "optional": true,
                "computed": true
              }
            },
            "block_types": {
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "google_compute_autoscaler": {
          "version": 0,
          "block": {
            "attributes": {
              "creation_timestamp": {
                "type": "string",
                "description": "Creation timestamp in RFC3339 text format.",
                "computed": true
              },
              "description": {
                "type": "string",
                "description": "An optional description of this resource.",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "Name of the resource. The name must be 1-63 characters long and match\nthe regular expression '[a-z]([-a-z0-9]*[a-z0-9])?' which means the\nfirst character must be a lowercase letter, and all following\ncharacters must be a dash, lowercase letter, or digit, except the last\ncharacter, which cannot be a dash.",
                "required": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "self_link": {
                "type": "string",
                "computed": true
              },
              "target": {
                "type": "string",
                "description": "URL of the managed instance group that this autoscaler will scale.",
                "required": true
              },
              "zone": {
                "type": "string",
                "description": "URL of the zone where the instance group resides.",
                "optional": true,
                "computed": true
              }
            },
            "block_types": {
              "autoscaling_policy": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "cooldown_period": {
                      "type": "number",
                      "description": "The number of seconds that the autoscaler should wait before it\nstarts collecting information from a new instance. This prevents\nthe autoscaler from collecting information when the instance is\ninitializing, during which the collected usage would not be\nreliable. The default time autoscaler waits is 60 seconds.\n\nVirtual machine initialization times might vary because of\nnumerous factors. We recommend that you test how long an\ninstance may take to initialize. To do this, create an instance\nand time the startup process.",
                      "optional": true
                    },
                    "max_replicas": {
                      "type": "number",
                      "description": "The maximum number of instances that the autoscaler can scale up\nto. This is required when creating or updating an autoscaler. The\nmaximum number of replicas should not be lower than minimal number\nof replicas.",
                      "required": true
                    },
                    "min_replicas": {
                      "type": "number",
                      "description": "The minimum number of replicas that the autoscaler can scale down\nto. This cannot be less than 0. If not provided, autoscaler will\nchoose a default value depending on maximum number of instances\nallowed.",
                      "required": true
                    }
                  },
                  "block_types": {
                    "cpu_utilization": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "target": {
                            "type": "number",
                            "description": "The target CPU utilization that the autoscaler should maintain.\nMust be a float value in the range (0, 1]. If not specified, the\ndefault is 0.6.\n\nIf the CPU level is below the target utilization, the autoscaler\nscales down the number of instances until it reaches the minimum\nnumber of instances you specified or until the average CPU of\nyour instances reaches the target utilization.\n\nIf the average CPU is above the target utilization, the autoscaler\nscales up until it reaches the maximum number of instances you\nspecified or until the average utilization reaches the target\nutilization.",
                            "required": true
                          }
                        }
                      },
                      "max_items": 1
                    },
                    "load_balancing_utilization": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "target": {
                            "type": "number",
                            "description": "Fraction of backend capacity utilization (set in HTTP(s) load\nbalancing configuration) that autoscaler should maintain. Must\nbe a positive float value. If not defined, the default is 0.8.",
                            "required": true
                          }
                        }
                      },
                      "max_items": 1
                    },
                    "metric": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "name": {
                            "type": "string",
                            "description": "The identifier (type) of the Stackdriver Monitoring metric.\nThe metric cannot have negative values.\n\nThe metric must have a value type of INT64 or DOUBLE.",
                            "required": true
                          },
                          "target": {
                            "type": "number",
                            "description": "The target value of the metric that autoscaler should\nmaintain. This must be a positive value. A utilization\nmetric scales number of virtual machines handling requests\nto increase or decrease proportionally to the metric.\n\nFor example, a good metric to use as a utilizationTarget is\nwww.googleapis.com/compute/instance/network/received_bytes_count.\nThe autoscaler will work to keep this value constant for each\nof the instances.",
                            "optional": true
                          },
                          "type": {
                            "type": "string",
                            "description": "Defines how target utilization value is expressed for a\nStackdriver Monitoring metric. Either GAUGE, DELTA_PER_SECOND,\nor DELTA_PER_MINUTE.",
                            "optional": true
                          }
                        }
                      }
                    }
                  }
                },
                "min_items": 1,
                "max_items": 1
              },
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "google_compute_backend_bucket": {
          "version": 0,
          "block": {
            "attributes": {
              "bucket_name": {
                "type": "string",
                "description": "Cloud Storage bucket name.",
                "required": true
              },
              "creation_timestamp": {
                "type": "string",
                "description": "Creation timestamp in RFC3339 text format.",
                "computed": true
              },
              "description": {
                "type": "string",
                "description": "An optional textual description of the resource; provided by the\nclient when the resource is created.",
                "optional": true
              },
              "enable_cdn": {
                "type": "bool",
                "description": "If true, enable Cloud CDN for this BackendBucket.",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "Name of the resource. Provided by the client when the resource is\ncreated. The name must be 1-63 characters long, and comply with\nRFC1035.  Specifically, the name must be 1-63 characters long and\nmatch the regular expression '[a-z]([-a-z0-9]*[a-z0-9])?' which means\nthe first character must be a lowercase letter, and all following\ncharacters must be a dash, lowercase letter, or digit, except the\nlast character, which cannot be a dash.",
                "required": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "self_link": {
                "type": "string",
                "computed": true
              }
            },
            "block_types": {
              "cdn_policy": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "signed_url_cache_max_age_sec": {
                      "type": "number",
                      "description": "Maximum number of seconds the response to a signed URL request will\nbe considered fresh. After this time period,\nthe response will be revalidated before being served.\nWhen serving responses to signed URL requests,\nCloud CDN will internally behave as though\nall responses from this backend had a \"Cache-Control: public,\nmax-age=[TTL]\" header, regardless of any existing Cache-Control\nheader. The actual headers served in responses will not be altered.",
                      "required": true
                    }
                  }
                },
                "max_items": 1
              },
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "google_compute_backend_bucket_signed_url_key": {
          "version": 0,
          "block": {
            "attributes": {
              "backend_bucket": {
                "type": "string",
                "description": "The backend bucket this signed URL key belongs.",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "key_value": {
                "type": "string",
                "description": "128-bit key value used for signing the URL. The key value must be a\nvalid RFC 4648 Section 5 base64url encoded string.",
                "required": true,
                "sensitive": true
              },
              "name": {
                "type": "string",
                "description": "Name of the signed URL key.",
                "required": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              }
            },
            "block_types": {
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "google_compute_backend_service": {
          "version": 1,
          "block": {
            "attributes": {
              "affinity_cookie_ttl_sec": {
                "type": "number",
                "description": "Lifetime of cookies in seconds if session_affinity is\nGENERATED_COOKIE. If set to 0, the cookie is non-persistent and lasts\nonly until the end of the browser session (or equivalent). The\nmaximum allowed value for TTL is one day.\n\nWhen the load balancing scheme is INTERNAL, this field is not used.",
                "optional": true
              },
              "connection_draining_timeout_sec": {
                "type": "number",
                "description": "Time for which instance will be drained (not accept new\nconnections, but still work to finish started).",
                "optional": true
              },
              "creation_timestamp": {
                "type": "string",
                "description": "Creation timestamp in RFC3339 text format.",
                "computed": true
              },
              "description": {
                "type": "string",
                "description": "An optional description of this resource.",
                "optional": true
              },
              "enable_cdn": {
                "type": "bool",
                "description": "If true, enable Cloud CDN for this BackendService.",
                "optional": true
              },
              "fingerprint": {
                "type": "string",
                "description": "Fingerprint of this resource. A hash of the contents stored in this\nobject. This field is used in optimistic locking.",
                "computed": true
              },
              "health_checks": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "The set of URLs to the HttpHealthCheck or HttpsHealthCheck resource\nfor health checking this BackendService. Currently at most one health\ncheck can be specified, and a health check is required.\n\nFor internal load balancing, a URL to a HealthCheck resource must be specified instead.",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "load_balancing_scheme": {
                "type": "string",
                "description": "Indicates whether the backend service will be used with internal or\nexternal load balancing. A backend service created for one type of\nload balancing cannot be used with the other. Must be 'EXTERNAL' or\n'INTERNAL_SELF_MANAGED' for a global backend service. Defaults to 'EXTERNAL'.",
                "optional": true
              },
              "name": {
                "type": "string",
                "description": "Name of the resource. Provided by the client when the resource is\ncreated. The name must be 1-63 characters long, and comply with\nRFC1035. Specifically, the name must be 1-63 characters long and match\nthe regular expression '[a-z]([-a-z0-9]*[a-z0-9])?' which means the\nfirst character must be a lowercase letter, and all following\ncharacters must be a dash, lowercase letter, or digit, except the last\ncharacter, which cannot be a dash.",
                "required": true
              },
              "port_name": {
                "type": "string",
                "description": "Name of backend port. The same name should appear in the instance\ngroups referenced by this service. Required when the load balancing\nscheme is EXTERNAL.",
                "optional": true,
                "computed": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "protocol": {
                "type": "string",
                "description": "The protocol this BackendService uses to communicate with backends.\nPossible values are HTTP, HTTPS, HTTP2, TCP, and SSL. The default is\nHTTP. **NOTE**: HTTP2 is only valid for beta HTTP/2 load balancer\ntypes and may result in errors if used with the GA API.",
                "optional": true,
                "computed": true
              },
              "security_policy": {
                "type": "string",
                "description": "The security policy associated with this backend service.",
                "optional": true
              },
              "self_link": {
                "type": "string",
                "computed": true
              },
              "session_affinity": {
                "type": "string",
                "description": "Type of session affinity to use. The default is NONE. Session affinity is\nnot applicable if the protocol is UDP.",
                "optional": true,
                "computed": true
              },
              "timeout_sec": {
                "type": "number",
                "description": "How many seconds to wait for the backend before considering it a\nfailed request. Default is 30 seconds. Valid range is [1, 86400].",
                "optional": true,
                "computed": true
              }
            },
            "block_types": {
              "backend": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "balancing_mode": {
                      "type": "string",
                      "description": "Specifies the balancing mode for this backend.\n\nFor global HTTP(S) or TCP/SSL load balancing, the default is\nUTILIZATION. Valid values are UTILIZATION, RATE (for HTTP(S))\nand CONNECTION (for TCP/SSL).",
                      "optional": true
                    },
                    "capacity_scaler": {
                      "type": "number",
                      "description": "A multiplier applied to the group's maximum servicing capacity\n(based on UTILIZATION, RATE or CONNECTION).\n\nDefault value is 1, which means the group will serve up to 100%\nof its configured capacity (depending on balancingMode). A\nsetting of 0 means the group is completely drained, offering\n0% of its available Capacity. Valid range is [0.0,1.0].",
                      "optional": true
                    },
                    "description": {
                      "type": "string",
                      "description": "An optional description of this resource.\nProvide this property when you create the resource.",
                      "optional": true
                    },
                    "group": {
                      "type": "string",
                      "description": "The fully-qualified URL of an Instance Group or Network Endpoint\nGroup resource. In case of instance group this defines the list\nof instances that serve traffic. Member virtual machine\ninstances from each instance group must live in the same zone as\nthe instance group itself. No two backends in a backend service\nare allowed to use same Instance Group resource.\n\nFor Network Endpoint Groups this defines list of endpoints. All\nendpoints of Network Endpoint Group must be hosted on instances\nlocated in the same zone as the Network Endpoint Group.\n\nBackend services cannot mix Instance Group and\nNetwork Endpoint Group backends.\n\nNote that you must specify an Instance Group or Network Endpoint\nGroup resource using the fully-qualified URL, rather than a\npartial URL.",
                      "required": true
                    },
                    "max_connections": {
                      "type": "number",
                      "description": "The max number of simultaneous connections for the group. Can\nbe used with either CONNECTION or UTILIZATION balancing modes.\n\nFor CONNECTION mode, either maxConnections or one\nof maxConnectionsPerInstance or maxConnectionsPerEndpoint,\nas appropriate for group type, must be set.",
                      "optional": true
                    },
                    "max_connections_per_endpoint": {
                      "type": "number",
                      "description": "The max number of simultaneous connections that a single backend\nnetwork endpoint can handle. This is used to calculate the\ncapacity of the group. Can be used in either CONNECTION or\nUTILIZATION balancing modes.\n\nFor CONNECTION mode, either\nmaxConnections or maxConnectionsPerEndpoint must be set.",
                      "optional": true
                    },
                    "max_connections_per_instance": {
                      "type": "number",
                      "description": "The max number of simultaneous connections that a single\nbackend instance can handle. This is used to calculate the\ncapacity of the group. Can be used in either CONNECTION or\nUTILIZATION balancing modes.\n\nFor CONNECTION mode, either maxConnections or\nmaxConnectionsPerInstance must be set.",
                      "optional": true
                    },
                    "max_rate": {
                      "type": "number",
                      "description": "The max requests per second (RPS) of the group.\n\nCan be used with either RATE or UTILIZATION balancing modes,\nbut required if RATE mode. For RATE mode, either maxRate or one\nof maxRatePerInstance or maxRatePerEndpoint, as appropriate for\ngroup type, must be set.",
                      "optional": true
                    },
                    "max_rate_per_endpoint": {
                      "type": "number",
                      "description": "The max requests per second (RPS) that a single backend network\nendpoint can handle. This is used to calculate the capacity of\nthe group. Can be used in either balancing mode. For RATE mode,\neither maxRate or maxRatePerEndpoint must be set.",
                      "optional": true
                    },
                    "max_rate_per_instance": {
                      "type": "number",
                      "description": "The max requests per second (RPS) that a single backend\ninstance can handle. This is used to calculate the capacity of\nthe group. Can be used in either balancing mode. For RATE mode,\neither maxRate or maxRatePerInstance must be set.",
                      "optional": true
                    },
                    "max_utilization": {
                      "type": "number",
                      "description": "Used when balancingMode is UTILIZATION. This ratio defines the\nCPU utilization target for the group. The default is 0.8. Valid\nrange is [0.0, 1.0].",
                      "optional": true
                    }
                  }
                }
              },
              "cdn_policy": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "signed_url_cache_max_age_sec": {
                      "type": "number",
                      "description": "Maximum number of seconds the response to a signed URL request\nwill be considered fresh, defaults to 1hr (3600s). After this\ntime period, the response will be revalidated before\nbeing served.\n\nWhen serving responses to signed URL requests, Cloud CDN will\ninternally behave as though all responses from this backend had a\n\"Cache-Control: public, max-age=[TTL]\" header, regardless of any\nexisting Cache-Control header. The actual headers served in\nresponses will not be altered.",
                      "optional": true
                    }
                  },
                  "block_types": {
                    "cache_key_policy": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "include_host": {
                            "type": "bool",
                            "description": "If true requests to different hosts will be cached separately.",
                            "optional": true
                          },
                          "include_protocol": {
                            "type": "bool",
                            "description": "If true, http and https requests will be cached separately.",
                            "optional": true
                          },
                          "include_query_string": {
                            "type": "bool",
                            "description": "If true, include query string parameters in the cache key\naccording to query_string_whitelist and\nquery_string_blacklist. If neither is set, the entire query\nstring will be included.\n\nIf false, the query string will be excluded from the cache\nkey entirely.",
                            "optional": true
                          },
                          "query_string_blacklist": {
                            "type": [
                              "set",
                              "string"
                            ],
                            "description": "Names of query string parameters to exclude in cache keys.\n\nAll other parameters will be included. Either specify\nquery_string_whitelist or query_string_blacklist, not both.\n'&' and '=' will be percent encoded and not treated as\ndelimiters.",
                            "optional": true
                          },
                          "query_string_whitelist": {
                            "type": [
                              "set",
                              "string"
                            ],
                            "description": "Names of query string parameters to include in cache keys.\n\nAll other parameters will be excluded. Either specify\nquery_string_whitelist or query_string_blacklist, not both.\n'&' and '=' will be percent encoded and not treated as\ndelimiters.",
                            "optional": true
                          }
                        }
                      },
                      "max_items": 1
                    }
                  }
                },
                "max_items": 1
              },
              "iap": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "oauth2_client_id": {
                      "type": "string",
                      "description": "OAuth2 Client ID for IAP",
                      "required": true
                    },
                    "oauth2_client_secret": {
                      "type": "string",
                      "description": "OAuth2 Client Secret for IAP",
                      "required": true,
                      "sensitive": true
                    },
                    "oauth2_client_secret_sha256": {
                      "type": "string",
                      "description": "OAuth2 Client Secret SHA-256 for IAP",
                      "computed": true,
                      "sensitive": true
                    }
                  }
                },
                "max_items": 1
              },
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "google_compute_backend_service_signed_url_key": {
          "version": 0,
          "block": {
            "attributes": {
              "backend_service": {
                "type": "string",
                "description": "The backend service this signed URL key belongs.",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "key_value": {
                "type": "string",
                "description": "128-bit key value used for signing the URL. The key value must be a\nvalid RFC 4648 Section 5 base64url encoded string.",
                "required": true,
                "sensitive": true
              },
              "name": {
                "type": "string",
                "description": "Name of the signed URL key.",
                "required": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              }
            },
            "block_types": {
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "google_compute_disk": {
          "version": 0,
          "block": {
            "attributes": {
              "creation_timestamp": {
                "type": "string",
                "description": "Creation timestamp in RFC3339 text format.",
                "computed": true
              },
              "description": {
                "type": "string",
                "description": "An optional description of this resource. Provide this property when\nyou create the resource.",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "image": {
                "type": "string",
                "description": "The image from which to initialize this disk. This can be\none of: the image's 'self_link', 'projects/{project}/global/images/{image}',\n'projects/{project}/global/images/family/{family}', 'global/images/{image}',\n'global/images/family/{family}', 'family/{family}', '{project}/{family}',\n'{project}/{image}', '{family}', or '{image}'. If referred by family, the\nimages names must include the family name. If they don't, use the\n[google_compute_image data source](/docs/providers/google/d/datasource_compute_image.html).\nFor instance, the image 'centos-6-v20180104' includes its family name 'centos-6'.\nThese images can be referred by family name here.",
                "optional": true
              },
              "label_fingerprint": {
                "type": "string",
                "description": "The fingerprint used for optimistic locking of this resource.  Used\ninternally during updates.",
                "computed": true
              },
              "labels": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "Labels to apply to this disk.  A list of key->value pairs.",
                "optional": true
              },
              "last_attach_timestamp": {
                "type": "string",
                "description": "Last attach timestamp in RFC3339 text format.",
                "computed": true
              },
              "last_detach_timestamp": {
                "type": "string",
                "description": "Last detach timestamp in RFC3339 text format.",
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "Name of the resource. Provided by the client when the resource is\ncreated. The name must be 1-63 characters long, and comply with\nRFC1035. Specifically, the name must be 1-63 characters long and match\nthe regular expression '[a-z]([-a-z0-9]*[a-z0-9])?' which means the\nfirst character must be a lowercase letter, and all following\ncharacters must be a dash, lowercase letter, or digit, except the last\ncharacter, which cannot be a dash.",
                "required": true
              },
              "physical_block_size_bytes": {
                "type": "number",
                "description": "Physical block size of the persistent disk, in bytes. If not present\nin a request, a default value is used. Currently supported sizes\nare 4096 and 16384, other sizes may be added in the future.\nIf an unsupported value is requested, the error message will list\nthe supported values for the caller's project.",
                "optional": true,
                "computed": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "self_link": {
                "type": "string",
                "computed": true
              },
              "size": {
                "type": "number",
                "description": "Size of the persistent disk, specified in GB. You can specify this\nfield when creating a persistent disk using the 'image' or\n'snapshot' parameter, or specify it alone to create an empty\npersistent disk.\n\nIf you specify this field along with 'image' or 'snapshot',\nthe value must not be less than the size of the image\nor the size of the snapshot.",
                "optional": true,
                "computed": true
              },
              "snapshot": {
                "type": "string",
                "description": "The source snapshot used to create this disk. You can provide this as\na partial or full URL to the resource. If the snapshot is in another\nproject than this disk, you must supply a full URL. For example, the\nfollowing are valid values:\n\n* 'https://www.googleapis.com/compute/v1/projects/project/global/snapshots/snapshot'\n* 'projects/project/global/snapshots/snapshot'\n* 'global/snapshots/snapshot'\n* 'snapshot'",
                "optional": true
              },
              "source_image_id": {
                "type": "string",
                "description": "The ID value of the image used to create this disk. This value\nidentifies the exact image that was used to create this persistent\ndisk. For example, if you created the persistent disk from an image\nthat was later deleted and recreated under the same name, the source\nimage ID would identify the exact version of the image that was used.",
                "computed": true
              },
              "source_snapshot_id": {
                "type": "string",
                "description": "The unique ID of the snapshot used to create this disk. This value\nidentifies the exact snapshot that was used to create this persistent\ndisk. For example, if you created the persistent disk from a snapshot\nthat was later deleted and recreated under the same name, the source\nsnapshot ID would identify the exact version of the snapshot that was\nused.",
                "computed": true
              },
              "type": {
                "type": "string",
                "description": "URL of the disk type resource describing which disk type to use to\ncreate the disk. Provide this when creating the disk.",
                "optional": true
              },
              "users": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "Links to the users of the disk (attached instances) in form:\nproject/zones/zone/instances/instance",
                "computed": true
              },
              "zone": {
                "type": "string",
                "description": "A reference to the zone where the disk resides.",
                "optional": true,
                "computed": true
              }
            },
            "block_types": {
              "disk_encryption_key": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "kms_key_self_link": {
                      "type": "string",
                      "description": "The self link of the encryption key used to encrypt the disk. Also called KmsKeyName\nin the cloud console. Your project's Compute Engine System service account\n('service-{{PROJECT_NUMBER}}@compute-system.iam.gserviceaccount.com') must have\n'roles/cloudkms.cryptoKeyEncrypterDecrypter' to use this feature.\nSee https://cloud.google.com/compute/docs/disks/customer-managed-encryption#encrypt_a_new_persistent_disk_with_your_own_keys",
                      "optional": true
                    },
                    "raw_key": {
                      "type": "string",
                      "description": "Specifies a 256-bit customer-supplied encryption key, encoded in\nRFC 4648 base64 to either encrypt or decrypt this resource.",
                      "optional": true,
                      "sensitive": true
                    },
                    "sha256": {
                      "type": "string",
                      "description": "The RFC 4648 base64 encoded SHA-256 hash of the customer-supplied\nencryption key that protects this resource.",
                      "computed": true
                    }
                  }
                },
                "max_items": 1
              },
              "source_image_encryption_key": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "kms_key_self_link": {
                      "type": "string",
                      "description": "The self link of the encryption key used to encrypt the disk. Also called KmsKeyName\nin the cloud console. Your project's Compute Engine System service account\n('service-{{PROJECT_NUMBER}}@compute-system.iam.gserviceaccount.com') must have\n'roles/cloudkms.cryptoKeyEncrypterDecrypter' to use this feature.\nSee https://cloud.google.com/compute/docs/disks/customer-managed-encryption#encrypt_a_new_persistent_disk_with_your_own_keys",
                      "optional": true
                    },
                    "raw_key": {
                      "type": "string",
                      "description": "Specifies a 256-bit customer-supplied encryption key, encoded in\nRFC 4648 base64 to either encrypt or decrypt this resource.",
                      "optional": true
                    },
                    "sha256": {
                      "type": "string",
                      "description": "The RFC 4648 base64 encoded SHA-256 hash of the customer-supplied\nencryption key that protects this resource.",
                      "computed": true
                    }
                  }
                },
                "max_items": 1
              },
              "source_snapshot_encryption_key": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "kms_key_self_link": {
                      "type": "string",
                      "description": "The self link of the encryption key used to encrypt the disk. Also called KmsKeyName\nin the cloud console. Your project's Compute Engine System service account\n('service-{{PROJECT_NUMBER}}@compute-system.iam.gserviceaccount.com') must have\n'roles/cloudkms.cryptoKeyEncrypterDecrypter' to use this feature.\nSee https://cloud.google.com/compute/docs/disks/customer-managed-encryption#encrypt_a_new_persistent_disk_with_your_own_keys",
                      "optional": true
                    },
                    "raw_key": {
                      "type": "string",
                      "description": "Specifies a 256-bit customer-supplied encryption key, encoded in\nRFC 4648 base64 to either encrypt or decrypt this resource.",
                      "optional": true
                    },
                    "sha256": {
                      "type": "string",
                      "description": "The RFC 4648 base64 encoded SHA-256 hash of the customer-supplied\nencryption key that protects this resource.",
                      "computed": true
                    }
                  }
                },
                "max_items": 1
              },
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "google_compute_disk_resource_policy_attachment": {
          "version": 0,
          "block": {
            "attributes": {
              "disk": {
                "type": "string",
                "description": "The name of the disk in which the resource policies are attached to.",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "The resource policy to be attached to the disk for scheduling snapshot\ncreation. Do not specify the self link.",
                "required": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "zone": {
                "type": "string",
                "description": "A reference to the zone where the disk resides.",
                "optional": true,
                "computed": true
              }
            },
            "block_types": {
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "google_compute_firewall": {
          "version": 1,
          "block": {
            "attributes": {
              "creation_timestamp": {
                "type": "string",
                "description": "Creation timestamp in RFC3339 text format.",
                "computed": true
              },
              "description": {
                "type": "string",
                "description": "An optional description of this resource. Provide this property when\nyou create the resource.",
                "optional": true
              },
              "destination_ranges": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "If destination ranges are specified, the firewall will apply only to\ntraffic that has destination IP address in these ranges. These ranges\nmust be expressed in CIDR format. Only IPv4 is supported.",
                "optional": true,
                "computed": true
              },
              "direction": {
                "type": "string",
                "description": "Direction of traffic to which this firewall applies; default is\nINGRESS. Note: For INGRESS traffic, it is NOT supported to specify\ndestinationRanges; For EGRESS traffic, it is NOT supported to specify\nsourceRanges OR sourceTags.",
                "optional": true,
                "computed": true
              },
              "disabled": {
                "type": "bool",
                "description": "Denotes whether the firewall rule is disabled, i.e not applied to the\nnetwork it is associated with. When set to true, the firewall rule is\nnot enforced and the network behaves as if it did not exist. If this\nis unspecified, the firewall rule will be enabled.",
                "optional": true
              },
              "enable_logging": {
                "type": "bool",
                "description": "This field denotes whether to enable logging for a particular\nfirewall rule. If logging is enabled, logs will be exported to\nStackdriver.",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "Name of the resource. Provided by the client when the resource is\ncreated. The name must be 1-63 characters long, and comply with\nRFC1035. Specifically, the name must be 1-63 characters long and match\nthe regular expression '[a-z]([-a-z0-9]*[a-z0-9])?' which means the\nfirst character must be a lowercase letter, and all following\ncharacters must be a dash, lowercase letter, or digit, except the last\ncharacter, which cannot be a dash.",
                "required": true
              },
              "network": {
                "type": "string",
                "description": "The name or self_link of the network to attach this firewall to.",
                "required": true
              },
              "priority": {
                "type": "number",
                "description": "Priority for this rule. This is an integer between 0 and 65535, both\ninclusive. When not specified, the value assumed is 1000. Relative\npriorities determine precedence of conflicting rules. Lower value of\npriority implies higher precedence (eg, a rule with priority 0 has\nhigher precedence than a rule with priority 1). DENY rules take\nprecedence over ALLOW rules having equal priority.",
                "optional": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "self_link": {
                "type": "string",
                "computed": true
              },
              "source_ranges": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "If source ranges are specified, the firewall will apply only to\ntraffic that has source IP address in these ranges. These ranges must\nbe expressed in CIDR format. One or both of sourceRanges and\nsourceTags may be set. If both properties are set, the firewall will\napply to traffic that has source IP address within sourceRanges OR the\nsource IP that belongs to a tag listed in the sourceTags property. The\nconnection does not need to match both properties for the firewall to\napply. Only IPv4 is supported.",
                "optional": true,
                "computed": true
              },
              "source_service_accounts": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "If source service accounts are specified, the firewall will apply only\nto traffic originating from an instance with a service account in this\nlist. Source service accounts cannot be used to control traffic to an\ninstance's external IP address because service accounts are associated\nwith an instance, not an IP address. sourceRanges can be set at the\nsame time as sourceServiceAccounts. If both are set, the firewall will\napply to traffic that has source IP address within sourceRanges OR the\nsource IP belongs to an instance with service account listed in\nsourceServiceAccount. The connection does not need to match both\nproperties for the firewall to apply. sourceServiceAccounts cannot be\nused at the same time as sourceTags or targetTags.",
                "optional": true
              },
              "source_tags": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "If source tags are specified, the firewall will apply only to traffic\nwith source IP that belongs to a tag listed in source tags. Source\ntags cannot be used to control traffic to an instance's external IP\naddress. Because tags are associated with an instance, not an IP\naddress. One or both of sourceRanges and sourceTags may be set. If\nboth properties are set, the firewall will apply to traffic that has\nsource IP address within sourceRanges OR the source IP that belongs to\na tag listed in the sourceTags property. The connection does not need\nto match both properties for the firewall to apply.",
                "optional": true
              },
              "target_service_accounts": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "A list of service accounts indicating sets of instances located in the\nnetwork that may make network connections as specified in allowed[].\ntargetServiceAccounts cannot be used at the same time as targetTags or\nsourceTags. If neither targetServiceAccounts nor targetTags are\nspecified, the firewall rule applies to all instances on the specified\nnetwork.",
                "optional": true
              },
              "target_tags": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "A list of instance tags indicating sets of instances located in the\nnetwork that may make network connections as specified in allowed[].\nIf no targetTags are specified, the firewall rule applies to all\ninstances on the specified network.",
                "optional": true
              }
            },
            "block_types": {
              "allow": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "ports": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "An optional list of ports to which this rule applies. This field\nis only applicable for UDP or TCP protocol. Each entry must be\neither an integer or a range. If not specified, this rule\napplies to connections through any port.\n\nExample inputs include: [\"22\"], [\"80\",\"443\"], and\n[\"12345-12349\"].",
                      "optional": true
                    },
                    "protocol": {
                      "type": "string",
                      "description": "The IP protocol to which this rule applies. The protocol type is\nrequired when creating a firewall rule. This value can either be\none of the following well known protocol strings (tcp, udp,\nicmp, esp, ah, sctp), or the IP protocol number.",
                      "required": true
                    }
                  }
                }
              },
              "deny": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "ports": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "An optional list of ports to which this rule applies. This field\nis only applicable for UDP or TCP protocol. Each entry must be\neither an integer or a range. If not specified, this rule\napplies to connections through any port.\n\nExample inputs include: [\"22\"], [\"80\",\"443\"], and\n[\"12345-12349\"].",
                      "optional": true
                    },
                    "protocol": {
                      "type": "string",
                      "description": "The IP protocol to which this rule applies. The protocol type is\nrequired when creating a firewall rule. This value can either be\none of the following well known protocol strings (tcp, udp,\nicmp, esp, ah, sctp), or the IP protocol number.",
                      "required": true
                    }
                  }
                }
              },
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "google_compute_forwarding_rule": {
          "version": 0,
          "block": {
            "attributes": {
              "all_ports": {
                "type": "bool",
                "description": "For internal TCP/UDP load balancing (i.e. load balancing scheme is\nINTERNAL and protocol is TCP/UDP), set this to true to allow packets\naddressed to any ports to be forwarded to the backends configured\nwith this forwarding rule. Used with backend service. Cannot be set\nif port or portRange are set.",
                "optional": true
              },
              "backend_service": {
                "type": "string",
                "description": "A BackendService to receive the matched traffic. This is used only\nfor INTERNAL load balancing.",
                "optional": true
              },
              "creation_timestamp": {
                "type": "string",
                "description": "Creation timestamp in RFC3339 text format.",
                "computed": true
              },
              "description": {
                "type": "string",
                "description": "An optional description of this resource. Provide this property when\nyou create the resource.",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "ip_address": {
                "type": "string",
                "description": "The IP address that this forwarding rule is serving on behalf of.\n\nAddresses are restricted based on the forwarding rule's load balancing\nscheme (EXTERNAL or INTERNAL) and scope (global or regional).\n\nWhen the load balancing scheme is EXTERNAL, for global forwarding\nrules, the address must be a global IP, and for regional forwarding\nrules, the address must live in the same region as the forwarding\nrule. If this field is empty, an ephemeral IPv4 address from the same\nscope (global or regional) will be assigned. A regional forwarding\nrule supports IPv4 only. A global forwarding rule supports either IPv4\nor IPv6.\n\nWhen the load balancing scheme is INTERNAL, this can only be an RFC\n1918 IP address belonging to the network/subnet configured for the\nforwarding rule. By default, if this field is empty, an ephemeral\ninternal IP address will be automatically allocated from the IP range\nof the subnet or network configured for this forwarding rule.\n\nAn address must be specified by a literal IP address. ~> **NOTE**: While\nthe API allows you to specify various resource paths for an address resource\ninstead, Terraform requires this to specifically be an IP address to\navoid needing to fetching the IP address from resource paths on refresh\nor unnecessary diffs.",
                "optional": true,
                "computed": true
              },
              "ip_protocol": {
                "type": "string",
                "description": "The IP protocol to which this rule applies. Valid options are TCP,\nUDP, ESP, AH, SCTP or ICMP.\n\nWhen the load balancing scheme is INTERNAL, only TCP and UDP are\nvalid.",
                "optional": true,
                "computed": true
              },
              "ip_version": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "load_balancing_scheme": {
                "type": "string",
                "description": "This signifies what the ForwardingRule will be used for and can be\nEXTERNAL, INTERNAL, or INTERNAL_MANAGED. EXTERNAL is used for Classic\nCloud VPN gateways, protocol forwarding to VMs from an external IP address,\nand HTTP(S), SSL Proxy, TCP Proxy, and Network TCP/UDP load balancers.\nINTERNAL is used for protocol forwarding to VMs from an internal IP address,\nand internal TCP/UDP load balancers.\nINTERNAL_MANAGED is used for internal HTTP(S) load balancers.",
                "optional": true
              },
              "name": {
                "type": "string",
                "description": "Name of the resource; provided by the client when the resource is\ncreated. The name must be 1-63 characters long, and comply with\nRFC1035. Specifically, the name must be 1-63 characters long and match\nthe regular expression '[a-z]([-a-z0-9]*[a-z0-9])?' which means the\nfirst character must be a lowercase letter, and all following\ncharacters must be a dash, lowercase letter, or digit, except the last\ncharacter, which cannot be a dash.",
                "required": true
              },
              "network": {
                "type": "string",
                "description": "For internal load balancing, this field identifies the network that\nthe load balanced IP should belong to for this Forwarding Rule. If\nthis field is not specified, the default network will be used.\nThis field is only used for INTERNAL load balancing.",
                "optional": true,
                "computed": true
              },
              "network_tier": {
                "type": "string",
                "description": "The networking tier used for configuring this address. This field can\ntake the following values: PREMIUM or STANDARD. If this field is not\nspecified, it is assumed to be PREMIUM.",
                "optional": true,
                "computed": true
              },
              "port_range": {
                "type": "string",
                "description": "This field is used along with the target field for TargetHttpProxy,\nTargetHttpsProxy, TargetSslProxy, TargetTcpProxy, TargetVpnGateway,\nTargetPool, TargetInstance.\n\nApplicable only when IPProtocol is TCP, UDP, or SCTP, only packets\naddressed to ports in the specified range will be forwarded to target.\nForwarding rules with the same [IPAddress, IPProtocol] pair must have\ndisjoint port ranges.\n\nSome types of forwarding target have constraints on the acceptable\nports:\n\n* TargetHttpProxy: 80, 8080\n* TargetHttpsProxy: 443\n* TargetTcpProxy: 25, 43, 110, 143, 195, 443, 465, 587, 700, 993, 995,\n                  1883, 5222\n* TargetSslProxy: 25, 43, 110, 143, 195, 443, 465, 587, 700, 993, 995,\n                  1883, 5222\n* TargetVpnGateway: 500, 4500",
                "optional": true
              },
              "ports": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "This field is used along with the backend_service field for internal\nload balancing.\n\nWhen the load balancing scheme is INTERNAL, a single port or a comma\nseparated list of ports can be configured. Only packets addressed to\nthese ports will be forwarded to the backends configured with this\nforwarding rule.\n\nYou may specify a maximum of up to 5 ports.",
                "optional": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "region": {
                "type": "string",
                "description": "A reference to the region where the regional forwarding rule resides.\nThis field is not applicable to global forwarding rules.",
                "optional": true,
                "computed": true
              },
              "self_link": {
                "type": "string",
                "computed": true
              },
              "service_label": {
                "type": "string",
                "description": "An optional prefix to the service name for this Forwarding Rule.\nIf specified, will be the first label of the fully qualified service\nname.\n\nThe label must be 1-63 characters long, and comply with RFC1035.\nSpecifically, the label must be 1-63 characters long and match the\nregular expression '[a-z]([-a-z0-9]*[a-z0-9])?' which means the first\ncharacter must be a lowercase letter, and all following characters\nmust be a dash, lowercase letter, or digit, except the last\ncharacter, which cannot be a dash.\n\nThis field is only used for INTERNAL load balancing.",
                "optional": true
              },
              "service_name": {
                "type": "string",
                "description": "The internal fully qualified service name for this Forwarding Rule.\nThis field is only used for INTERNAL load balancing.",
                "computed": true
              },
              "subnetwork": {
                "type": "string",
                "description": "The subnetwork that the load balanced IP should belong to for this\nForwarding Rule.  This field is only used for INTERNAL load balancing.\n\nIf the network specified is in auto subnet mode, this field is\noptional. However, if the network is in custom subnet mode, a\nsubnetwork must be specified.",
                "optional": true,
                "computed": true
              },
              "target": {
                "type": "string",
                "description": "The URL of the target resource to receive the matched traffic.\nThe target must live in the same region as the forwarding rule.\nThe forwarded traffic must be of a type appropriate to the target\nobject.",
                "optional": true
              }
            },
            "block_types": {
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "google_compute_global_address": {
          "version": 0,
          "block": {
            "attributes": {
              "address": {
                "type": "string",
                "description": "The IP address or beginning of the address range represented by this\nresource. This can be supplied as an input to reserve a specific\naddress or omitted to allow GCP to choose a valid one for you.",
                "optional": true,
                "computed": true
              },
              "address_type": {
                "type": "string",
                "description": "The type of the address to reserve, default is EXTERNAL.\n\n* EXTERNAL indicates public/external single IP address.\n* INTERNAL indicates internal IP ranges belonging to some network.",
                "optional": true
              },
              "creation_timestamp": {
                "type": "string",
                "description": "Creation timestamp in RFC3339 text format.",
                "computed": true
              },
              "description": {
                "type": "string",
                "description": "An optional description of this resource.",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "ip_version": {
                "type": "string",
                "description": "The IP Version that will be used by this address. Valid options are\n'IPV4' or 'IPV6'. The default value is 'IPV4'.",
                "optional": true
              },
              "name": {
                "type": "string",
                "description": "Name of the resource. Provided by the client when the resource is\ncreated. The name must be 1-63 characters long, and comply with\nRFC1035.  Specifically, the name must be 1-63 characters long and\nmatch the regular expression '[a-z]([-a-z0-9]*[a-z0-9])?' which means\nthe first character must be a lowercase letter, and all following\ncharacters must be a dash, lowercase letter, or digit, except the last\ncharacter, which cannot be a dash.",
                "required": true
              },
              "network": {
                "type": "string",
                "description": "The URL of the network in which to reserve the IP range. The IP range\nmust be in RFC1918 space. The network cannot be deleted if there are\nany reserved IP ranges referring to it.\n\nThis should only be set when using an Internal address.",
                "optional": true
              },
              "prefix_length": {
                "type": "number",
                "description": "The prefix length of the IP range. If not present, it means the\naddress field is a single IP address.\n\nThis field is not applicable to addresses with addressType=EXTERNAL.",
                "optional": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "purpose": {
                "type": "string",
                "description": "The purpose of the resource. For global internal addresses it can be\n\n* VPC_PEERING - for peer networks\n\nThis should only be set when using an Internal address.",
                "optional": true
              },
              "self_link": {
                "type": "string",
                "computed": true
              }
            },
            "block_types": {
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "google_compute_global_forwarding_rule": {
          "version": 0,
          "block": {
            "attributes": {
              "description": {
                "type": "string",
                "description": "An optional description of this resource. Provide this property when\nyou create the resource.",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "ip_address": {
                "type": "string",
                "description": "The IP address that this forwarding rule is serving on behalf of.\n\nAddresses are restricted based on the forwarding rule's load balancing\nscheme (EXTERNAL or INTERNAL) and scope (global or regional).\n\nWhen the load balancing scheme is EXTERNAL, for global forwarding\nrules, the address must be a global IP, and for regional forwarding\nrules, the address must live in the same region as the forwarding\nrule. If this field is empty, an ephemeral IPv4 address from the same\nscope (global or regional) will be assigned. A regional forwarding\nrule supports IPv4 only. A global forwarding rule supports either IPv4\nor IPv6.\n\nWhen the load balancing scheme is INTERNAL, this can only be an RFC\n1918 IP address belonging to the network/subnet configured for the\nforwarding rule. By default, if this field is empty, an ephemeral\ninternal IP address will be automatically allocated from the IP range\nof the subnet or network configured for this forwarding rule.\n\nAn address must be specified by a literal IP address. ~> **NOTE**: While\nthe API allows you to specify various resource paths for an address resource\ninstead, Terraform requires this to specifically be an IP address to\navoid needing to fetching the IP address from resource paths on refresh\nor unnecessary diffs.",
                "optional": true,
                "computed": true
              },
              "ip_protocol": {
                "type": "string",
                "description": "The IP protocol to which this rule applies. Valid options are TCP,\nUDP, ESP, AH, SCTP or ICMP. When the load balancing scheme is\nINTERNAL_SELF_MANAGED, only TCP is valid.",
                "optional": true,
                "computed": true
              },
              "ip_version": {
                "type": "string",
                "description": "The IP Version that will be used by this global forwarding rule.\nValid options are IPV4 or IPV6.",
                "optional": true
              },
              "load_balancing_scheme": {
                "type": "string",
                "description": "This signifies what the GlobalForwardingRule will be used for.\nThe value of INTERNAL_SELF_MANAGED means that this will be used for\nInternal Global HTTP(S) LB. The value of EXTERNAL means that this\nwill be used for External Global Load Balancing (HTTP(S) LB,\nExternal TCP/UDP LB, SSL Proxy)\n\nNOTE: Currently global forwarding rules cannot be used for INTERNAL\nload balancing.",
                "optional": true
              },
              "name": {
                "type": "string",
                "description": "Name of the resource; provided by the client when the resource is\ncreated. The name must be 1-63 characters long, and comply with\nRFC1035. Specifically, the name must be 1-63 characters long and match\nthe regular expression '[a-z]([-a-z0-9]*[a-z0-9])?' which means the\nfirst character must be a lowercase letter, and all following\ncharacters must be a dash, lowercase letter, or digit, except the last\ncharacter, which cannot be a dash.",
                "required": true
              },
              "port_range": {
                "type": "string",
                "description": "This field is used along with the target field for TargetHttpProxy,\nTargetHttpsProxy, TargetSslProxy, TargetTcpProxy, TargetVpnGateway,\nTargetPool, TargetInstance.\n\nApplicable only when IPProtocol is TCP, UDP, or SCTP, only packets\naddressed to ports in the specified range will be forwarded to target.\nForwarding rules with the same [IPAddress, IPProtocol] pair must have\ndisjoint port ranges.\n\nSome types of forwarding target have constraints on the acceptable\nports:\n\n* TargetHttpProxy: 80, 8080\n* TargetHttpsProxy: 443\n* TargetTcpProxy: 25, 43, 110, 143, 195, 443, 465, 587, 700, 993, 995,\n                  1883, 5222\n* TargetSslProxy: 25, 43, 110, 143, 195, 443, 465, 587, 700, 993, 995,\n                  1883, 5222\n* TargetVpnGateway: 500, 4500",
                "optional": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "self_link": {
                "type": "string",
                "computed": true
              },
              "target": {
                "type": "string",
                "description": "The URL of the target resource to receive the matched traffic.\nThe forwarded traffic must be of a type appropriate to the target object.\nFor INTERNAL_SELF_MANAGED load balancing, only HTTP and HTTPS targets\nare valid.",
                "required": true
              }
            },
            "block_types": {
              "metadata_filters": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "filter_match_criteria": {
                      "type": "string",
                      "description": "Specifies how individual filterLabel matches within the list of\nfilterLabels contribute towards the overall metadataFilter match.\n\nMATCH_ANY - At least one of the filterLabels must have a matching\nlabel in the provided metadata.\nMATCH_ALL - All filterLabels must have matching labels in the\nprovided metadata.",
                      "required": true
                    }
                  },
                  "block_types": {
                    "filter_labels": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "name": {
                            "type": "string",
                            "description": "Name of the metadata label. The length must be between\n1 and 1024 characters, inclusive.",
                            "required": true
                          },
                          "value": {
                            "type": "string",
                            "description": "The value that the label must match. The value has a maximum\nlength of 1024 characters.",
                            "required": true
                          }
                        }
                      },
                      "min_items": 1,
                      "max_items": 64
                    }
                  }
                }
              },
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "google_compute_health_check": {
          "version": 0,
          "block": {
            "attributes": {
              "check_interval_sec": {
                "type": "number",
                "description": "How often (in seconds) to send a health check. The default value is 5\nseconds.",
                "optional": true
              },
              "creation_timestamp": {
                "type": "string",
                "description": "Creation timestamp in RFC3339 text format.",
                "computed": true
              },
              "description": {
                "type": "string",
                "description": "An optional description of this resource. Provide this property when\nyou create the resource.",
                "optional": true
              },
              "healthy_threshold": {
                "type": "number",
                "description": "A so-far unhealthy instance will be marked healthy after this many\nconsecutive successes. The default value is 2.",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "Name of the resource. Provided by the client when the resource is\ncreated. The name must be 1-63 characters long, and comply with\nRFC1035.  Specifically, the name must be 1-63 characters long and\nmatch the regular expression '[a-z]([-a-z0-9]*[a-z0-9])?' which means\nthe first character must be a lowercase letter, and all following\ncharacters must be a dash, lowercase letter, or digit, except the\nlast character, which cannot be a dash.",
                "required": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "self_link": {
                "type": "string",
                "computed": true
              },
              "timeout_sec": {
                "type": "number",
                "description": "How long (in seconds) to wait before claiming failure.\nThe default value is 5 seconds.  It is invalid for timeoutSec to have\ngreater value than checkIntervalSec.",
                "optional": true
              },
              "type": {
                "type": "string",
                "description": "The type of the health check. One of HTTP, HTTPS, TCP, or SSL.",
                "computed": true
              },
              "unhealthy_threshold": {
                "type": "number",
                "description": "A so-far healthy instance will be marked unhealthy after this many\nconsecutive failures. The default value is 2.",
                "optional": true
              }
            },
            "block_types": {
              "http2_health_check": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "host": {
                      "type": "string",
                      "description": "The value of the host header in the HTTP2 health check request.\nIf left empty (default value), the public IP on behalf of which this health\ncheck is performed will be used.",
                      "optional": true
                    },
                    "port": {
                      "type": "number",
                      "description": "The TCP port number for the HTTP2 health check request.\nThe default value is 443.",
                      "optional": true
                    },
                    "port_name": {
                      "type": "string",
                      "description": "Port name as defined in InstanceGroup#NamedPort#name. If both port and\nport_name are defined, port takes precedence.",
                      "optional": true
                    },
                    "port_specification": {
                      "type": "string",
                      "description": "Specifies how port is selected for health checking, can be one of the\nfollowing values:\n\n  * 'USE_FIXED_PORT': The port number in 'port' is used for health checking.\n\n  * 'USE_NAMED_PORT': The 'portName' is used for health checking.\n\n  * 'USE_SERVING_PORT': For NetworkEndpointGroup, the port specified for each\n  network endpoint is used for health checking. For other backends, the\n  port or named port specified in the Backend Service is used for health\n  checking.\n\nIf not specified, HTTP2 health check follows behavior specified in 'port' and\n'portName' fields.",
                      "optional": true
                    },
                    "proxy_header": {
                      "type": "string",
                      "description": "Specifies the type of proxy header to append before sending data to the\nbackend, either NONE or PROXY_V1. The default is NONE.",
                      "optional": true
                    },
                    "request_path": {
                      "type": "string",
                      "description": "The request path of the HTTP2 health check request.\nThe default value is /.",
                      "optional": true
                    },
                    "response": {
                      "type": "string",
                      "description": "The bytes to match against the beginning of the response data. If left empty\n(the default value), any response will indicate health. The response data\ncan only be ASCII.",
                      "optional": true
                    }
                  }
                },
                "max_items": 1
              },
              "http_health_check": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "host": {
                      "type": "string",
                      "description": "The value of the host header in the HTTP health check request.\nIf left empty (default value), the public IP on behalf of which this health\ncheck is performed will be used.",
                      "optional": true
                    },
                    "port": {
                      "type": "number",
                      "description": "The TCP port number for the HTTP health check request.\nThe default value is 80.",
                      "optional": true
                    },
                    "port_name": {
                      "type": "string",
                      "description": "Port name as defined in InstanceGroup#NamedPort#name. If both port and\nport_name are defined, port takes precedence.",
                      "optional": true
                    },
                    "port_specification": {
                      "type": "string",
                      "description": "Specifies how port is selected for health checking, can be one of the\nfollowing values:\n\n  * 'USE_FIXED_PORT': The port number in 'port' is used for health checking.\n\n  * 'USE_NAMED_PORT': The 'portName' is used for health checking.\n\n  * 'USE_SERVING_PORT': For NetworkEndpointGroup, the port specified for each\n  network endpoint is used for health checking. For other backends, the\n  port or named port specified in the Backend Service is used for health\n  checking.\n\nIf not specified, HTTP health check follows behavior specified in 'port' and\n'portName' fields.",
                      "optional": true
                    },
                    "proxy_header": {
                      "type": "string",
                      "description": "Specifies the type of proxy header to append before sending data to the\nbackend, either NONE or PROXY_V1. The default is NONE.",
                      "optional": true
                    },
                    "request_path": {
                      "type": "string",
                      "description": "The request path of the HTTP health check request.\nThe default value is /.",
                      "optional": true
                    },
                    "response": {
                      "type": "string",
                      "description": "The bytes to match against the beginning of the response data. If left empty\n(the default value), any response will indicate health. The response data\ncan only be ASCII.",
                      "optional": true
                    }
                  }
                },
                "max_items": 1
              },
              "https_health_check": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "host": {
                      "type": "string",
                      "description": "The value of the host header in the HTTPS health check request.\nIf left empty (default value), the public IP on behalf of which this health\ncheck is performed will be used.",
                      "optional": true
                    },
                    "port": {
                      "type": "number",
                      "description": "The TCP port number for the HTTPS health check request.\nThe default value is 443.",
                      "optional": true
                    },
                    "port_name": {
                      "type": "string",
                      "description": "Port name as defined in InstanceGroup#NamedPort#name. If both port and\nport_name are defined, port takes precedence.",
                      "optional": true
                    },
                    "port_specification": {
                      "type": "string",
                      "description": "Specifies how port is selected for health checking, can be one of the\nfollowing values:\n\n  * 'USE_FIXED_PORT': The port number in 'port' is used for health checking.\n\n  * 'USE_NAMED_PORT': The 'portName' is used for health checking.\n\n  * 'USE_SERVING_PORT': For NetworkEndpointGroup, the port specified for each\n  network endpoint is used for health checking. For other backends, the\n  port or named port specified in the Backend Service is used for health\n  checking.\n\nIf not specified, HTTPS health check follows behavior specified in 'port' and\n'portName' fields.",
                      "optional": true
                    },
                    "proxy_header": {
                      "type": "string",
                      "description": "Specifies the type of proxy header to append before sending data to the\nbackend, either NONE or PROXY_V1. The default is NONE.",
                      "optional": true
                    },
                    "request_path": {
                      "type": "string",
                      "description": "The request path of the HTTPS health check request.\nThe default value is /.",
                      "optional": true
                    },
                    "response": {
                      "type": "string",
                      "description": "The bytes to match against the beginning of the response data. If left empty\n(the default value), any response will indicate health. The response data\ncan only be ASCII.",
                      "optional": true
                    }
                  }
                },
                "max_items": 1
              },
              "ssl_health_check": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "port": {
                      "type": "number",
                      "description": "The TCP port number for the SSL health check request.\nThe default value is 443.",
                      "optional": true
                    },
                    "port_name": {
                      "type": "string",
                      "description": "Port name as defined in InstanceGroup#NamedPort#name. If both port and\nport_name are defined, port takes precedence.",
                      "optional": true
                    },
                    "port_specification": {
                      "type": "string",
                      "description": "Specifies how port is selected for health checking, can be one of the\nfollowing values:\n\n  * 'USE_FIXED_PORT': The port number in 'port' is used for health checking.\n\n  * 'USE_NAMED_PORT': The 'portName' is used for health checking.\n\n  * 'USE_SERVING_PORT': For NetworkEndpointGroup, the port specified for each\n  network endpoint is used for health checking. For other backends, the\n  port or named port specified in the Backend Service is used for health\n  checking.\n\nIf not specified, SSL health check follows behavior specified in 'port' and\n'portName' fields.",
                      "optional": true
                    },
                    "proxy_header": {
                      "type": "string",
                      "description": "Specifies the type of proxy header to append before sending data to the\nbackend, either NONE or PROXY_V1. The default is NONE.",
                      "optional": true
                    },
                    "request": {
                      "type": "string",
                      "description": "The application data to send once the SSL connection has been\nestablished (default value is empty). If both request and response are\nempty, the connection establishment alone will indicate health. The request\ndata can only be ASCII.",
                      "optional": true
                    },
                    "response": {
                      "type": "string",
                      "description": "The bytes to match against the beginning of the response data. If left empty\n(the default value), any response will indicate health. The response data\ncan only be ASCII.",
                      "optional": true
                    }
                  }
                },
                "max_items": 1
              },
              "tcp_health_check": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "port": {
                      "type": "number",
                      "description": "The TCP port number for the TCP health check request.\nThe default value is 443.",
                      "optional": true
                    },
                    "port_name": {
                      "type": "string",
                      "description": "Port name as defined in InstanceGroup#NamedPort#name. If both port and\nport_name are defined, port takes precedence.",
                      "optional": true
                    },
                    "port_specification": {
                      "type": "string",
                      "description": "Specifies how port is selected for health checking, can be one of the\nfollowing values:\n\n  * 'USE_FIXED_PORT': The port number in 'port' is used for health checking.\n\n  * 'USE_NAMED_PORT': The 'portName' is used for health checking.\n\n  * 'USE_SERVING_PORT': For NetworkEndpointGroup, the port specified for each\n  network endpoint is used for health checking. For other backends, the\n  port or named port specified in the Backend Service is used for health\n  checking.\n\nIf not specified, TCP health check follows behavior specified in 'port' and\n'portName' fields.",
                      "optional": true
                    },
                    "proxy_header": {
                      "type": "string",
                      "description": "Specifies the type of proxy header to append before sending data to the\nbackend, either NONE or PROXY_V1. The default is NONE.",
                      "optional": true
                    },
                    "request": {
                      "type": "string",
                      "description": "The application data to send once the TCP connection has been\nestablished (default value is empty). If both request and response are\nempty, the connection establishment alone will indicate health. The request\ndata can only be ASCII.",
                      "optional": true
                    },
                    "response": {
                      "type": "string",
                      "description": "The bytes to match against the beginning of the response data. If left empty\n(the default value), any response will indicate health. The response data\ncan only be ASCII.",
                      "optional": true
                    }
                  }
                },
                "max_items": 1
              },
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "google_compute_http_health_check": {
          "version": 0,
          "block": {
            "attributes": {
              "check_interval_sec": {
                "type": "number",
                "description": "How often (in seconds) to send a health check. The default value is 5\nseconds.",
                "optional": true
              },
              "creation_timestamp": {
                "type": "string",
                "description": "Creation timestamp in RFC3339 text format.",
                "computed": true
              },
              "description": {
                "type": "string",
                "description": "An optional description of this resource. Provide this property when\nyou create the resource.",
                "optional": true
              },
              "healthy_threshold": {
                "type": "number",
                "description": "A so-far unhealthy instance will be marked healthy after this many\nconsecutive successes. The default value is 2.",
                "optional": true
              },
              "host": {
                "type": "string",
                "description": "The value of the host header in the HTTP health check request. If\nleft empty (default value), the public IP on behalf of which this\nhealth check is performed will be used.",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "Name of the resource. Provided by the client when the resource is\ncreated. The name must be 1-63 characters long, and comply with\nRFC1035.  Specifically, the name must be 1-63 characters long and\nmatch the regular expression '[a-z]([-a-z0-9]*[a-z0-9])?' which means\nthe first character must be a lowercase letter, and all following\ncharacters must be a dash, lowercase letter, or digit, except the\nlast character, which cannot be a dash.",
                "required": true
              },
              "port": {
                "type": "number",
                "description": "The TCP port number for the HTTP health check request.\nThe default value is 80.",
                "optional": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "request_path": {
                "type": "string",
                "description": "The request path of the HTTP health check request.\nThe default value is /.",
                "optional": true
              },
              "self_link": {
                "type": "string",
                "computed": true
              },
              "timeout_sec": {
                "type": "number",
                "description": "How long (in seconds) to wait before claiming failure.\nThe default value is 5 seconds.  It is invalid for timeoutSec to have\ngreater value than checkIntervalSec.",
                "optional": true
              },
              "unhealthy_threshold": {
                "type": "number",
                "description": "A so-far healthy instance will be marked unhealthy after this many\nconsecutive failures. The default value is 2.",
                "optional": true
              }
            },
            "block_types": {
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "google_compute_https_health_check": {
          "version": 0,
          "block": {
            "attributes": {
              "check_interval_sec": {
                "type": "number",
                "description": "How often (in seconds) to send a health check. The default value is 5\nseconds.",
                "optional": true
              },
              "creation_timestamp": {
                "type": "string",
                "description": "Creation timestamp in RFC3339 text format.",
                "computed": true
              },
              "description": {
                "type": "string",
                "description": "An optional description of this resource. Provide this property when\nyou create the resource.",
                "optional": true
              },
              "healthy_threshold": {
                "type": "number",
                "description": "A so-far unhealthy instance will be marked healthy after this many\nconsecutive successes. The default value is 2.",
                "optional": true
              },
              "host": {
                "type": "string",
                "description": "The value of the host header in the HTTPS health check request. If\nleft empty (default value), the public IP on behalf of which this\nhealth check is performed will be used.",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "Name of the resource. Provided by the client when the resource is\ncreated. The name must be 1-63 characters long, and comply with\nRFC1035.  Specifically, the name must be 1-63 characters long and\nmatch the regular expression '[a-z]([-a-z0-9]*[a-z0-9])?' which means\nthe first character must be a lowercase letter, and all following\ncharacters must be a dash, lowercase letter, or digit, except the\nlast character, which cannot be a dash.",
                "required": true
              },
              "port": {
                "type": "number",
                "description": "The TCP port number for the HTTPS health check request.\nThe default value is 80.",
                "optional": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "request_path": {
                "type": "string",
                "description": "The request path of the HTTPS health check request.\nThe default value is /.",
                "optional": true
              },
              "self_link": {
                "type": "string",
                "computed": true
              },
              "timeout_sec": {
                "type": "number",
                "description": "How long (in seconds) to wait before claiming failure.\nThe default value is 5 seconds.  It is invalid for timeoutSec to have\ngreater value than checkIntervalSec.",
                "optional": true
              },
              "unhealthy_threshold": {
                "type": "number",
                "description": "A so-far healthy instance will be marked unhealthy after this many\nconsecutive failures. The default value is 2.",
                "optional": true
              }
            },
            "block_types": {
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "google_compute_image": {
          "version": 0,
          "block": {
            "attributes": {
              "archive_size_bytes": {
                "type": "number",
                "description": "Size of the image tar.gz archive stored in Google Cloud Storage (in\nbytes).",
                "computed": true
              },
              "creation_timestamp": {
                "type": "string",
                "description": "Creation timestamp in RFC3339 text format.",
                "computed": true
              },
              "description": {
                "type": "string",
                "description": "An optional description of this resource. Provide this property when\nyou create the resource.",
                "optional": true
              },
              "disk_size_gb": {
                "type": "number",
                "description": "Size of the image when restored onto a persistent disk (in GB).",
                "optional": true,
                "computed": true
              },
              "family": {
                "type": "string",
                "description": "The name of the image family to which this image belongs. You can\ncreate disks by specifying an image family instead of a specific\nimage name. The image family always returns its latest image that is\nnot deprecated. The name of the image family must comply with\nRFC1035.",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "label_fingerprint": {
                "type": "string",
                "description": "The fingerprint used for optimistic locking of this resource. Used\ninternally during updates.",
                "computed": true
              },
              "labels": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "Labels to apply to this Image.",
                "optional": true
              },
              "licenses": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "Any applicable license URI.",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "Name of the resource; provided by the client when the resource is\ncreated. The name must be 1-63 characters long, and comply with\nRFC1035. Specifically, the name must be 1-63 characters long and\nmatch the regular expression '[a-z]([-a-z0-9]*[a-z0-9])?' which means\nthe first character must be a lowercase letter, and all following\ncharacters must be a dash, lowercase letter, or digit, except the\nlast character, which cannot be a dash.",
                "required": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "self_link": {
                "type": "string",
                "computed": true
              },
              "source_disk": {
                "type": "string",
                "description": "The source disk to create this image based on.\nYou must provide either this property or the\nrawDisk.source property but not both to create an image.",
                "optional": true
              }
            },
            "block_types": {
              "guest_os_features": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "type": {
                      "type": "string",
                      "description": "The type of supported feature. Read [Enabling guest operating system features](https://cloud.google.com/compute/docs/images/create-delete-deprecate-private-images#guest-os-features) to see a list of available options.",
                      "required": true
                    }
                  }
                }
              },
              "raw_disk": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "container_type": {
                      "type": "string",
                      "description": "The format used to encode and transmit the block device, which\nshould be TAR. This is just a container and transmission format\nand not a runtime format. Provided by the client when the disk\nimage is created.",
                      "optional": true
                    },
                    "sha1": {
                      "type": "string",
                      "description": "An optional SHA1 checksum of the disk image before unpackaging.\nThis is provided by the client when the disk image is created.",
                      "optional": true
                    },
                    "source": {
                      "type": "string",
                      "description": "The full Google Cloud Storage URL where disk storage is stored\nYou must provide either this property or the sourceDisk property\nbut not both.",
                      "required": true
                    }
                  }
                },
                "max_items": 1
              },
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "google_compute_instance": {
          "version": 6,
          "block": {
            "attributes": {
              "allow_stopping_for_update": {
                "type": "bool",
                "optional": true
              },
              "can_ip_forward": {
                "type": "bool",
                "optional": true
              },
              "cpu_platform": {
                "type": "string",
                "computed": true
              },
              "deletion_protection": {
                "type": "bool",
                "optional": true
              },
              "description": {
                "type": "string",
                "optional": true
              },
              "desired_status": {
                "type": "string",
                "optional": true
              },
              "enable_display": {
                "type": "bool",
                "optional": true
              },
              "guest_accelerator": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "count": "number",
                      "type": "string"
                    }
                  ]
                ],
                "optional": true,
                "computed": true
              },
              "hostname": {
                "type": "string",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "instance_id": {
                "type": "string",
                "computed": true
              },
              "label_fingerprint": {
                "type": "string",
                "computed": true
              },
              "labels": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              },
              "machine_type": {
                "type": "string",
                "required": true
              },
              "metadata": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              },
              "metadata_fingerprint": {
                "type": "string",
                "computed": true
              },
              "metadata_startup_script": {
                "type": "string",
                "optional": true
              },
              "min_cpu_platform": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "self_link": {
                "type": "string",
                "computed": true
              },
              "tags": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true
              },
              "tags_fingerprint": {
                "type": "string",
                "computed": true
              },
              "zone": {
                "type": "string",
                "optional": true,
                "computed": true
              }
            },
            "block_types": {
              "attached_disk": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "device_name": {
                      "type": "string",
                      "optional": true,
                      "computed": true
                    },
                    "disk_encryption_key_raw": {
                      "type": "string",
                      "optional": true,
                      "sensitive": true
                    },
                    "disk_encryption_key_sha256": {
                      "type": "string",
                      "computed": true
                    },
                    "kms_key_self_link": {
                      "type": "string",
                      "optional": true,
                      "computed": true
                    },
                    "mode": {
                      "type": "string",
                      "optional": true
                    },
                    "source": {
                      "type": "string",
                      "required": true
                    }
                  }
                }
              },
              "boot_disk": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "auto_delete": {
                      "type": "bool",
                      "optional": true
                    },
                    "device_name": {
                      "type": "string",
                      "optional": true,
                      "computed": true
                    },
                    "disk_encryption_key_raw": {
                      "type": "string",
                      "optional": true,
                      "sensitive": true
                    },
                    "disk_encryption_key_sha256": {
                      "type": "string",
                      "computed": true
                    },
                    "kms_key_self_link": {
                      "type": "string",
                      "optional": true,
                      "computed": true
                    },
                    "mode": {
                      "type": "string",
                      "optional": true
                    },
                    "source": {
                      "type": "string",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "block_types": {
                    "initialize_params": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "image": {
                            "type": "string",
                            "optional": true,
                            "computed": true
                          },
                          "labels": {
                            "type": [
                              "map",
                              "string"
                            ],
                            "optional": true,
                            "computed": true
                          },
                          "size": {
                            "type": "number",
                            "optional": true,
                            "computed": true
                          },
                          "type": {
                            "type": "string",
                            "optional": true,
                            "computed": true
                          }
                        }
                      },
                      "max_items": 1
                    }
                  }
                },
                "min_items": 1,
                "max_items": 1
              },
              "network_interface": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "name": {
                      "type": "string",
                      "computed": true
                    },
                    "network": {
                      "type": "string",
                      "optional": true,
                      "computed": true
                    },
                    "network_ip": {
                      "type": "string",
                      "optional": true,
                      "computed": true
                    },
                    "subnetwork": {
                      "type": "string",
                      "optional": true,
                      "computed": true
                    },
                    "subnetwork_project": {
                      "type": "string",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "block_types": {
                    "access_config": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "nat_ip": {
                            "type": "string",
                            "optional": true,
                            "computed": true
                          },
                          "network_tier": {
                            "type": "string",
                            "optional": true,
                            "computed": true
                          },
                          "public_ptr_domain_name": {
                            "type": "string",
                            "optional": true
                          }
                        }
                      }
                    },
                    "alias_ip_range": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "ip_cidr_range": {
                            "type": "string",
                            "required": true
                          },
                          "subnetwork_range_name": {
                            "type": "string",
                            "optional": true
                          }
                        }
                      }
                    }
                  }
                },
                "min_items": 1
              },
              "scheduling": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "automatic_restart": {
                      "type": "bool",
                      "optional": true
                    },
                    "on_host_maintenance": {
                      "type": "string",
                      "optional": true,
                      "computed": true
                    },
                    "preemptible": {
                      "type": "bool",
                      "optional": true
                    }
                  },
                  "block_types": {
                    "node_affinities": {
                      "nesting_mode": "set",
                      "block": {
                        "attributes": {
                          "key": {
                            "type": "string",
                            "required": true
                          },
                          "operator": {
                            "type": "string",
                            "required": true
                          },
                          "values": {
                            "type": [
                              "set",
                              "string"
                            ],
                            "required": true
                          }
                        }
                      }
                    }
                  }
                },
                "max_items": 1
              },
              "scratch_disk": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "interface": {
                      "type": "string",
                      "required": true
                    }
                  }
                }
              },
              "service_account": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "email": {
                      "type": "string",
                      "optional": true,
                      "computed": true
                    },
                    "scopes": {
                      "type": [
                        "set",
                        "string"
                      ],
                      "required": true
                    }
                  }
                },
                "max_items": 1
              },
              "shielded_instance_config": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "enable_integrity_monitoring": {
                      "type": "bool",
                      "optional": true
                    },
                    "enable_secure_boot": {
                      "type": "bool",
                      "optional": true
                    },
                    "enable_vtpm": {
                      "type": "bool",
                      "optional": true
                    }
                  }
                },
                "max_items": 1
              },
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "google_compute_instance_from_template": {
          "version": 0,
          "block": {
            "attributes": {
              "allow_stopping_for_update": {
                "type": "bool",
                "optional": true,
                "computed": true
              },
              "attached_disk": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "device_name": "string",
                      "disk_encryption_key_raw": "string",
                      "disk_encryption_key_sha256": "string",
                      "kms_key_self_link": "string",
                      "mode": "string",
                      "source": "string"
                    }
                  ]
                ],
                "optional": true,
                "computed": true
              },
              "can_ip_forward": {
                "type": "bool",
                "optional": true,
                "computed": true
              },
              "cpu_platform": {
                "type": "string",
                "computed": true
              },
              "deletion_protection": {
                "type": "bool",
                "optional": true,
                "computed": true
              },
              "description": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "desired_status": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "enable_display": {
                "type": "bool",
                "optional": true,
                "computed": true
              },
              "guest_accelerator": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "count": "number",
                      "type": "string"
                    }
                  ]
                ],
                "optional": true,
                "computed": true
              },
              "hostname": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "instance_id": {
                "type": "string",
                "computed": true
              },
              "label_fingerprint": {
                "type": "string",
                "computed": true
              },
              "labels": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true,
                "computed": true
              },
              "machine_type": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "metadata": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true,
                "computed": true
              },
              "metadata_fingerprint": {
                "type": "string",
                "computed": true
              },
              "metadata_startup_script": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "min_cpu_platform": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "scratch_disk": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "interface": "string"
                    }
                  ]
                ],
                "optional": true,
                "computed": true
              },
              "self_link": {
                "type": "string",
                "computed": true
              },
              "service_account": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "email": "string",
                      "scopes": [
                        "set",
                        "string"
                      ]
                    }
                  ]
                ],
                "optional": true,
                "computed": true
              },
              "source_instance_template": {
                "type": "string",
                "required": true
              },
              "tags": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true,
                "computed": true
              },
              "tags_fingerprint": {
                "type": "string",
                "computed": true
              },
              "zone": {
                "type": "string",
                "optional": true,
                "computed": true
              }
            },
            "block_types": {
              "boot_disk": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "auto_delete": {
                      "type": "bool",
                      "optional": true,
                      "computed": true
                    },
                    "device_name": {
                      "type": "string",
                      "optional": true,
                      "computed": true
                    },
                    "disk_encryption_key_raw": {
                      "type": "string",
                      "optional": true,
                      "computed": true,
                      "sensitive": true
                    },
                    "disk_encryption_key_sha256": {
                      "type": "string",
                      "computed": true
                    },
                    "kms_key_self_link": {
                      "type": "string",
                      "optional": true,
                      "computed": true
                    },
                    "mode": {
                      "type": "string",
                      "optional": true,
                      "computed": true
                    },
                    "source": {
                      "type": "string",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "block_types": {
                    "initialize_params": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "image": {
                            "type": "string",
                            "optional": true,
                            "computed": true
                          },
                          "labels": {
                            "type": [
                              "map",
                              "string"
                            ],
                            "optional": true,
                            "computed": true
                          },
                          "size": {
                            "type": "number",
                            "optional": true,
                            "computed": true
                          },
                          "type": {
                            "type": "string",
                            "optional": true,
                            "computed": true
                          }
                        }
                      },
                      "max_items": 1
                    }
                  }
                },
                "max_items": 1
              },
              "network_interface": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "access_config": {
                      "type": [
                        "list",
                        [
                          "object",
                          {
                            "nat_ip": "string",
                            "network_tier": "string",
                            "public_ptr_domain_name": "string"
                          }
                        ]
                      ],
                      "optional": true,
                      "computed": true
                    },
                    "alias_ip_range": {
                      "type": [
                        "list",
                        [
                          "object",
                          {
                            "ip_cidr_range": "string",
                            "subnetwork_range_name": "string"
                          }
                        ]
                      ],
                      "optional": true,
                      "computed": true
                    },
                    "name": {
                      "type": "string",
                      "computed": true
                    },
                    "network": {
                      "type": "string",
                      "optional": true,
                      "computed": true
                    },
                    "network_ip": {
                      "type": "string",
                      "optional": true,
                      "computed": true
                    },
                    "subnetwork": {
                      "type": "string",
                      "optional": true,
                      "computed": true
                    },
                    "subnetwork_project": {
                      "type": "string",
                      "optional": true,
                      "computed": true
                    }
                  }
                }
              },
              "scheduling": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "automatic_restart": {
                      "type": "bool",
                      "optional": true,
                      "computed": true
                    },
                    "on_host_maintenance": {
                      "type": "string",
                      "optional": true,
                      "computed": true
                    },
                    "preemptible": {
                      "type": "bool",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "block_types": {
                    "node_affinities": {
                      "nesting_mode": "set",
                      "block": {
                        "attributes": {
                          "key": {
                            "type": "string",
                            "required": true
                          },
                          "operator": {
                            "type": "string",
                            "required": true
                          },
                          "values": {
                            "type": [
                              "set",
                              "string"
                            ],
                            "required": true
                          }
                        }
                      }
                    }
                  }
                },
                "max_items": 1
              },
              "shielded_instance_config": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "enable_integrity_monitoring": {
                      "type": "bool",
                      "optional": true,
                      "computed": true
                    },
                    "enable_secure_boot": {
                      "type": "bool",
                      "optional": true,
                      "computed": true
                    },
                    "enable_vtpm": {
                      "type": "bool",
                      "optional": true,
                      "computed": true
                    }
                  }
                },
                "max_items": 1
              },
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "google_compute_instance_group": {
          "version": 2,
          "block": {
            "attributes": {
              "description": {
                "type": "string",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "instances": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "network": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "self_link": {
                "type": "string",
                "computed": true
              },
              "size": {
                "type": "number",
                "computed": true
              },
              "zone": {
                "type": "string",
                "optional": true,
                "computed": true
              }
            },
            "block_types": {
              "named_port": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "name": {
                      "type": "string",
                      "required": true
                    },
                    "port": {
                      "type": "number",
                      "required": true
                    }
                  }
                }
              }
            }
          }
        },
        "google_compute_instance_group_manager": {
          "version": 0,
          "block": {
            "attributes": {
              "base_instance_name": {
                "type": "string",
                "required": true
              },
              "description": {
                "type": "string",
                "optional": true
              },
              "fingerprint": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "instance_group": {
                "type": "string",
                "computed": true
              },
              "instance_template": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "self_link": {
                "type": "string",
                "computed": true
              },
              "target_pools": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true
              },
              "target_size": {
                "type": "number",
                "optional": true,
                "computed": true
              },
              "update_strategy": {
                "type": "string",
                "computed": true
              },
              "wait_for_instances": {
                "type": "bool",
                "optional": true
              },
              "zone": {
                "type": "string",
                "optional": true,
                "computed": true
              }
            },
            "block_types": {
              "auto_healing_policies": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "health_check": {
                      "type": "string",
                      "required": true
                    },
                    "initial_delay_sec": {
                      "type": "number",
                      "required": true
                    }
                  }
                },
                "max_items": 1
              },
              "named_port": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "name": {
                      "type": "string",
                      "required": true
                    },
                    "port": {
                      "type": "number",
                      "required": true
                    }
                  }
                }
              },
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              },
              "update_policy": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "max_surge_fixed": {
                      "type": "number",
                      "optional": true,
                      "computed": true
                    },
                    "max_surge_percent": {
                      "type": "number",
                      "optional": true
                    },
                    "max_unavailable_fixed": {
                      "type": "number",
                      "optional": true,
                      "computed": true
                    },
                    "max_unavailable_percent": {
                      "type": "number",
                      "optional": true
                    },
                    "min_ready_sec": {
                      "type": "number",
                      "optional": true
                    },
                    "minimal_action": {
                      "type": "string",
                      "required": true
                    },
                    "type": {
                      "type": "string",
                      "required": true
                    }
                  }
                },
                "max_items": 1
              },
              "version": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "instance_template": {
                      "type": "string",
                      "required": true
                    },
                    "name": {
                      "type": "string",
                      "optional": true
                    }
                  },
                  "block_types": {
                    "target_size": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "fixed": {
                            "type": "number",
                            "optional": true
                          },
                          "percent": {
                            "type": "number",
                            "optional": true
                          }
                        }
                      },
                      "max_items": 1
                    }
                  }
                },
                "min_items": 1
              }
            }
          }
        },
        "google_compute_instance_iam_binding": {
          "version": 0,
          "block": {
            "attributes": {
              "etag": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "instance_name": {
                "type": "string",
                "required": true
              },
              "members": {
                "type": [
                  "set",
                  "string"
                ],
                "required": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "role": {
                "type": "string",
                "required": true
              },
              "zone": {
                "type": "string",
                "optional": true,
                "computed": true
              }
            }
          }
        },
        "google_compute_instance_iam_member": {
          "version": 0,
          "block": {
            "attributes": {
              "etag": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "instance_name": {
                "type": "string",
                "required": true
              },
              "member": {
                "type": "string",
                "required": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "role": {
                "type": "string",
                "required": true
              },
              "zone": {
                "type": "string",
                "optional": true,
                "computed": true
              }
            }
          }
        },
        "google_compute_instance_iam_policy": {
          "version": 0,
          "block": {
            "attributes": {
              "etag": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "instance_name": {
                "type": "string",
                "required": true
              },
              "policy_data": {
                "type": "string",
                "required": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "zone": {
                "type": "string",
                "optional": true,
                "computed": true
              }
            }
          }
        },
        "google_compute_instance_template": {
          "version": 1,
          "block": {
            "attributes": {
              "can_ip_forward": {
                "type": "bool",
                "optional": true
              },
              "description": {
                "type": "string",
                "optional": true
              },
              "enable_display": {
                "type": "bool",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "instance_description": {
                "type": "string",
                "optional": true
              },
              "labels": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              },
              "machine_type": {
                "type": "string",
                "required": true
              },
              "metadata": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              },
              "metadata_fingerprint": {
                "type": "string",
                "computed": true
              },
              "metadata_startup_script": {
                "type": "string",
                "optional": true
              },
              "min_cpu_platform": {
                "type": "string",
                "optional": true
              },
              "name": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name_prefix": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "region": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "self_link": {
                "type": "string",
                "computed": true
              },
              "tags": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true
              },
              "tags_fingerprint": {
                "type": "string",
                "computed": true
              }
            },
            "block_types": {
              "disk": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "auto_delete": {
                      "type": "bool",
                      "optional": true
                    },
                    "boot": {
                      "type": "bool",
                      "optional": true,
                      "computed": true
                    },
                    "device_name": {
                      "type": "string",
                      "optional": true,
                      "computed": true
                    },
                    "disk_name": {
                      "type": "string",
                      "optional": true
                    },
                    "disk_size_gb": {
                      "type": "number",
                      "optional": true
                    },
                    "disk_type": {
                      "type": "string",
                      "optional": true,
                      "computed": true
                    },
                    "interface": {
                      "type": "string",
                      "optional": true,
                      "computed": true
                    },
                    "labels": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "optional": true
                    },
                    "mode": {
                      "type": "string",
                      "optional": true,
                      "computed": true
                    },
                    "source": {
                      "type": "string",
                      "optional": true
                    },
                    "source_image": {
                      "type": "string",
                      "optional": true,
                      "computed": true
                    },
                    "type": {
                      "type": "string",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "block_types": {
                    "disk_encryption_key": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "kms_key_self_link": {
                            "type": "string",
                            "required": true
                          }
                        }
                      },
                      "max_items": 1
                    }
                  }
                },
                "min_items": 1
              },
              "guest_accelerator": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "count": {
                      "type": "number",
                      "required": true
                    },
                    "type": {
                      "type": "string",
                      "required": true
                    }
                  }
                }
              },
              "network_interface": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "network": {
                      "type": "string",
                      "optional": true,
                      "computed": true
                    },
                    "network_ip": {
                      "type": "string",
                      "optional": true
                    },
                    "subnetwork": {
                      "type": "string",
                      "optional": true,
                      "computed": true
                    },
                    "subnetwork_project": {
                      "type": "string",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "block_types": {
                    "access_config": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "nat_ip": {
                            "type": "string",
                            "optional": true,
                            "computed": true
                          },
                          "network_tier": {
                            "type": "string",
                            "optional": true,
                            "computed": true
                          }
                        }
                      }
                    },
                    "alias_ip_range": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "ip_cidr_range": {
                            "type": "string",
                            "required": true
                          },
                          "subnetwork_range_name": {
                            "type": "string",
                            "optional": true
                          }
                        }
                      }
                    }
                  }
                }
              },
              "scheduling": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "automatic_restart": {
                      "type": "bool",
                      "optional": true
                    },
                    "on_host_maintenance": {
                      "type": "string",
                      "optional": true,
                      "computed": true
                    },
                    "preemptible": {
                      "type": "bool",
                      "optional": true
                    }
                  },
                  "block_types": {
                    "node_affinities": {
                      "nesting_mode": "set",
                      "block": {
                        "attributes": {
                          "key": {
                            "type": "string",
                            "required": true
                          },
                          "operator": {
                            "type": "string",
                            "required": true
                          },
                          "values": {
                            "type": [
                              "set",
                              "string"
                            ],
                            "required": true
                          }
                        }
                      }
                    }
                  }
                },
                "max_items": 1
              },
              "service_account": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "email": {
                      "type": "string",
                      "optional": true,
                      "computed": true
                    },
                    "scopes": {
                      "type": [
                        "set",
                        "string"
                      ],
                      "required": true
                    }
                  }
                },
                "max_items": 1
              },
              "shielded_instance_config": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "enable_integrity_monitoring": {
                      "type": "bool",
                      "optional": true
                    },
                    "enable_secure_boot": {
                      "type": "bool",
                      "optional": true
                    },
                    "enable_vtpm": {
                      "type": "bool",
                      "optional": true
                    }
                  }
                },
                "max_items": 1
              }
            }
          }
        },
        "google_compute_interconnect_attachment": {
          "version": 0,
          "block": {
            "attributes": {
              "admin_enabled": {
                "type": "bool",
                "description": "Whether the VLAN attachment is enabled or disabled.  When using\nPARTNER type this will Pre-Activate the interconnect attachment",
                "optional": true
              },
              "bandwidth": {
                "type": "string",
                "description": "Provisioned bandwidth capacity for the interconnect attachment.\nFor attachments of type DEDICATED, the user can set the bandwidth.\nFor attachments of type PARTNER, the Google Partner that is operating the interconnect must set the bandwidth.\nOutput only for PARTNER type, mutable for PARTNER_PROVIDER and DEDICATED,\nDefaults to BPS_10G",
                "optional": true,
                "computed": true
              },
              "candidate_subnets": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "Up to 16 candidate prefixes that can be used to restrict the allocation\nof cloudRouterIpAddress and customerRouterIpAddress for this attachment.\nAll prefixes must be within link-local address space (169.254.0.0/16)\nand must be /29 or shorter (/28, /27, etc). Google will attempt to select\nan unused /29 from the supplied candidate prefix(es). The request will\nfail if all possible /29s are in use on Google's edge. If not supplied,\nGoogle will randomly select an unused /29 from all of link-local space.",
                "optional": true
              },
              "cloud_router_ip_address": {
                "type": "string",
                "description": "IPv4 address + prefix length to be configured on Cloud Router\nInterface for this interconnect attachment.",
                "computed": true
              },
              "creation_timestamp": {
                "type": "string",
                "description": "Creation timestamp in RFC3339 text format.",
                "computed": true
              },
              "customer_router_ip_address": {
                "type": "string",
                "description": "IPv4 address + prefix length to be configured on the customer\nrouter subinterface for this interconnect attachment.",
                "computed": true
              },
              "description": {
                "type": "string",
                "description": "An optional description of this resource.",
                "optional": true
              },
              "edge_availability_domain": {
                "type": "string",
                "description": "Desired availability domain for the attachment. Only available for type\nPARTNER, at creation time. For improved reliability, customers should\nconfigure a pair of attachments with one per availability domain. The\nselected availability domain will be provided to the Partner via the\npairing key so that the provisioned circuit will lie in the specified\ndomain. If not specified, the value will default to AVAILABILITY_DOMAIN_ANY.",
                "optional": true
              },
              "google_reference_id": {
                "type": "string",
                "description": "Google reference ID, to be used when raising support tickets with\nGoogle or otherwise to debug backend connectivity issues.",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "interconnect": {
                "type": "string",
                "description": "URL of the underlying Interconnect object that this attachment's\ntraffic will traverse through. Required if type is DEDICATED, must not\nbe set if type is PARTNER.",
                "optional": true
              },
              "name": {
                "type": "string",
                "description": "Name of the resource. Provided by the client when the resource is created. The\nname must be 1-63 characters long, and comply with RFC1035. Specifically, the\nname must be 1-63 characters long and match the regular expression\n'[a-z]([-a-z0-9]*[a-z0-9])?' which means the first character must be a\nlowercase letter, and all following characters must be a dash, lowercase\nletter, or digit, except the last character, which cannot be a dash.",
                "required": true
              },
              "pairing_key": {
                "type": "string",
                "description": "[Output only for type PARTNER. Not present for DEDICATED]. The opaque\nidentifier of an PARTNER attachment used to initiate provisioning with\na selected partner. Of the form \"XXXXX/region/domain\"",
                "computed": true
              },
              "partner_asn": {
                "type": "string",
                "description": "[Output only for type PARTNER. Not present for DEDICATED]. Optional\nBGP ASN for the router that should be supplied by a layer 3 Partner if\nthey configured BGP on behalf of the customer.",
                "computed": true
              },
              "private_interconnect_info": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "tag8021q": "number"
                    }
                  ]
                ],
                "description": "Information specific to an InterconnectAttachment. This property\nis populated if the interconnect that this is attached to is of type DEDICATED.",
                "computed": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "region": {
                "type": "string",
                "description": "Region where the regional interconnect attachment resides.",
                "optional": true,
                "computed": true
              },
              "router": {
                "type": "string",
                "description": "URL of the cloud router to be used for dynamic routing. This router must be in\nthe same region as this InterconnectAttachment. The InterconnectAttachment will\nautomatically connect the Interconnect to the network & region within which the\nCloud Router is configured.",
                "required": true
              },
              "self_link": {
                "type": "string",
                "computed": true
              },
              "state": {
                "type": "string",
                "description": "[Output Only] The current state of this attachment's functionality.",
                "computed": true
              },
              "type": {
                "type": "string",
                "description": "The type of InterconnectAttachment you wish to create. Defaults to\nDEDICATED.",
                "optional": true,
                "computed": true
              },
              "vlan_tag8021q": {
                "type": "number",
                "description": "The IEEE 802.1Q VLAN tag for this attachment, in the range 2-4094. When\nusing PARTNER type this will be managed upstream.",
                "optional": true,
                "computed": true
              }
            },
            "block_types": {
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "google_compute_network": {
          "version": 0,
          "block": {
            "attributes": {
              "auto_create_subnetworks": {
                "type": "bool",
                "description": "When set to 'true', the network is created in \"auto subnet mode\" and\nit will create a subnet for each region automatically across the\n'10.128.0.0/9' address range.\n\nWhen set to 'false', the network is created in \"custom subnet mode\" so\nthe user can explicitly connect subnetwork resources.",
                "optional": true
              },
              "delete_default_routes_on_create": {
                "type": "bool",
                "optional": true
              },
              "description": {
                "type": "string",
                "description": "An optional description of this resource. The resource must be\nrecreated to modify this field.",
                "optional": true
              },
              "gateway_ipv4": {
                "type": "string",
                "description": "The gateway address for default routing out of the network. This value\nis selected by GCP.",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "ipv4_range": {
                "type": "string",
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "Name of the resource. Provided by the client when the resource is\ncreated. The name must be 1-63 characters long, and comply with\nRFC1035. Specifically, the name must be 1-63 characters long and match\nthe regular expression '[a-z]([-a-z0-9]*[a-z0-9])?' which means the\nfirst character must be a lowercase letter, and all following\ncharacters must be a dash, lowercase letter, or digit, except the last\ncharacter, which cannot be a dash.",
                "required": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "routing_mode": {
                "type": "string",
                "description": "The network-wide routing mode to use. If set to 'REGIONAL', this\nnetwork's cloud routers will only advertise routes with subnetworks\nof this network in the same region as the router. If set to 'GLOBAL',\nthis network's cloud routers will advertise routes with all\nsubnetworks of this network, across regions.",
                "optional": true,
                "computed": true
              },
              "self_link": {
                "type": "string",
                "computed": true
              }
            },
            "block_types": {
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "google_compute_network_endpoint": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "instance": {
                "type": "string",
                "description": "The name for a specific VM instance that the IP address belongs to.\nThis is required for network endpoints of type GCE_VM_IP_PORT.\nThe instance must be in the same zone of network endpoint group.",
                "required": true
              },
              "ip_address": {
                "type": "string",
                "description": "IPv4 address of network endpoint. The IP address must belong\nto a VM in GCE (either the primary IP or as part of an aliased IP\nrange).",
                "required": true
              },
              "network_endpoint_group": {
                "type": "string",
                "description": "The network endpoint group this endpoint is part of.",
                "required": true
              },
              "port": {
                "type": "number",
                "description": "Port number of network endpoint.",
                "required": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "zone": {
                "type": "string",
                "description": "Zone where the containing network endpoint group is located.",
                "optional": true,
                "computed": true
              }
            },
            "block_types": {
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "google_compute_network_endpoint_group": {
          "version": 0,
          "block": {
            "attributes": {
              "default_port": {
                "type": "number",
                "description": "The default port used if the port number is not specified in the\nnetwork endpoint.",
                "optional": true
              },
              "description": {
                "type": "string",
                "description": "An optional description of this resource. Provide this property when\nyou create the resource.",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "Name of the resource; provided by the client when the resource is\ncreated. The name must be 1-63 characters long, and comply with\nRFC1035. Specifically, the name must be 1-63 characters long and match\nthe regular expression '[a-z]([-a-z0-9]*[a-z0-9])?' which means the\nfirst character must be a lowercase letter, and all following\ncharacters must be a dash, lowercase letter, or digit, except the last\ncharacter, which cannot be a dash.",
                "required": true
              },
              "network": {
                "type": "string",
                "description": "The network to which all network endpoints in the NEG belong.\nUses \"default\" project network if unspecified.",
                "required": true
              },
              "network_endpoint_type": {
                "type": "string",
                "description": "Type of network endpoints in this network endpoint group. Currently\nthe only supported value is GCE_VM_IP_PORT.",
                "optional": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "self_link": {
                "type": "string",
                "computed": true
              },
              "size": {
                "type": "number",
                "description": "Number of network endpoints in the network endpoint group.",
                "computed": true
              },
              "subnetwork": {
                "type": "string",
                "description": "Optional subnetwork to which all network endpoints in the NEG belong.",
                "optional": true
              },
              "zone": {
                "type": "string",
                "description": "Zone where the network endpoint group is located.",
                "optional": true,
                "computed": true
              }
            },
            "block_types": {
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "google_compute_network_peering": {
          "version": 0,
          "block": {
            "attributes": {
              "auto_create_routes": {
                "type": "bool",
                "optional": true,
                "computed": true
              },
              "export_custom_routes": {
                "type": "bool",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "import_custom_routes": {
                "type": "bool",
                "optional": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "network": {
                "type": "string",
                "required": true
              },
              "peer_network": {
                "type": "string",
                "required": true
              },
              "state": {
                "type": "string",
                "computed": true
              },
              "state_details": {
                "type": "string",
                "computed": true
              }
            }
          }
        },
        "google_compute_network_peering_routes_config": {
          "version": 0,
          "block": {
            "attributes": {
              "export_custom_routes": {
                "type": "bool",
                "description": "Whether to export the custom routes to the peer network.",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "import_custom_routes": {
                "type": "bool",
                "description": "Whether to import the custom routes to the peer network.",
                "required": true
              },
              "network": {
                "type": "string",
                "description": "The name of the primary network for the peering.",
                "required": true
              },
              "peering": {
                "type": "string",
                "description": "Name of the peering.",
                "required": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              }
            },
            "block_types": {
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "google_compute_node_group": {
          "version": 0,
          "block": {
            "attributes": {
              "creation_timestamp": {
                "type": "string",
                "description": "Creation timestamp in RFC3339 text format.",
                "computed": true
              },
              "description": {
                "type": "string",
                "description": "An optional textual description of the resource.",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "Name of the resource.",
                "optional": true
              },
              "node_template": {
                "type": "string",
                "description": "The URL of the node template to which this node group belongs.",
                "required": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "self_link": {
                "type": "string",
                "computed": true
              },
              "size": {
                "type": "number",
                "description": "The total number of nodes in the node group.",
                "required": true
              },
              "zone": {
                "type": "string",
                "description": "Zone where this node group is located",
                "optional": true,
                "computed": true
              }
            },
            "block_types": {
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "google_compute_node_template": {
          "version": 0,
          "block": {
            "attributes": {
              "creation_timestamp": {
                "type": "string",
                "description": "Creation timestamp in RFC3339 text format.",
                "computed": true
              },
              "description": {
                "type": "string",
                "description": "An optional textual description of the resource.",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "Name of the resource.",
                "optional": true
              },
              "node_affinity_labels": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "Labels to use for node affinity, which will be used in\ninstance scheduling.",
                "optional": true
              },
              "node_type": {
                "type": "string",
                "description": "Node type to use for nodes group that are created from this template.\nOnly one of nodeTypeFlexibility and nodeType can be specified.",
                "optional": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "region": {
                "type": "string",
                "description": "Region where nodes using the node template will be created.\nIf it is not provided, the provider region is used.",
                "optional": true,
                "computed": true
              },
              "self_link": {
                "type": "string",
                "computed": true
              }
            },
            "block_types": {
              "node_type_flexibility": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "cpus": {
                      "type": "string",
                      "description": "Number of virtual CPUs to use.",
                      "optional": true
                    },
                    "local_ssd": {
                      "type": "string",
                      "description": "Use local SSD",
                      "computed": true
                    },
                    "memory": {
                      "type": "string",
                      "description": "Physical memory available to the node, defined in MB.",
                      "optional": true
                    }
                  }
                },
                "max_items": 1
              },
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "google_compute_project_default_network_tier": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "network_tier": {
                "type": "string",
                "required": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              }
            }
          }
        },
        "google_compute_project_metadata": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "metadata": {
                "type": [
                  "map",
                  "string"
                ],
                "required": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              }
            }
          }
        },
        "google_compute_project_metadata_item": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "key": {
                "type": "string",
                "required": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "value": {
                "type": "string",
                "required": true
              }
            },
            "block_types": {
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "google_compute_region_autoscaler": {
          "version": 0,
          "block": {
            "attributes": {
              "creation_timestamp": {
                "type": "string",
                "description": "Creation timestamp in RFC3339 text format.",
                "computed": true
              },
              "description": {
                "type": "string",
                "description": "An optional description of this resource.",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "Name of the resource. The name must be 1-63 characters long and match\nthe regular expression '[a-z]([-a-z0-9]*[a-z0-9])?' which means the\nfirst character must be a lowercase letter, and all following\ncharacters must be a dash, lowercase letter, or digit, except the last\ncharacter, which cannot be a dash.",
                "required": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "region": {
                "type": "string",
                "description": "URL of the region where the instance group resides.",
                "optional": true,
                "computed": true
              },
              "self_link": {
                "type": "string",
                "computed": true
              },
              "target": {
                "type": "string",
                "description": "URL of the managed instance group that this autoscaler will scale.",
                "required": true
              }
            },
            "block_types": {
              "autoscaling_policy": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "cooldown_period": {
                      "type": "number",
                      "description": "The number of seconds that the autoscaler should wait before it\nstarts collecting information from a new instance. This prevents\nthe autoscaler from collecting information when the instance is\ninitializing, during which the collected usage would not be\nreliable. The default time autoscaler waits is 60 seconds.\n\nVirtual machine initialization times might vary because of\nnumerous factors. We recommend that you test how long an\ninstance may take to initialize. To do this, create an instance\nand time the startup process.",
                      "optional": true
                    },
                    "max_replicas": {
                      "type": "number",
                      "description": "The maximum number of instances that the autoscaler can scale up\nto. This is required when creating or updating an autoscaler. The\nmaximum number of replicas should not be lower than minimal number\nof replicas.",
                      "required": true
                    },
                    "min_replicas": {
                      "type": "number",
                      "description": "The minimum number of replicas that the autoscaler can scale down\nto. This cannot be less than 0. If not provided, autoscaler will\nchoose a default value depending on maximum number of instances\nallowed.",
                      "required": true
                    }
                  },
                  "block_types": {
                    "cpu_utilization": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "target": {
                            "type": "number",
                            "description": "The target CPU utilization that the autoscaler should maintain.\nMust be a float value in the range (0, 1]. If not specified, the\ndefault is 0.6.\n\nIf the CPU level is below the target utilization, the autoscaler\nscales down the number of instances until it reaches the minimum\nnumber of instances you specified or until the average CPU of\nyour instances reaches the target utilization.\n\nIf the average CPU is above the target utilization, the autoscaler\nscales up until it reaches the maximum number of instances you\nspecified or until the average utilization reaches the target\nutilization.",
                            "required": true
                          }
                        }
                      },
                      "max_items": 1
                    },
                    "load_balancing_utilization": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "target": {
                            "type": "number",
                            "description": "Fraction of backend capacity utilization (set in HTTP(s) load\nbalancing configuration) that autoscaler should maintain. Must\nbe a positive float value. If not defined, the default is 0.8.",
                            "required": true
                          }
                        }
                      },
                      "max_items": 1
                    },
                    "metric": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "name": {
                            "type": "string",
                            "description": "The identifier (type) of the Stackdriver Monitoring metric.\nThe metric cannot have negative values.\n\nThe metric must have a value type of INT64 or DOUBLE.",
                            "required": true
                          },
                          "target": {
                            "type": "number",
                            "description": "The target value of the metric that autoscaler should\nmaintain. This must be a positive value. A utilization\nmetric scales number of virtual machines handling requests\nto increase or decrease proportionally to the metric.\n\nFor example, a good metric to use as a utilizationTarget is\nwww.googleapis.com/compute/instance/network/received_bytes_count.\nThe autoscaler will work to keep this value constant for each\nof the instances.",
                            "optional": true
                          },
                          "type": {
                            "type": "string",
                            "description": "Defines how target utilization value is expressed for a\nStackdriver Monitoring metric. Either GAUGE, DELTA_PER_SECOND,\nor DELTA_PER_MINUTE.",
                            "optional": true
                          }
                        }
                      }
                    }
                  }
                },
                "min_items": 1,
                "max_items": 1
              },
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "google_compute_region_backend_service": {
          "version": 1,
          "block": {
            "attributes": {
              "connection_draining_timeout_sec": {
                "type": "number",
                "description": "Time for which instance will be drained (not accept new\nconnections, but still work to finish started).",
                "optional": true
              },
              "creation_timestamp": {
                "type": "string",
                "description": "Creation timestamp in RFC3339 text format.",
                "computed": true
              },
              "description": {
                "type": "string",
                "description": "An optional description of this resource.",
                "optional": true
              },
              "fingerprint": {
                "type": "string",
                "description": "Fingerprint of this resource. A hash of the contents stored in this\nobject. This field is used in optimistic locking.",
                "computed": true
              },
              "health_checks": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "The set of URLs to HealthCheck resources for health checking\nthis RegionBackendService. Currently at most one health\ncheck can be specified, and a health check is required.",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "load_balancing_scheme": {
                "type": "string",
                "description": "Indicates what kind of load balancing this regional backend service\nwill be used for. A backend service created for one type of load\nbalancing cannot be used with the other(s). Must be 'INTERNAL' or\n'INTERNAL_MANAGED'. Defaults to 'INTERNAL'.",
                "optional": true
              },
              "name": {
                "type": "string",
                "description": "Name of the resource. Provided by the client when the resource is\ncreated. The name must be 1-63 characters long, and comply with\nRFC1035. Specifically, the name must be 1-63 characters long and match\nthe regular expression '[a-z]([-a-z0-9]*[a-z0-9])?' which means the\nfirst character must be a lowercase letter, and all following\ncharacters must be a dash, lowercase letter, or digit, except the last\ncharacter, which cannot be a dash.",
                "required": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "protocol": {
                "type": "string",
                "description": "The protocol this RegionBackendService uses to communicate with backends.\nPossible values are HTTP, HTTPS, HTTP2, SSL, TCP, and UDP. The default is\nHTTP. **NOTE**: HTTP2 is only valid for beta HTTP/2 load balancer\ntypes and may result in errors if used with the GA API.",
                "optional": true,
                "computed": true
              },
              "region": {
                "type": "string",
                "description": "The Region in which the created backend service should reside.\nIf it is not provided, the provider region is used.",
                "optional": true,
                "computed": true
              },
              "self_link": {
                "type": "string",
                "computed": true
              },
              "session_affinity": {
                "type": "string",
                "description": "Type of session affinity to use. The default is NONE. Session affinity is\nnot applicable if the protocol is UDP.",
                "optional": true,
                "computed": true
              },
              "timeout_sec": {
                "type": "number",
                "description": "How many seconds to wait for the backend before considering it a\nfailed request. Default is 30 seconds. Valid range is [1, 86400].",
                "optional": true,
                "computed": true
              }
            },
            "block_types": {
              "backend": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "balancing_mode": {
                      "type": "string",
                      "description": "Specifies the balancing mode for this backend. Defaults to CONNECTION.",
                      "optional": true
                    },
                    "capacity_scaler": {
                      "type": "number",
                      "description": "A multiplier applied to the group's maximum servicing capacity\n(based on UTILIZATION, RATE or CONNECTION).\n\n~>**NOTE**: This field cannot be set for\nINTERNAL region backend services (default loadBalancingScheme),\nbut is required for non-INTERNAL backend service. The total\ncapacity_scaler for all backends must be non-zero.\n\nA setting of 0 means the group is completely drained, offering\n0% of its available Capacity. Valid range is [0.0,1.0].",
                      "optional": true
                    },
                    "description": {
                      "type": "string",
                      "description": "An optional description of this resource.\nProvide this property when you create the resource.",
                      "optional": true
                    },
                    "group": {
                      "type": "string",
                      "description": "The fully-qualified URL of an Instance Group or Network Endpoint\nGroup resource. In case of instance group this defines the list\nof instances that serve traffic. Member virtual machine\ninstances from each instance group must live in the same zone as\nthe instance group itself. No two backends in a backend service\nare allowed to use same Instance Group resource.\n\nFor Network Endpoint Groups this defines list of endpoints. All\nendpoints of Network Endpoint Group must be hosted on instances\nlocated in the same zone as the Network Endpoint Group.\n\nBackend services cannot mix Instance Group and\nNetwork Endpoint Group backends.\n\nWhen the 'load_balancing_scheme' is INTERNAL, only instance groups\nare supported.\n\nNote that you must specify an Instance Group or Network Endpoint\nGroup resource using the fully-qualified URL, rather than a\npartial URL.",
                      "required": true
                    },
                    "max_connections": {
                      "type": "number",
                      "description": "The max number of simultaneous connections for the group. Can\nbe used with either CONNECTION or UTILIZATION balancing modes.\nCannot be set for INTERNAL backend services.\n\nFor CONNECTION mode, either maxConnections or one\nof maxConnectionsPerInstance or maxConnectionsPerEndpoint,\nas appropriate for group type, must be set.",
                      "optional": true
                    },
                    "max_connections_per_endpoint": {
                      "type": "number",
                      "description": "The max number of simultaneous connections that a single backend\nnetwork endpoint can handle. Cannot be set\nfor INTERNAL backend services.\n\nThis is used to calculate the capacity of the group. Can be\nused in either CONNECTION or UTILIZATION balancing modes. For\nCONNECTION mode, either maxConnections or\nmaxConnectionsPerEndpoint must be set.",
                      "optional": true
                    },
                    "max_connections_per_instance": {
                      "type": "number",
                      "description": "The max number of simultaneous connections that a single\nbackend instance can handle. Cannot be set for INTERNAL backend\nservices.\n\nThis is used to calculate the capacity of the group.\nCan be used in either CONNECTION or UTILIZATION balancing modes.\nFor CONNECTION mode, either maxConnections or\nmaxConnectionsPerInstance must be set.",
                      "optional": true
                    },
                    "max_rate": {
                      "type": "number",
                      "description": "The max requests per second (RPS) of the group. Cannot be set\nfor INTERNAL backend services.\n\nCan be used with either RATE or UTILIZATION balancing modes,\nbut required if RATE mode. Either maxRate or one\nof maxRatePerInstance or maxRatePerEndpoint, as appropriate for\ngroup type, must be set.",
                      "optional": true
                    },
                    "max_rate_per_endpoint": {
                      "type": "number",
                      "description": "The max requests per second (RPS) that a single backend network\nendpoint can handle. This is used to calculate the capacity of\nthe group. Can be used in either balancing mode. For RATE mode,\neither maxRate or maxRatePerEndpoint must be set. Cannot be set\nfor INTERNAL backend services.",
                      "optional": true
                    },
                    "max_rate_per_instance": {
                      "type": "number",
                      "description": "The max requests per second (RPS) that a single backend\ninstance can handle. This is used to calculate the capacity of\nthe group. Can be used in either balancing mode. For RATE mode,\neither maxRate or maxRatePerInstance must be set. Cannot be set\nfor INTERNAL backend services.",
                      "optional": true
                    },
                    "max_utilization": {
                      "type": "number",
                      "description": "Used when balancingMode is UTILIZATION. This ratio defines the\nCPU utilization target for the group. Valid range is [0.0, 1.0].\nCannot be set for INTERNAL backend services.",
                      "optional": true
                    }
                  }
                }
              },
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "google_compute_region_disk": {
          "version": 0,
          "block": {
            "attributes": {
              "creation_timestamp": {
                "type": "string",
                "description": "Creation timestamp in RFC3339 text format.",
                "computed": true
              },
              "description": {
                "type": "string",
                "description": "An optional description of this resource. Provide this property when\nyou create the resource.",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "label_fingerprint": {
                "type": "string",
                "description": "The fingerprint used for optimistic locking of this resource.  Used\ninternally during updates.",
                "computed": true
              },
              "labels": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "Labels to apply to this disk.  A list of key->value pairs.",
                "optional": true
              },
              "last_attach_timestamp": {
                "type": "string",
                "description": "Last attach timestamp in RFC3339 text format.",
                "computed": true
              },
              "last_detach_timestamp": {
                "type": "string",
                "description": "Last detach timestamp in RFC3339 text format.",
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "Name of the resource. Provided by the client when the resource is\ncreated. The name must be 1-63 characters long, and comply with\nRFC1035. Specifically, the name must be 1-63 characters long and match\nthe regular expression '[a-z]([-a-z0-9]*[a-z0-9])?' which means the\nfirst character must be a lowercase letter, and all following\ncharacters must be a dash, lowercase letter, or digit, except the last\ncharacter, which cannot be a dash.",
                "required": true
              },
              "physical_block_size_bytes": {
                "type": "number",
                "description": "Physical block size of the persistent disk, in bytes. If not present\nin a request, a default value is used. Currently supported sizes\nare 4096 and 16384, other sizes may be added in the future.\nIf an unsupported value is requested, the error message will list\nthe supported values for the caller's project.",
                "optional": true,
                "computed": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "region": {
                "type": "string",
                "description": "A reference to the region where the disk resides.",
                "optional": true,
                "computed": true
              },
              "replica_zones": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "URLs of the zones where the disk should be replicated to.",
                "required": true
              },
              "self_link": {
                "type": "string",
                "computed": true
              },
              "size": {
                "type": "number",
                "description": "Size of the persistent disk, specified in GB. You can specify this\nfield when creating a persistent disk using the sourceImage or\nsourceSnapshot parameter, or specify it alone to create an empty\npersistent disk.\n\nIf you specify this field along with sourceImage or sourceSnapshot,\nthe value of sizeGb must not be less than the size of the sourceImage\nor the size of the snapshot.",
                "optional": true,
                "computed": true
              },
              "snapshot": {
                "type": "string",
                "description": "The source snapshot used to create this disk. You can provide this as\na partial or full URL to the resource. For example, the following are\nvalid values:\n\n* 'https://www.googleapis.com/compute/v1/projects/project/global/snapshots/snapshot'\n* 'projects/project/global/snapshots/snapshot'\n* 'global/snapshots/snapshot'\n* 'snapshot'",
                "optional": true
              },
              "source_snapshot_id": {
                "type": "string",
                "description": "The unique ID of the snapshot used to create this disk. This value\nidentifies the exact snapshot that was used to create this persistent\ndisk. For example, if you created the persistent disk from a snapshot\nthat was later deleted and recreated under the same name, the source\nsnapshot ID would identify the exact version of the snapshot that was\nused.",
                "computed": true
              },
              "type": {
                "type": "string",
                "description": "URL of the disk type resource describing which disk type to use to\ncreate the disk. Provide this when creating the disk.",
                "optional": true
              },
              "users": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "Links to the users of the disk (attached instances) in form:\nproject/zones/zone/instances/instance",
                "computed": true
              }
            },
            "block_types": {
              "disk_encryption_key": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "raw_key": {
                      "type": "string",
                      "description": "Specifies a 256-bit customer-supplied encryption key, encoded in\nRFC 4648 base64 to either encrypt or decrypt this resource.",
                      "optional": true
                    },
                    "sha256": {
                      "type": "string",
                      "description": "The RFC 4648 base64 encoded SHA-256 hash of the customer-supplied\nencryption key that protects this resource.",
                      "computed": true
                    }
                  }
                },
                "max_items": 1
              },
              "source_snapshot_encryption_key": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "raw_key": {
                      "type": "string",
                      "description": "Specifies a 256-bit customer-supplied encryption key, encoded in\nRFC 4648 base64 to either encrypt or decrypt this resource.",
                      "optional": true
                    },
                    "sha256": {
                      "type": "string",
                      "description": "The RFC 4648 base64 encoded SHA-256 hash of the customer-supplied\nencryption key that protects this resource.",
                      "computed": true
                    }
                  }
                },
                "max_items": 1
              },
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "google_compute_region_health_check": {
          "version": 0,
          "block": {
            "attributes": {
              "check_interval_sec": {
                "type": "number",
                "description": "How often (in seconds) to send a health check. The default value is 5\nseconds.",
                "optional": true
              },
              "creation_timestamp": {
                "type": "string",
                "description": "Creation timestamp in RFC3339 text format.",
                "computed": true
              },
              "description": {
                "type": "string",
                "description": "An optional description of this resource. Provide this property when\nyou create the resource.",
                "optional": true
              },
              "healthy_threshold": {
                "type": "number",
                "description": "A so-far unhealthy instance will be marked healthy after this many\nconsecutive successes. The default value is 2.",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "Name of the resource. Provided by the client when the resource is\ncreated. The name must be 1-63 characters long, and comply with\nRFC1035.  Specifically, the name must be 1-63 characters long and\nmatch the regular expression '[a-z]([-a-z0-9]*[a-z0-9])?' which means\nthe first character must be a lowercase letter, and all following\ncharacters must be a dash, lowercase letter, or digit, except the\nlast character, which cannot be a dash.",
                "required": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "region": {
                "type": "string",
                "description": "The Region in which the created health check should reside.\nIf it is not provided, the provider region is used.",
                "optional": true,
                "computed": true
              },
              "self_link": {
                "type": "string",
                "computed": true
              },
              "timeout_sec": {
                "type": "number",
                "description": "How long (in seconds) to wait before claiming failure.\nThe default value is 5 seconds.  It is invalid for timeoutSec to have\ngreater value than checkIntervalSec.",
                "optional": true
              },
              "type": {
                "type": "string",
                "description": "The type of the health check. One of HTTP, HTTP2, HTTPS, TCP, or SSL.",
                "computed": true
              },
              "unhealthy_threshold": {
                "type": "number",
                "description": "A so-far healthy instance will be marked unhealthy after this many\nconsecutive failures. The default value is 2.",
                "optional": true
              }
            },
            "block_types": {
              "http2_health_check": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "host": {
                      "type": "string",
                      "description": "The value of the host header in the HTTP2 health check request.\nIf left empty (default value), the public IP on behalf of which this health\ncheck is performed will be used.",
                      "optional": true
                    },
                    "port": {
                      "type": "number",
                      "description": "The TCP port number for the HTTP2 health check request.\nThe default value is 443.",
                      "optional": true
                    },
                    "port_name": {
                      "type": "string",
                      "description": "Port name as defined in InstanceGroup#NamedPort#name. If both port and\nport_name are defined, port takes precedence.",
                      "optional": true
                    },
                    "port_specification": {
                      "type": "string",
                      "description": "Specifies how port is selected for health checking, can be one of the\nfollowing values:\n\n  * 'USE_FIXED_PORT': The port number in 'port' is used for health checking.\n\n  * 'USE_NAMED_PORT': The 'portName' is used for health checking.\n\n  * 'USE_SERVING_PORT': For NetworkEndpointGroup, the port specified for each\n  network endpoint is used for health checking. For other backends, the\n  port or named port specified in the Backend Service is used for health\n  checking.\n\nIf not specified, HTTP2 health check follows behavior specified in 'port' and\n'portName' fields.",
                      "optional": true
                    },
                    "proxy_header": {
                      "type": "string",
                      "description": "Specifies the type of proxy header to append before sending data to the\nbackend, either NONE or PROXY_V1. The default is NONE.",
                      "optional": true
                    },
                    "request_path": {
                      "type": "string",
                      "description": "The request path of the HTTP2 health check request.\nThe default value is /.",
                      "optional": true
                    },
                    "response": {
                      "type": "string",
                      "description": "The bytes to match against the beginning of the response data. If left empty\n(the default value), any response will indicate health. The response data\ncan only be ASCII.",
                      "optional": true
                    }
                  }
                },
                "max_items": 1
              },
              "http_health_check": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "host": {
                      "type": "string",
                      "description": "The value of the host header in the HTTP health check request.\nIf left empty (default value), the public IP on behalf of which this health\ncheck is performed will be used.",
                      "optional": true
                    },
                    "port": {
                      "type": "number",
                      "description": "The TCP port number for the HTTP health check request.\nThe default value is 80.",
                      "optional": true
                    },
                    "port_name": {
                      "type": "string",
                      "description": "Port name as defined in InstanceGroup#NamedPort#name. If both port and\nport_name are defined, port takes precedence.",
                      "optional": true
                    },
                    "port_specification": {
                      "type": "string",
                      "description": "Specifies how port is selected for health checking, can be one of the\nfollowing values:\n\n  * 'USE_FIXED_PORT': The port number in 'port' is used for health checking.\n\n  * 'USE_NAMED_PORT': The 'portName' is used for health checking.\n\n  * 'USE_SERVING_PORT': For NetworkEndpointGroup, the port specified for each\n  network endpoint is used for health checking. For other backends, the\n  port or named port specified in the Backend Service is used for health\n  checking.\n\nIf not specified, HTTP health check follows behavior specified in 'port' and\n'portName' fields.",
                      "optional": true
                    },
                    "proxy_header": {
                      "type": "string",
                      "description": "Specifies the type of proxy header to append before sending data to the\nbackend, either NONE or PROXY_V1. The default is NONE.",
                      "optional": true
                    },
                    "request_path": {
                      "type": "string",
                      "description": "The request path of the HTTP health check request.\nThe default value is /.",
                      "optional": true
                    },
                    "response": {
                      "type": "string",
                      "description": "The bytes to match against the beginning of the response data. If left empty\n(the default value), any response will indicate health. The response data\ncan only be ASCII.",
                      "optional": true
                    }
                  }
                },
                "max_items": 1
              },
              "https_health_check": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "host": {
                      "type": "string",
                      "description": "The value of the host header in the HTTPS health check request.\nIf left empty (default value), the public IP on behalf of which this health\ncheck is performed will be used.",
                      "optional": true
                    },
                    "port": {
                      "type": "number",
                      "description": "The TCP port number for the HTTPS health check request.\nThe default value is 443.",
                      "optional": true
                    },
                    "port_name": {
                      "type": "string",
                      "description": "Port name as defined in InstanceGroup#NamedPort#name. If both port and\nport_name are defined, port takes precedence.",
                      "optional": true
                    },
                    "port_specification": {
                      "type": "string",
                      "description": "Specifies how port is selected for health checking, can be one of the\nfollowing values:\n\n  * 'USE_FIXED_PORT': The port number in 'port' is used for health checking.\n\n  * 'USE_NAMED_PORT': The 'portName' is used for health checking.\n\n  * 'USE_SERVING_PORT': For NetworkEndpointGroup, the port specified for each\n  network endpoint is used for health checking. For other backends, the\n  port or named port specified in the Backend Service is used for health\n  checking.\n\nIf not specified, HTTPS health check follows behavior specified in 'port' and\n'portName' fields.",
                      "optional": true
                    },
                    "proxy_header": {
                      "type": "string",
                      "description": "Specifies the type of proxy header to append before sending data to the\nbackend, either NONE or PROXY_V1. The default is NONE.",
                      "optional": true
                    },
                    "request_path": {
                      "type": "string",
                      "description": "The request path of the HTTPS health check request.\nThe default value is /.",
                      "optional": true
                    },
                    "response": {
                      "type": "string",
                      "description": "The bytes to match against the beginning of the response data. If left empty\n(the default value), any response will indicate health. The response data\ncan only be ASCII.",
                      "optional": true
                    }
                  }
                },
                "max_items": 1
              },
              "ssl_health_check": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "port": {
                      "type": "number",
                      "description": "The TCP port number for the SSL health check request.\nThe default value is 443.",
                      "optional": true
                    },
                    "port_name": {
                      "type": "string",
                      "description": "Port name as defined in InstanceGroup#NamedPort#name. If both port and\nport_name are defined, port takes precedence.",
                      "optional": true
                    },
                    "port_specification": {
                      "type": "string",
                      "description": "Specifies how port is selected for health checking, can be one of the\nfollowing values:\n\n  * 'USE_FIXED_PORT': The port number in 'port' is used for health checking.\n\n  * 'USE_NAMED_PORT': The 'portName' is used for health checking.\n\n  * 'USE_SERVING_PORT': For NetworkEndpointGroup, the port specified for each\n  network endpoint is used for health checking. For other backends, the\n  port or named port specified in the Backend Service is used for health\n  checking.\n\nIf not specified, SSL health check follows behavior specified in 'port' and\n'portName' fields.",
                      "optional": true
                    },
                    "proxy_header": {
                      "type": "string",
                      "description": "Specifies the type of proxy header to append before sending data to the\nbackend, either NONE or PROXY_V1. The default is NONE.",
                      "optional": true
                    },
                    "request": {
                      "type": "string",
                      "description": "The application data to send once the SSL connection has been\nestablished (default value is empty). If both request and response are\nempty, the connection establishment alone will indicate health. The request\ndata can only be ASCII.",
                      "optional": true
                    },
                    "response": {
                      "type": "string",
                      "description": "The bytes to match against the beginning of the response data. If left empty\n(the default value), any response will indicate health. The response data\ncan only be ASCII.",
                      "optional": true
                    }
                  }
                },
                "max_items": 1
              },
              "tcp_health_check": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "port": {
                      "type": "number",
                      "description": "The TCP port number for the TCP health check request.\nThe default value is 80.",
                      "optional": true
                    },
                    "port_name": {
                      "type": "string",
                      "description": "Port name as defined in InstanceGroup#NamedPort#name. If both port and\nport_name are defined, port takes precedence.",
                      "optional": true
                    },
                    "port_specification": {
                      "type": "string",
                      "description": "Specifies how port is selected for health checking, can be one of the\nfollowing values:\n\n  * 'USE_FIXED_PORT': The port number in 'port' is used for health checking.\n\n  * 'USE_NAMED_PORT': The 'portName' is used for health checking.\n\n  * 'USE_SERVING_PORT': For NetworkEndpointGroup, the port specified for each\n  network endpoint is used for health checking. For other backends, the\n  port or named port specified in the Backend Service is used for health\n  checking.\n\nIf not specified, TCP health check follows behavior specified in 'port' and\n'portName' fields.",
                      "optional": true
                    },
                    "proxy_header": {
                      "type": "string",
                      "description": "Specifies the type of proxy header to append before sending data to the\nbackend, either NONE or PROXY_V1. The default is NONE.",
                      "optional": true
                    },
                    "request": {
                      "type": "string",
                      "description": "The application data to send once the TCP connection has been\nestablished (default value is empty). If both request and response are\nempty, the connection establishment alone will indicate health. The request\ndata can only be ASCII.",
                      "optional": true
                    },
                    "response": {
                      "type": "string",
                      "description": "The bytes to match against the beginning of the response data. If left empty\n(the default value), any response will indicate health. The response data\ncan only be ASCII.",
                      "optional": true
                    }
                  }
                },
                "max_items": 1
              },
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "google_compute_region_instance_group_manager": {
          "version": 0,
          "block": {
            "attributes": {
              "base_instance_name": {
                "type": "string",
                "required": true
              },
              "description": {
                "type": "string",
                "optional": true
              },
              "distribution_policy_zones": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true,
                "computed": true
              },
              "fingerprint": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "instance_group": {
                "type": "string",
                "computed": true
              },
              "instance_template": {
                "type": "string",
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "region": {
                "type": "string",
                "required": true
              },
              "self_link": {
                "type": "string",
                "computed": true
              },
              "target_pools": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true
              },
              "target_size": {
                "type": "number",
                "optional": true,
                "computed": true
              },
              "update_strategy": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "wait_for_instances": {
                "type": "bool",
                "optional": true
              }
            },
            "block_types": {
              "auto_healing_policies": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "health_check": {
                      "type": "string",
                      "required": true
                    },
                    "initial_delay_sec": {
                      "type": "number",
                      "required": true
                    }
                  }
                },
                "max_items": 1
              },
              "named_port": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "name": {
                      "type": "string",
                      "required": true
                    },
                    "port": {
                      "type": "number",
                      "required": true
                    }
                  }
                }
              },
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              },
              "update_policy": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "instance_redistribution_type": {
                      "type": "string",
                      "optional": true
                    },
                    "max_surge_fixed": {
                      "type": "number",
                      "optional": true,
                      "computed": true
                    },
                    "max_surge_percent": {
                      "type": "number",
                      "optional": true
                    },
                    "max_unavailable_fixed": {
                      "type": "number",
                      "optional": true,
                      "computed": true
                    },
                    "max_unavailable_percent": {
                      "type": "number",
                      "optional": true
                    },
                    "min_ready_sec": {
                      "type": "number",
                      "optional": true
                    },
                    "minimal_action": {
                      "type": "string",
                      "required": true
                    },
                    "type": {
                      "type": "string",
                      "required": true
                    }
                  }
                },
                "max_items": 1
              },
              "version": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "instance_template": {
                      "type": "string",
                      "required": true
                    },
                    "name": {
                      "type": "string",
                      "optional": true
                    }
                  },
                  "block_types": {
                    "target_size": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "fixed": {
                            "type": "number",
                            "optional": true
                          },
                          "percent": {
                            "type": "number",
                            "optional": true
                          }
                        }
                      },
                      "max_items": 1
                    }
                  }
                },
                "min_items": 1
              }
            }
          }
        },
        "google_compute_reservation": {
          "version": 0,
          "block": {
            "attributes": {
              "commitment": {
                "type": "string",
                "description": "Full or partial URL to a parent commitment. This field displays for\nreservations that are tied to a commitment.",
                "computed": true
              },
              "creation_timestamp": {
                "type": "string",
                "description": "Creation timestamp in RFC3339 text format.",
                "computed": true
              },
              "description": {
                "type": "string",
                "description": "An optional description of this resource.",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "Name of the resource. Provided by the client when the resource is\ncreated. The name must be 1-63 characters long, and comply with\nRFC1035. Specifically, the name must be 1-63 characters long and match\nthe regular expression '[a-z]([-a-z0-9]*[a-z0-9])?' which means the\nfirst character must be a lowercase letter, and all following\ncharacters must be a dash, lowercase letter, or digit, except the last\ncharacter, which cannot be a dash.",
                "required": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "self_link": {
                "type": "string",
                "computed": true
              },
              "specific_reservation_required": {
                "type": "bool",
                "description": "When set to true, only VMs that target this reservation by name can\nconsume this reservation. Otherwise, it can be consumed by VMs with\naffinity for any reservation. Defaults to false.",
                "optional": true
              },
              "status": {
                "type": "string",
                "description": "The status of the reservation.",
                "computed": true
              },
              "zone": {
                "type": "string",
                "description": "The zone where the reservation is made.",
                "required": true
              }
            },
            "block_types": {
              "specific_reservation": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "count": {
                      "type": "number",
                      "description": "The number of resources that are allocated.",
                      "required": true
                    },
                    "in_use_count": {
                      "type": "number",
                      "description": "How many instances are in use.",
                      "computed": true
                    }
                  },
                  "block_types": {
                    "instance_properties": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "machine_type": {
                            "type": "string",
                            "description": "The name of the machine type to reserve.",
                            "required": true
                          },
                          "min_cpu_platform": {
                            "type": "string",
                            "description": "The minimum CPU platform for the reservation. For example,\n'\"Intel Skylake\"'. See\nthe CPU platform availability reference](https://cloud.google.com/compute/docs/instances/specify-min-cpu-platform#availablezones)\nfor information on available CPU platforms.",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "block_types": {
                          "guest_accelerators": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "accelerator_count": {
                                  "type": "number",
                                  "description": "The number of the guest accelerator cards exposed to\nthis instance.",
                                  "required": true
                                },
                                "accelerator_type": {
                                  "type": "string",
                                  "description": "The full or partial URL of the accelerator type to\nattach to this instance. For example:\n'projects/my-project/zones/us-central1-c/acceleratorTypes/nvidia-tesla-p100'\n\nIf you are creating an instance template, specify only the accelerator name.",
                                  "required": true
                                }
                              }
                            }
                          },
                          "local_ssds": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "disk_size_gb": {
                                  "type": "number",
                                  "description": "The size of the disk in base-2 GB.",
                                  "required": true
                                },
                                "interface": {
                                  "type": "string",
                                  "description": "The disk interface to use for attaching this disk, one\nof 'SCSI' or 'NVME'. The default is 'SCSI'.",
                                  "optional": true
                                }
                              }
                            }
                          }
                        }
                      },
                      "min_items": 1,
                      "max_items": 1
                    }
                  }
                },
                "min_items": 1,
                "max_items": 1
              },
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "google_compute_resource_policy": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource, provided by the client when initially creating\nthe resource. The resource name must be 1-63 characters long, and comply\nwith RFC1035. Specifically, the name must be 1-63 characters long and\nmatch the regular expression '[a-z]([-a-z0-9]*[a-z0-9])'? which means the\nfirst character must be a lowercase letter, and all following characters\nmust be a dash, lowercase letter, or digit, except the last character,\nwhich cannot be a dash.",
                "required": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "region": {
                "type": "string",
                "description": "Region where resource policy resides.",
                "optional": true,
                "computed": true
              },
              "self_link": {
                "type": "string",
                "computed": true
              }
            },
            "block_types": {
              "snapshot_schedule_policy": {
                "nesting_mode": "list",
                "block": {
                  "block_types": {
                    "retention_policy": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "max_retention_days": {
                            "type": "number",
                            "description": "Maximum age of the snapshot that is allowed to be kept.",
                            "required": true
                          },
                          "on_source_disk_delete": {
                            "type": "string",
                            "description": "Specifies the behavior to apply to scheduled snapshots when\nthe source disk is deleted.\nValid options are KEEP_AUTO_SNAPSHOTS and APPLY_RETENTION_POLICY",
                            "optional": true
                          }
                        }
                      },
                      "max_items": 1
                    },
                    "schedule": {
                      "nesting_mode": "list",
                      "block": {
                        "block_types": {
                          "daily_schedule": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "days_in_cycle": {
                                  "type": "number",
                                  "description": "The number of days between snapshots.",
                                  "required": true
                                },
                                "start_time": {
                                  "type": "string",
                                  "description": "This must be in UTC format that resolves to one of\n00:00, 04:00, 08:00, 12:00, 16:00, or 20:00. For example,\nboth 13:00-5 and 08:00 are valid.",
                                  "required": true
                                }
                              }
                            },
                            "max_items": 1
                          },
                          "hourly_schedule": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "hours_in_cycle": {
                                  "type": "number",
                                  "description": "The number of hours between snapshots.",
                                  "required": true
                                },
                                "start_time": {
                                  "type": "string",
                                  "description": "Time within the window to start the operations.\nIt must be in an hourly format \"HH:MM\",\nwhere HH : [00-23] and MM : [00] GMT.\neg: 21:00",
                                  "required": true
                                }
                              }
                            },
                            "max_items": 1
                          },
                          "weekly_schedule": {
                            "nesting_mode": "list",
                            "block": {
                              "block_types": {
                                "day_of_weeks": {
                                  "nesting_mode": "set",
                                  "block": {
                                    "attributes": {
                                      "day": {
                                        "type": "string",
                                        "description": "The day of the week to create the snapshot. e.g. MONDAY",
                                        "required": true
                                      },
                                      "start_time": {
                                        "type": "string",
                                        "description": "Time within the window to start the operations.\nIt must be in format \"HH:MM\", where HH : [00-23] and MM : [00-00] GMT.",
                                        "required": true
                                      }
                                    }
                                  },
                                  "min_items": 1,
                                  "max_items": 7
                                }
                              }
                            },
                            "max_items": 1
                          }
                        }
                      },
                      "min_items": 1,
                      "max_items": 1
                    },
                    "snapshot_properties": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "guest_flush": {
                            "type": "bool",
                            "description": "Whether to perform a 'guest aware' snapshot.",
                            "optional": true
                          },
                          "labels": {
                            "type": [
                              "map",
                              "string"
                            ],
                            "description": "A set of key-value pairs.",
                            "optional": true
                          },
                          "storage_locations": {
                            "type": [
                              "set",
                              "string"
                            ],
                            "description": "Cloud Storage bucket location to store the auto snapshot\n(regional or multi-regional)",
                            "optional": true
                          }
                        }
                      },
                      "max_items": 1
                    }
                  }
                },
                "max_items": 1
              },
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "google_compute_route": {
          "version": 0,
          "block": {
            "attributes": {
              "description": {
                "type": "string",
                "description": "An optional description of this resource. Provide this property\nwhen you create the resource.",
                "optional": true
              },
              "dest_range": {
                "type": "string",
                "description": "The destination range of outgoing packets that this route applies to.\nOnly IPv4 is supported.",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "Name of the resource. Provided by the client when the resource is\ncreated. The name must be 1-63 characters long, and comply with\nRFC1035.  Specifically, the name must be 1-63 characters long and\nmatch the regular expression '[a-z]([-a-z0-9]*[a-z0-9])?' which means\nthe first character must be a lowercase letter, and all following\ncharacters must be a dash, lowercase letter, or digit, except the\nlast character, which cannot be a dash.",
                "required": true
              },
              "network": {
                "type": "string",
                "description": "The network that this route applies to.",
                "required": true
              },
              "next_hop_gateway": {
                "type": "string",
                "description": "URL to a gateway that should handle matching packets.\nCurrently, you can only specify the internet gateway, using a full or\npartial valid URL:\n* 'https://www.googleapis.com/compute/v1/projects/project/global/gateways/default-internet-gateway'\n* 'projects/project/global/gateways/default-internet-gateway'\n* 'global/gateways/default-internet-gateway'\n* The string 'default-internet-gateway'.",
                "optional": true
              },
              "next_hop_ilb": {
                "type": "string",
                "description": "The URL to a forwarding rule of type loadBalancingScheme=INTERNAL that should handle matching packets.\nYou can only specify the forwarding rule as a partial or full URL. For example, the following are all valid URLs:\nhttps://www.googleapis.com/compute/v1/projects/project/regions/region/forwardingRules/forwardingRule\nregions/region/forwardingRules/forwardingRule\nNote that this can only be used when the destinationRange is a public (non-RFC 1918) IP CIDR range.",
                "optional": true
              },
              "next_hop_instance": {
                "type": "string",
                "description": "URL to an instance that should handle matching packets.\nYou can specify this as a full or partial URL. For example:\n* 'https://www.googleapis.com/compute/v1/projects/project/zones/zone/instances/instance'\n* 'projects/project/zones/zone/instances/instance'\n* 'zones/zone/instances/instance'\n* Just the instance name, with the zone in 'next_hop_instance_zone'.",
                "optional": true
              },
              "next_hop_instance_zone": {
                "type": "string",
                "optional": true
              },
              "next_hop_ip": {
                "type": "string",
                "description": "Network IP address of an instance that should handle matching packets.",
                "optional": true,
                "computed": true
              },
              "next_hop_network": {
                "type": "string",
                "description": "URL to a Network that should handle matching packets.",
                "computed": true
              },
              "next_hop_vpn_tunnel": {
                "type": "string",
                "description": "URL to a VpnTunnel that should handle matching packets.",
                "optional": true
              },
              "priority": {
                "type": "number",
                "description": "The priority of this route. Priority is used to break ties in cases\nwhere there is more than one matching route of equal prefix length.\n\nIn the case of two routes with equal prefix length, the one with the\nlowest-numbered priority value wins.\n\nDefault value is 1000. Valid range is 0 through 65535.",
                "optional": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "self_link": {
                "type": "string",
                "computed": true
              },
              "tags": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "A list of instance tags to which this route applies.",
                "optional": true
              }
            },
            "block_types": {
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "google_compute_router": {
          "version": 0,
          "block": {
            "attributes": {
              "creation_timestamp": {
                "type": "string",
                "description": "Creation timestamp in RFC3339 text format.",
                "computed": true
              },
              "description": {
                "type": "string",
                "description": "An optional description of this resource.",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "Name of the resource. The name must be 1-63 characters long, and\ncomply with RFC1035. Specifically, the name must be 1-63 characters\nlong and match the regular expression '[a-z]([-a-z0-9]*[a-z0-9])?'\nwhich means the first character must be a lowercase letter, and all\nfollowing characters must be a dash, lowercase letter, or digit,\nexcept the last character, which cannot be a dash.",
                "required": true
              },
              "network": {
                "type": "string",
                "description": "A reference to the network to which this router belongs.",
                "required": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "region": {
                "type": "string",
                "description": "Region where the router resides.",
                "optional": true,
                "computed": true
              },
              "self_link": {
                "type": "string",
                "computed": true
              }
            },
            "block_types": {
              "bgp": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "advertise_mode": {
                      "type": "string",
                      "description": "User-specified flag to indicate which mode to use for advertisement.\n\nValid values of this enum field are: DEFAULT, CUSTOM",
                      "optional": true
                    },
                    "advertised_groups": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "User-specified list of prefix groups to advertise in custom mode.\nThis field can only be populated if advertiseMode is CUSTOM and\nis advertised to all peers of the router. These groups will be\nadvertised in addition to any specified prefixes. Leave this field\nblank to advertise no custom groups.\n\nThis enum field has the one valid value: ALL_SUBNETS",
                      "optional": true
                    },
                    "asn": {
                      "type": "number",
                      "description": "Local BGP Autonomous System Number (ASN). Must be an RFC6996\nprivate ASN, either 16-bit or 32-bit. The value will be fixed for\nthis router resource. All VPN tunnels that link to this router\nwill have the same local ASN.",
                      "required": true
                    }
                  },
                  "block_types": {
                    "advertised_ip_ranges": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "description": {
                            "type": "string",
                            "description": "User-specified description for the IP range.",
                            "optional": true
                          },
                          "range": {
                            "type": "string",
                            "description": "The IP range to advertise. The value must be a\nCIDR-formatted string.",
                            "required": true
                          }
                        }
                      }
                    }
                  }
                },
                "max_items": 1
              },
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "google_compute_router_interface": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "interconnect_attachment": {
                "type": "string",
                "optional": true
              },
              "ip_range": {
                "type": "string",
                "optional": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "region": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "router": {
                "type": "string",
                "required": true
              },
              "vpn_tunnel": {
                "type": "string",
                "optional": true
              }
            }
          }
        },
        "google_compute_router_nat": {
          "version": 0,
          "block": {
            "attributes": {
              "icmp_idle_timeout_sec": {
                "type": "number",
                "description": "Timeout (in seconds) for ICMP connections. Defaults to 30s if not set.",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "min_ports_per_vm": {
                "type": "number",
                "description": "Minimum number of ports allocated to a VM from this NAT.",
                "optional": true
              },
              "name": {
                "type": "string",
                "description": "Name of the NAT service. The name must be 1-63 characters long and\ncomply with RFC1035.",
                "required": true
              },
              "nat_ip_allocate_option": {
                "type": "string",
                "description": "How external IPs should be allocated for this NAT. Valid values are\n'AUTO_ONLY' for only allowing NAT IPs allocated by Google Cloud\nPlatform, or 'MANUAL_ONLY' for only user-allocated NAT IP addresses.",
                "required": true
              },
              "nat_ips": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "Self-links of NAT IPs. Only valid if natIpAllocateOption\nis set to MANUAL_ONLY.",
                "optional": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "region": {
                "type": "string",
                "description": "Region where the router and NAT reside.",
                "optional": true,
                "computed": true
              },
              "router": {
                "type": "string",
                "description": "The name of the Cloud Router in which this NAT will be configured.",
                "required": true
              },
              "source_subnetwork_ip_ranges_to_nat": {
                "type": "string",
                "description": "How NAT should be configured per Subnetwork.\nIf 'ALL_SUBNETWORKS_ALL_IP_RANGES', all of the\nIP ranges in every Subnetwork are allowed to Nat.\nIf 'ALL_SUBNETWORKS_ALL_PRIMARY_IP_RANGES', all of the primary IP\nranges in every Subnetwork are allowed to Nat.\n'LIST_OF_SUBNETWORKS': A list of Subnetworks are allowed to Nat\n(specified in the field subnetwork below). Note that if this field\ncontains ALL_SUBNETWORKS_ALL_IP_RANGES or\nALL_SUBNETWORKS_ALL_PRIMARY_IP_RANGES, then there should not be any\nother RouterNat section in any Router for this network in this region.",
                "required": true
              },
              "tcp_established_idle_timeout_sec": {
                "type": "number",
                "description": "Timeout (in seconds) for TCP established connections.\nDefaults to 1200s if not set.",
                "optional": true
              },
              "tcp_transitory_idle_timeout_sec": {
                "type": "number",
                "description": "Timeout (in seconds) for TCP transitory connections.\nDefaults to 30s if not set.",
                "optional": true
              },
              "udp_idle_timeout_sec": {
                "type": "number",
                "description": "Timeout (in seconds) for UDP connections. Defaults to 30s if not set.",
                "optional": true
              }
            },
            "block_types": {
              "log_config": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "enable": {
                      "type": "bool",
                      "description": "Indicates whether or not to export logs.",
                      "required": true
                    },
                    "filter": {
                      "type": "string",
                      "description": "Specifies the desired filtering of logs on this NAT. Valid\nvalues are: '\"ERRORS_ONLY\"', '\"TRANSLATIONS_ONLY\"', '\"ALL\"'",
                      "required": true
                    }
                  }
                },
                "max_items": 1
              },
              "subnetwork": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "name": {
                      "type": "string",
                      "description": "Self-link of subnetwork to NAT",
                      "required": true
                    },
                    "secondary_ip_range_names": {
                      "type": [
                        "set",
                        "string"
                      ],
                      "description": "List of the secondary ranges of the subnetwork that are allowed\nto use NAT. This can be populated only if\n'LIST_OF_SECONDARY_IP_RANGES' is one of the values in\nsourceIpRangesToNat",
                      "optional": true
                    },
                    "source_ip_ranges_to_nat": {
                      "type": [
                        "set",
                        "string"
                      ],
                      "description": "List of options for which source IPs in the subnetwork\nshould have NAT enabled. Supported values include:\n'ALL_IP_RANGES', 'LIST_OF_SECONDARY_IP_RANGES',\n'PRIMARY_IP_RANGE'.",
                      "required": true
                    }
                  }
                }
              },
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "google_compute_router_peer": {
          "version": 0,
          "block": {
            "attributes": {
              "advertise_mode": {
                "type": "string",
                "description": "User-specified flag to indicate which mode to use for advertisement.\nValid values of this enum field are: 'DEFAULT', 'CUSTOM'",
                "optional": true
              },
              "advertised_groups": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "User-specified list of prefix groups to advertise in custom\nmode, which can take one of the following options:\n\n* 'ALL_SUBNETS': Advertises all available subnets, including peer VPC subnets.\n* 'ALL_VPC_SUBNETS': Advertises the router's own VPC subnets.\n* 'ALL_PEER_VPC_SUBNETS': Advertises peer subnets of the router's VPC network.\n\n\nNote that this field can only be populated if advertiseMode is 'CUSTOM'\nand overrides the list defined for the router (in the \"bgp\" message).\nThese groups are advertised in addition to any specified prefixes.\nLeave this field blank to advertise no custom groups.",
                "optional": true
              },
              "advertised_route_priority": {
                "type": "number",
                "description": "The priority of routes advertised to this BGP peer.\nWhere there is more than one matching route of maximum\nlength, the routes with the lowest priority value win.",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "interface": {
                "type": "string",
                "description": "Name of the interface the BGP peer is associated with.",
                "required": true
              },
              "ip_address": {
                "type": "string",
                "description": "IP address of the interface inside Google Cloud Platform.\nOnly IPv4 is supported.",
                "computed": true
              },
              "management_type": {
                "type": "string",
                "description": "The resource that configures and manages this BGP peer.\n\n* 'MANAGED_BY_USER' is the default value and can be managed by\nyou or other users\n* 'MANAGED_BY_ATTACHMENT' is a BGP peer that is configured and\nmanaged by Cloud Interconnect, specifically by an\nInterconnectAttachment of type PARTNER. Google automatically\ncreates, updates, and deletes this type of BGP peer when the\nPARTNER InterconnectAttachment is created, updated,\nor deleted.",
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "Name of this BGP peer. The name must be 1-63 characters long,\nand comply with RFC1035. Specifically, the name must be 1-63 characters\nlong and match the regular expression '[a-z]([-a-z0-9]*[a-z0-9])?' which\nmeans the first character must be a lowercase letter, and all\nfollowing characters must be a dash, lowercase letter, or digit,\nexcept the last character, which cannot be a dash.",
                "required": true
              },
              "peer_asn": {
                "type": "number",
                "description": "Peer BGP Autonomous System Number (ASN).\nEach BGP interface may use a different value.",
                "required": true
              },
              "peer_ip_address": {
                "type": "string",
                "description": "IP address of the BGP interface outside Google Cloud Platform.\nOnly IPv4 is supported.",
                "required": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "region": {
                "type": "string",
                "description": "Region where the router and BgpPeer reside.\nIf it is not provided, the provider region is used.",
                "optional": true,
                "computed": true
              },
              "router": {
                "type": "string",
                "description": "The name of the Cloud Router in which this BgpPeer will be configured.",
                "required": true
              }
            },
            "block_types": {
              "advertised_ip_ranges": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "description": {
                      "type": "string",
                      "description": "User-specified description for the IP range.",
                      "optional": true
                    },
                    "range": {
                      "type": "string",
                      "description": "The IP range to advertise. The value must be a\nCIDR-formatted string.",
                      "required": true
                    }
                  }
                }
              },
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "google_compute_security_policy": {
          "version": 0,
          "block": {
            "attributes": {
              "description": {
                "type": "string",
                "optional": true
              },
              "fingerprint": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "self_link": {
                "type": "string",
                "computed": true
              }
            },
            "block_types": {
              "rule": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "action": {
                      "type": "string",
                      "required": true
                    },
                    "description": {
                      "type": "string",
                      "optional": true
                    },
                    "preview": {
                      "type": "bool",
                      "optional": true
                    },
                    "priority": {
                      "type": "number",
                      "required": true
                    }
                  },
                  "block_types": {
                    "match": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "versioned_expr": {
                            "type": "string",
                            "optional": true
                          }
                        },
                        "block_types": {
                          "config": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "src_ip_ranges": {
                                  "type": [
                                    "set",
                                    "string"
                                  ],
                                  "required": true
                                }
                              }
                            },
                            "max_items": 1
                          },
                          "expr": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "expression": {
                                  "type": "string",
                                  "required": true
                                }
                              }
                            },
                            "max_items": 1
                          }
                        }
                      },
                      "min_items": 1,
                      "max_items": 1
                    }
                  }
                }
              },
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "google_compute_shared_vpc_host_project": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "project": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "google_compute_shared_vpc_service_project": {
          "version": 0,
          "block": {
            "attributes": {
              "host_project": {
                "type": "string",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "service_project": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "google_compute_snapshot": {
          "version": 0,
          "block": {
            "attributes": {
              "creation_timestamp": {
                "type": "string",
                "description": "Creation timestamp in RFC3339 text format.",
                "computed": true
              },
              "description": {
                "type": "string",
                "description": "An optional description of this resource.",
                "optional": true
              },
              "disk_size_gb": {
                "type": "number",
                "description": "Size of the snapshot, specified in GB.",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "label_fingerprint": {
                "type": "string",
                "description": "The fingerprint used for optimistic locking of this resource. Used\ninternally during updates.",
                "computed": true
              },
              "labels": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "Labels to apply to this Snapshot.",
                "optional": true
              },
              "licenses": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "A list of public visible licenses that apply to this snapshot. This\ncan be because the original image had licenses attached (such as a\nWindows image).  snapshotEncryptionKey nested object Encrypts the\nsnapshot using a customer-supplied encryption key.",
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "Name of the resource; provided by the client when the resource is\ncreated. The name must be 1-63 characters long, and comply with\nRFC1035. Specifically, the name must be 1-63 characters long and match\nthe regular expression '[a-z]([-a-z0-9]*[a-z0-9])?' which means the\nfirst character must be a lowercase letter, and all following\ncharacters must be a dash, lowercase letter, or digit, except the last\ncharacter, which cannot be a dash.",
                "required": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "self_link": {
                "type": "string",
                "computed": true
              },
              "snapshot_id": {
                "type": "number",
                "description": "The unique identifier for the resource.",
                "computed": true
              },
              "source_disk": {
                "type": "string",
                "description": "A reference to the disk used to create this snapshot.",
                "required": true
              },
              "source_disk_link": {
                "type": "string",
                "computed": true
              },
              "storage_bytes": {
                "type": "number",
                "description": "A size of the the storage used by the snapshot. As snapshots share\nstorage, this number is expected to change with snapshot\ncreation/deletion.",
                "computed": true
              },
              "zone": {
                "type": "string",
                "description": "A reference to the zone where the disk is hosted.",
                "optional": true,
                "computed": true
              }
            },
            "block_types": {
              "snapshot_encryption_key": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "raw_key": {
                      "type": "string",
                      "description": "Specifies a 256-bit customer-supplied encryption key, encoded in\nRFC 4648 base64 to either encrypt or decrypt this resource.",
                      "required": true,
                      "sensitive": true
                    },
                    "sha256": {
                      "type": "string",
                      "description": "The RFC 4648 base64 encoded SHA-256 hash of the customer-supplied\nencryption key that protects this resource.",
                      "computed": true
                    }
                  }
                },
                "max_items": 1
              },
              "source_disk_encryption_key": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "raw_key": {
                      "type": "string",
                      "description": "Specifies a 256-bit customer-supplied encryption key, encoded in\nRFC 4648 base64 to either encrypt or decrypt this resource.",
                      "optional": true,
                      "sensitive": true
                    }
                  }
                },
                "max_items": 1
              },
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "google_compute_ssl_certificate": {
          "version": 0,
          "block": {
            "attributes": {
              "certificate": {
                "type": "string",
                "description": "The certificate in PEM format.\nThe certificate chain must be no greater than 5 certs long.\nThe chain must include at least one intermediate cert.",
                "required": true,
                "sensitive": true
              },
              "certificate_id": {
                "type": "number",
                "description": "The unique identifier for the resource.",
                "computed": true
              },
              "creation_timestamp": {
                "type": "string",
                "description": "Creation timestamp in RFC3339 text format.",
                "computed": true
              },
              "description": {
                "type": "string",
                "description": "An optional description of this resource.",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "Name of the resource. Provided by the client when the resource is\ncreated. The name must be 1-63 characters long, and comply with\nRFC1035. Specifically, the name must be 1-63 characters long and match\nthe regular expression '[a-z]([-a-z0-9]*[a-z0-9])?' which means the\nfirst character must be a lowercase letter, and all following\ncharacters must be a dash, lowercase letter, or digit, except the last\ncharacter, which cannot be a dash.\n\n\nThese are in the same namespace as the managed SSL certificates.",
                "optional": true,
                "computed": true
              },
              "name_prefix": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "private_key": {
                "type": "string",
                "description": "The write-only private key in PEM format.",
                "required": true,
                "sensitive": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "self_link": {
                "type": "string",
                "computed": true
              }
            },
            "block_types": {
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "google_compute_ssl_policy": {
          "version": 0,
          "block": {
            "attributes": {
              "creation_timestamp": {
                "type": "string",
                "description": "Creation timestamp in RFC3339 text format.",
                "computed": true
              },
              "custom_features": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "Profile specifies the set of SSL features that can be used by the\nload balancer when negotiating SSL with clients. This can be one of\n'COMPATIBLE', 'MODERN', 'RESTRICTED', or 'CUSTOM'. If using 'CUSTOM',\nthe set of SSL features to enable must be specified in the\n'customFeatures' field.\n\nSee the [official documentation](https://cloud.google.com/compute/docs/load-balancing/ssl-policies#profilefeaturesupport)\nfor which ciphers are available to use. **Note**: this argument\n*must* be present when using the 'CUSTOM' profile. This argument\n*must not* be present when using any other profile.",
                "optional": true
              },
              "description": {
                "type": "string",
                "description": "An optional description of this resource.",
                "optional": true
              },
              "enabled_features": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "The list of features enabled in the SSL policy.",
                "computed": true
              },
              "fingerprint": {
                "type": "string",
                "description": "Fingerprint of this resource. A hash of the contents stored in this\nobject. This field is used in optimistic locking.",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "min_tls_version": {
                "type": "string",
                "description": "The minimum version of SSL protocol that can be used by the clients\nto establish a connection with the load balancer. This can be one of\n'TLS_1_0', 'TLS_1_1', 'TLS_1_2'.\n Default is 'TLS_1_0'.",
                "optional": true
              },
              "name": {
                "type": "string",
                "description": "Name of the resource. Provided by the client when the resource is\ncreated. The name must be 1-63 characters long, and comply with\nRFC1035. Specifically, the name must be 1-63 characters long and match\nthe regular expression '[a-z]([-a-z0-9]*[a-z0-9])?' which means the\nfirst character must be a lowercase letter, and all following\ncharacters must be a dash, lowercase letter, or digit, except the last\ncharacter, which cannot be a dash.",
                "required": true
              },
              "profile": {
                "type": "string",
                "description": "Profile specifies the set of SSL features that can be used by the\nload balancer when negotiating SSL with clients. This can be one of\n'COMPATIBLE', 'MODERN', 'RESTRICTED', or 'CUSTOM'. If using 'CUSTOM',\nthe set of SSL features to enable must be specified in the\n'customFeatures' field.\n\nSee the [official documentation](https://cloud.google.com/compute/docs/load-balancing/ssl-policies#profilefeaturesupport)\nfor information on what cipher suites each profile provides. If\n'CUSTOM' is used, the 'custom_features' attribute **must be set**.\nDefault is 'COMPATIBLE'.",
                "optional": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "self_link": {
                "type": "string",
                "computed": true
              }
            },
            "block_types": {
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "google_compute_subnetwork": {
          "version": 0,
          "block": {
            "attributes": {
              "creation_timestamp": {
                "type": "string",
                "description": "Creation timestamp in RFC3339 text format.",
                "computed": true
              },
              "description": {
                "type": "string",
                "description": "An optional description of this resource. Provide this property when\nyou create the resource. This field can be set only at resource\ncreation time.",
                "optional": true
              },
              "enable_flow_logs": {
                "type": "bool",
                "optional": true,
                "computed": true
              },
              "fingerprint": {
                "type": "string",
                "description": "Fingerprint of this resource. This field is used internally during updates of this resource.",
                "computed": true
              },
              "gateway_address": {
                "type": "string",
                "description": "The gateway address for default routes to reach destination addresses\noutside this subnetwork.",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "ip_cidr_range": {
                "type": "string",
                "description": "The range of internal addresses that are owned by this subnetwork.\nProvide this property when you create the subnetwork. For example,\n10.0.0.0/8 or 192.168.0.0/16. Ranges must be unique and\nnon-overlapping within a network. Only IPv4 is supported.",
                "required": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource, provided by the client when initially\ncreating the resource. The name must be 1-63 characters long, and\ncomply with RFC1035. Specifically, the name must be 1-63 characters\nlong and match the regular expression '[a-z]([-a-z0-9]*[a-z0-9])?' which\nmeans the first character must be a lowercase letter, and all\nfollowing characters must be a dash, lowercase letter, or digit,\nexcept the last character, which cannot be a dash.",
                "required": true
              },
              "network": {
                "type": "string",
                "description": "The network this subnet belongs to.\nOnly networks that are in the distributed mode can have subnetworks.",
                "required": true
              },
              "private_ip_google_access": {
                "type": "bool",
                "description": "When enabled, VMs in this subnetwork without external IP addresses can\naccess Google APIs and services by using Private Google Access.",
                "optional": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "region": {
                "type": "string",
                "description": "URL of the GCP region for this subnetwork.",
                "optional": true,
                "computed": true
              },
              "secondary_ip_range": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "ip_cidr_range": "string",
                      "range_name": "string"
                    }
                  ]
                ],
                "description": "An array of configurations for secondary IP ranges for VM instances\ncontained in this subnetwork. The primary IP of such VM must belong\nto the primary ipCidrRange of the subnetwork. The alias IPs may belong\nto either primary or secondary ranges.\n\n**Note**: This field uses [attr-as-block mode](https://www.terraform.io/docs/configuration/attr-as-blocks.html) to avoid\nbreaking users during the 0.12 upgrade. To explicitly send a list\nof zero objects you must use the following syntax:\n'example=[]'\nFor more details about this behavior, see [this section](https://www.terraform.io/docs/configuration/attr-as-blocks.html#defining-a-fixed-object-collection-value).",
                "optional": true,
                "computed": true
              },
              "self_link": {
                "type": "string",
                "computed": true
              }
            },
            "block_types": {
              "log_config": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "aggregation_interval": {
                      "type": "string",
                      "description": "Can only be specified if VPC flow logging for this subnetwork is enabled.\nToggles the aggregation interval for collecting flow logs. Increasing the\ninterval time will reduce the amount of generated flow logs for long\nlasting connections. Default is an interval of 5 seconds per connection.\nPossible values are INTERVAL_5_SEC, INTERVAL_30_SEC, INTERVAL_1_MIN,\nINTERVAL_5_MIN, INTERVAL_10_MIN, INTERVAL_15_MIN",
                      "optional": true
                    },
                    "flow_sampling": {
                      "type": "number",
                      "description": "Can only be specified if VPC flow logging for this subnetwork is enabled.\nThe value of the field must be in [0, 1]. Set the sampling rate of VPC\nflow logs within the subnetwork where 1.0 means all collected logs are\nreported and 0.0 means no logs are reported. Default is 0.5 which means\nhalf of all collected logs are reported.",
                      "optional": true
                    },
                    "metadata": {
                      "type": "string",
                      "description": "Can only be specified if VPC flow logging for this subnetwork is enabled.\nConfigures whether metadata fields should be added to the reported VPC\nflow logs. Default is 'INCLUDE_ALL_METADATA'.",
                      "optional": true
                    }
                  }
                },
                "max_items": 1
              },
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "google_compute_subnetwork_iam_binding": {
          "version": 0,
          "block": {
            "attributes": {
              "etag": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "members": {
                "type": [
                  "set",
                  "string"
                ],
                "required": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "region": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "role": {
                "type": "string",
                "required": true
              },
              "subnetwork": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "google_compute_subnetwork_iam_member": {
          "version": 0,
          "block": {
            "attributes": {
              "etag": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "member": {
                "type": "string",
                "required": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "region": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "role": {
                "type": "string",
                "required": true
              },
              "subnetwork": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "google_compute_subnetwork_iam_policy": {
          "version": 0,
          "block": {
            "attributes": {
              "etag": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "policy_data": {
                "type": "string",
                "required": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "region": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "subnetwork": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "google_compute_target_http_proxy": {
          "version": 0,
          "block": {
            "attributes": {
              "creation_timestamp": {
                "type": "string",
                "description": "Creation timestamp in RFC3339 text format.",
                "computed": true
              },
              "description": {
                "type": "string",
                "description": "An optional description of this resource.",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "Name of the resource. Provided by the client when the resource is\ncreated. The name must be 1-63 characters long, and comply with\nRFC1035. Specifically, the name must be 1-63 characters long and match\nthe regular expression '[a-z]([-a-z0-9]*[a-z0-9])?' which means the\nfirst character must be a lowercase letter, and all following\ncharacters must be a dash, lowercase letter, or digit, except the last\ncharacter, which cannot be a dash.",
                "required": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "proxy_id": {
                "type": "number",
                "description": "The unique identifier for the resource.",
                "computed": true
              },
              "self_link": {
                "type": "string",
                "computed": true
              },
              "url_map": {
                "type": "string",
                "description": "A reference to the UrlMap resource that defines the mapping from URL\nto the BackendService.",
                "required": true
              }
            },
            "block_types": {
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "google_compute_target_https_proxy": {
          "version": 0,
          "block": {
            "attributes": {
              "creation_timestamp": {
                "type": "string",
                "description": "Creation timestamp in RFC3339 text format.",
                "computed": true
              },
              "description": {
                "type": "string",
                "description": "An optional description of this resource.",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "Name of the resource. Provided by the client when the resource is\ncreated. The name must be 1-63 characters long, and comply with\nRFC1035. Specifically, the name must be 1-63 characters long and match\nthe regular expression '[a-z]([-a-z0-9]*[a-z0-9])?' which means the\nfirst character must be a lowercase letter, and all following\ncharacters must be a dash, lowercase letter, or digit, except the last\ncharacter, which cannot be a dash.",
                "required": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "proxy_id": {
                "type": "number",
                "description": "The unique identifier for the resource.",
                "computed": true
              },
              "quic_override": {
                "type": "string",
                "description": "Specifies the QUIC override policy for this resource. This determines\nwhether the load balancer will attempt to negotiate QUIC with clients\nor not. Can specify one of NONE, ENABLE, or DISABLE. If NONE is\nspecified, uses the QUIC policy with no user overrides, which is\nequivalent to DISABLE. Not specifying this field is equivalent to\nspecifying NONE.",
                "optional": true
              },
              "self_link": {
                "type": "string",
                "computed": true
              },
              "ssl_certificates": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "A list of SslCertificate resources that are used to authenticate\nconnections between users and the load balancer. At least one SSL\ncertificate must be specified.",
                "required": true
              },
              "ssl_policy": {
                "type": "string",
                "description": "A reference to the SslPolicy resource that will be associated with\nthe TargetHttpsProxy resource. If not set, the TargetHttpsProxy\nresource will not have any SSL policy configured.",
                "optional": true
              },
              "url_map": {
                "type": "string",
                "description": "A reference to the UrlMap resource that defines the mapping from URL\nto the BackendService.",
                "required": true
              }
            },
            "block_types": {
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "google_compute_target_instance": {
          "version": 0,
          "block": {
            "attributes": {
              "creation_timestamp": {
                "type": "string",
                "description": "Creation timestamp in RFC3339 text format.",
                "computed": true
              },
              "description": {
                "type": "string",
                "description": "An optional description of this resource.",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "instance": {
                "type": "string",
                "description": "The Compute instance VM handling traffic for this target instance.\nAccepts the instance self-link, relative path\n(e.g. 'projects/project/zones/zone/instances/instance') or name. If\nname is given, the zone will default to the given zone or\nthe provider-default zone and the project will default to the\nprovider-level project.",
                "required": true
              },
              "name": {
                "type": "string",
                "description": "Name of the resource. Provided by the client when the resource is\ncreated. The name must be 1-63 characters long, and comply with\nRFC1035. Specifically, the name must be 1-63 characters long and match\nthe regular expression '[a-z]([-a-z0-9]*[a-z0-9])?' which means the\nfirst character must be a lowercase letter, and all following\ncharacters must be a dash, lowercase letter, or digit, except the last\ncharacter, which cannot be a dash.",
                "required": true
              },
              "nat_policy": {
                "type": "string",
                "description": "NAT option controlling how IPs are NAT'ed to the instance.\nCurrently only NO_NAT (default value) is supported.",
                "optional": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "self_link": {
                "type": "string",
                "computed": true
              },
              "zone": {
                "type": "string",
                "description": "URL of the zone where the target instance resides.",
                "optional": true,
                "computed": true
              }
            },
            "block_types": {
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "google_compute_target_pool": {
          "version": 0,
          "block": {
            "attributes": {
              "backup_pool": {
                "type": "string",
                "optional": true
              },
              "description": {
                "type": "string",
                "optional": true
              },
              "failover_ratio": {
                "type": "number",
                "optional": true
              },
              "health_checks": {
                "type": [
                  "list",
                  "string"
                ],
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "instances": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "region": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "self_link": {
                "type": "string",
                "computed": true
              },
              "session_affinity": {
                "type": "string",
                "optional": true
              }
            }
          }
        },
        "google_compute_target_ssl_proxy": {
          "version": 0,
          "block": {
            "attributes": {
              "backend_service": {
                "type": "string",
                "description": "A reference to the BackendService resource.",
                "required": true
              },
              "creation_timestamp": {
                "type": "string",
                "description": "Creation timestamp in RFC3339 text format.",
                "computed": true
              },
              "description": {
                "type": "string",
                "description": "An optional description of this resource.",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "Name of the resource. Provided by the client when the resource is\ncreated. The name must be 1-63 characters long, and comply with\nRFC1035. Specifically, the name must be 1-63 characters long and match\nthe regular expression '[a-z]([-a-z0-9]*[a-z0-9])?' which means the\nfirst character must be a lowercase letter, and all following\ncharacters must be a dash, lowercase letter, or digit, except the last\ncharacter, which cannot be a dash.",
                "required": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "proxy_header": {
                "type": "string",
                "description": "Specifies the type of proxy header to append before sending data to\nthe backend, either NONE or PROXY_V1. The default is NONE.",
                "optional": true
              },
              "proxy_id": {
                "type": "number",
                "description": "The unique identifier for the resource.",
                "computed": true
              },
              "self_link": {
                "type": "string",
                "computed": true
              },
              "ssl_certificates": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "A list of SslCertificate resources that are used to authenticate\nconnections between users and the load balancer. Currently, exactly\none SSL certificate must be specified.",
                "required": true
              },
              "ssl_policy": {
                "type": "string",
                "description": "A reference to the SslPolicy resource that will be associated with\nthe TargetSslProxy resource. If not set, the TargetSslProxy\nresource will not have any SSL policy configured.",
                "optional": true
              }
            },
            "block_types": {
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "google_compute_target_tcp_proxy": {
          "version": 0,
          "block": {
            "attributes": {
              "backend_service": {
                "type": "string",
                "description": "A reference to the BackendService resource.",
                "required": true
              },
              "creation_timestamp": {
                "type": "string",
                "description": "Creation timestamp in RFC3339 text format.",
                "computed": true
              },
              "description": {
                "type": "string",
                "description": "An optional description of this resource.",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "Name of the resource. Provided by the client when the resource is\ncreated. The name must be 1-63 characters long, and comply with\nRFC1035. Specifically, the name must be 1-63 characters long and match\nthe regular expression '[a-z]([-a-z0-9]*[a-z0-9])?' which means the\nfirst character must be a lowercase letter, and all following\ncharacters must be a dash, lowercase letter, or digit, except the last\ncharacter, which cannot be a dash.",
                "required": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "proxy_header": {
                "type": "string",
                "description": "Specifies the type of proxy header to append before sending data to\nthe backend, either NONE or PROXY_V1. The default is NONE.",
                "optional": true
              },
              "proxy_id": {
                "type": "number",
                "description": "The unique identifier for the resource.",
                "computed": true
              },
              "self_link": {
                "type": "string",
                "computed": true
              }
            },
            "block_types": {
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "google_compute_url_map": {
          "version": 0,
          "block": {
            "attributes": {
              "creation_timestamp": {
                "type": "string",
                "description": "Creation timestamp in RFC3339 text format.",
                "computed": true
              },
              "default_service": {
                "type": "string",
                "description": "The backend service or backend bucket to use when none of the given rules match.",
                "optional": true
              },
              "description": {
                "type": "string",
                "description": "An optional description of this resource. Provide this property when you create\nthe resource.",
                "optional": true
              },
              "fingerprint": {
                "type": "string",
                "description": "Fingerprint of this resource. A hash of the contents stored in this object. This\nfield is used in optimistic locking.",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "map_id": {
                "type": "number",
                "description": "The unique identifier for the resource.",
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "Name of the resource. Provided by the client when the resource is created. The\nname must be 1-63 characters long, and comply with RFC1035. Specifically, the\nname must be 1-63 characters long and match the regular expression\n'[a-z]([-a-z0-9]*[a-z0-9])?' which means the first character must be a lowercase\nletter, and all following characters must be a dash, lowercase letter, or digit,\nexcept the last character, which cannot be a dash.",
                "required": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "self_link": {
                "type": "string",
                "computed": true
              }
            },
            "block_types": {
              "header_action": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "request_headers_to_remove": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "A list of header names for headers that need to be removed from the request\nprior to forwarding the request to the backendService.",
                      "optional": true
                    },
                    "response_headers_to_remove": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "A list of header names for headers that need to be removed from the response\nprior to sending the response back to the client.",
                      "optional": true
                    }
                  },
                  "block_types": {
                    "request_headers_to_add": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "header_name": {
                            "type": "string",
                            "description": "The name of the header.",
                            "required": true
                          },
                          "header_value": {
                            "type": "string",
                            "description": "The value of the header to add.",
                            "required": true
                          },
                          "replace": {
                            "type": "bool",
                            "description": "If false, headerValue is appended to any values that already exist for the\nheader. If true, headerValue is set for the header, discarding any values that\nwere set for that header.",
                            "required": true
                          }
                        }
                      }
                    },
                    "response_headers_to_add": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "header_name": {
                            "type": "string",
                            "description": "The name of the header.",
                            "required": true
                          },
                          "header_value": {
                            "type": "string",
                            "description": "The value of the header to add.",
                            "required": true
                          },
                          "replace": {
                            "type": "bool",
                            "description": "If false, headerValue is appended to any values that already exist for the\nheader. If true, headerValue is set for the header, discarding any values that\nwere set for that header.",
                            "required": true
                          }
                        }
                      }
                    }
                  }
                },
                "max_items": 1
              },
              "host_rule": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "description": {
                      "type": "string",
                      "description": "An optional description of this resource. Provide this property when you create\nthe resource.",
                      "optional": true
                    },
                    "hosts": {
                      "type": [
                        "set",
                        "string"
                      ],
                      "description": "The list of host patterns to match. They must be valid hostnames, except * will\nmatch any string of ([a-z0-9-.]*). In that case, * must be the first character\nand must be followed in the pattern by either - or ..",
                      "required": true
                    },
                    "path_matcher": {
                      "type": "string",
                      "description": "The name of the PathMatcher to use to match the path portion of the URL if the\nhostRule matches the URL's host portion.",
                      "required": true
                    }
                  }
                }
              },
              "path_matcher": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "default_service": {
                      "type": "string",
                      "description": "The backend service or backend bucket to use when none of the given paths match.",
                      "optional": true
                    },
                    "description": {
                      "type": "string",
                      "description": "An optional description of this resource. Provide this property when you create\nthe resource.",
                      "optional": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name to which this PathMatcher is referred by the HostRule.",
                      "required": true
                    }
                  },
                  "block_types": {
                    "header_action": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "request_headers_to_remove": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description": "A list of header names for headers that need to be removed from the request\nprior to forwarding the request to the backendService.",
                            "optional": true
                          },
                          "response_headers_to_remove": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description": "A list of header names for headers that need to be removed from the response\nprior to sending the response back to the client.",
                            "optional": true
                          }
                        },
                        "block_types": {
                          "request_headers_to_add": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "header_name": {
                                  "type": "string",
                                  "description": "The name of the header.",
                                  "required": true
                                },
                                "header_value": {
                                  "type": "string",
                                  "description": "The value of the header to add.",
                                  "required": true
                                },
                                "replace": {
                                  "type": "bool",
                                  "description": "If false, headerValue is appended to any values that already exist for the\nheader. If true, headerValue is set for the header, discarding any values that\nwere set for that header.",
                                  "required": true
                                }
                              }
                            }
                          },
                          "response_headers_to_add": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "header_name": {
                                  "type": "string",
                                  "description": "The name of the header.",
                                  "required": true
                                },
                                "header_value": {
                                  "type": "string",
                                  "description": "The value of the header to add.",
                                  "required": true
                                },
                                "replace": {
                                  "type": "bool",
                                  "description": "If false, headerValue is appended to any values that already exist for the\nheader. If true, headerValue is set for the header, discarding any values that\nwere set for that header.",
                                  "required": true
                                }
                              }
                            }
                          }
                        }
                      },
                      "max_items": 1
                    },
                    "path_rule": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "paths": {
                            "type": [
                              "set",
                              "string"
                            ],
                            "description": "The list of path patterns to match. Each must start with / and the only place a\n* is allowed is at the end following a /. The string fed to the path matcher\ndoes not include any text after the first ? or #, and those chars are not\nallowed here.",
                            "required": true
                          },
                          "service": {
                            "type": "string",
                            "description": "The backend service or backend bucket to use if any of the given paths match.",
                            "optional": true
                          }
                        },
                        "block_types": {
                          "route_action": {
                            "nesting_mode": "list",
                            "block": {
                              "block_types": {
                                "cors_policy": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "allow_credentials": {
                                        "type": "bool",
                                        "description": "In response to a preflight request, setting this to true indicates that the\nactual request can include user credentials. This translates to the Access-\nControl-Allow-Credentials header. Defaults to false.",
                                        "optional": true
                                      },
                                      "allow_headers": {
                                        "type": [
                                          "list",
                                          "string"
                                        ],
                                        "description": "Specifies the content for the Access-Control-Allow-Headers header.",
                                        "optional": true
                                      },
                                      "allow_methods": {
                                        "type": [
                                          "list",
                                          "string"
                                        ],
                                        "description": "Specifies the content for the Access-Control-Allow-Methods header.",
                                        "optional": true
                                      },
                                      "allow_origin_regexes": {
                                        "type": [
                                          "list",
                                          "string"
                                        ],
                                        "description": "Specifies the regualar expression patterns that match allowed origins. For\nregular expression grammar please see en.cppreference.com/w/cpp/regex/ecmascript\nAn origin is allowed if it matches either allow_origins or allow_origin_regex.",
                                        "optional": true
                                      },
                                      "allow_origins": {
                                        "type": [
                                          "list",
                                          "string"
                                        ],
                                        "description": "Specifies the list of origins that will be allowed to do CORS requests. An\norigin is allowed if it matches either allow_origins or allow_origin_regex.",
                                        "optional": true
                                      },
                                      "disabled": {
                                        "type": "bool",
                                        "description": "If true, specifies the CORS policy is disabled.",
                                        "required": true
                                      },
                                      "expose_headers": {
                                        "type": [
                                          "list",
                                          "string"
                                        ],
                                        "description": "Specifies the content for the Access-Control-Expose-Headers header.",
                                        "optional": true
                                      },
                                      "max_age": {
                                        "type": "number",
                                        "description": "Specifies how long the results of a preflight request can be cached. This\ntranslates to the content for the Access-Control-Max-Age header.",
                                        "optional": true
                                      }
                                    }
                                  },
                                  "max_items": 1
                                },
                                "fault_injection_policy": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "block_types": {
                                      "abort": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "http_status": {
                                              "type": "number",
                                              "description": "The HTTP status code used to abort the request. The value must be between 200\nand 599 inclusive.",
                                              "required": true
                                            },
                                            "percentage": {
                                              "type": "number",
                                              "description": "The percentage of traffic (connections/operations/requests) which will be\naborted as part of fault injection. The value must be between 0.0 and 100.0\ninclusive.",
                                              "required": true
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "delay": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "percentage": {
                                              "type": "number",
                                              "description": "The percentage of traffic (connections/operations/requests) on which delay will\nbe introduced as part of fault injection. The value must be between 0.0 and\n100.0 inclusive.",
                                              "required": true
                                            }
                                          },
                                          "block_types": {
                                            "fixed_delay": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "nanos": {
                                                    "type": "number",
                                                    "description": "Span of time that's a fraction of a second at nanosecond resolution. Durations\nless than one second are represented with a 0 'seconds' field and a positive\n'nanos' field. Must be from 0 to 999,999,999 inclusive.",
                                                    "optional": true
                                                  },
                                                  "seconds": {
                                                    "type": "string",
                                                    "description": "Span of time at a resolution of a second. Must be from 0 to 315,576,000,000\ninclusive.",
                                                    "required": true
                                                  }
                                                }
                                              },
                                              "min_items": 1,
                                              "max_items": 1
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      }
                                    }
                                  },
                                  "max_items": 1
                                },
                                "request_mirror_policy": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "backend_service": {
                                        "type": "string",
                                        "description": "The BackendService resource being mirrored to.",
                                        "required": true
                                      }
                                    }
                                  },
                                  "max_items": 1
                                },
                                "retry_policy": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "num_retries": {
                                        "type": "number",
                                        "description": "Specifies the allowed number retries. This number must be > 0.",
                                        "optional": true
                                      },
                                      "retry_conditions": {
                                        "type": [
                                          "list",
                                          "string"
                                        ],
                                        "description": "Specifies one or more conditions when this retry rule applies. Valid values are:\n- 5xx: Loadbalancer will attempt a retry if the backend service responds with\nany 5xx response code, or if the backend service does not respond at all,\nexample: disconnects, reset, read timeout, connection failure, and refused\nstreams.\n- gateway-error: Similar to 5xx, but only applies to response codes\n502, 503 or 504.\n- connect-failure: Loadbalancer will retry on failures\nconnecting to backend services, for example due to connection timeouts.\n- retriable-4xx: Loadbalancer will retry for retriable 4xx response codes.\nCurrently the only retriable error supported is 409.\n- refused-stream: Loadbalancer will retry if the backend service resets the stream with a\nREFUSED_STREAM error code. This reset type indicates that it is safe to retry.\n- cancelled: Loadbalancer will retry if the gRPC status code in the response\nheader is set to cancelled\n- deadline-exceeded: Loadbalancer will retry if the\ngRPC status code in the response header is set to deadline-exceeded\n- resource-exhausted: Loadbalancer will retry if the gRPC status code in the response\nheader is set to resource-exhausted\n- unavailable: Loadbalancer will retry if\nthe gRPC status code in the response header is set to unavailable",
                                        "optional": true
                                      }
                                    },
                                    "block_types": {
                                      "per_try_timeout": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "nanos": {
                                              "type": "number",
                                              "description": "Span of time that's a fraction of a second at nanosecond resolution. Durations\nless than one second are represented with a 0 'seconds' field and a positive\n'nanos' field. Must be from 0 to 999,999,999 inclusive.",
                                              "optional": true
                                            },
                                            "seconds": {
                                              "type": "string",
                                              "description": "Span of time at a resolution of a second. Must be from 0 to 315,576,000,000\ninclusive.",
                                              "required": true
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      }
                                    }
                                  },
                                  "max_items": 1
                                },
                                "timeout": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "nanos": {
                                        "type": "number",
                                        "description": "Span of time that's a fraction of a second at nanosecond resolution. Durations\nless than one second are represented with a 0 'seconds' field and a positive\n'nanos' field. Must be from 0 to 999,999,999 inclusive.",
                                        "optional": true
                                      },
                                      "seconds": {
                                        "type": "string",
                                        "description": "Span of time at a resolution of a second. Must be from 0 to 315,576,000,000\ninclusive.",
                                        "required": true
                                      }
                                    }
                                  },
                                  "max_items": 1
                                },
                                "url_rewrite": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "host_rewrite": {
                                        "type": "string",
                                        "description": "Prior to forwarding the request to the selected service, the request's host\nheader is replaced with contents of hostRewrite. The value must be between 1 and\n255 characters.",
                                        "optional": true
                                      },
                                      "path_prefix_rewrite": {
                                        "type": "string",
                                        "description": "Prior to forwarding the request to the selected backend service, the matching\nportion of the request's path is replaced by pathPrefixRewrite. The value must\nbe between 1 and 1024 characters.",
                                        "optional": true
                                      }
                                    }
                                  },
                                  "max_items": 1
                                },
                                "weighted_backend_services": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "backend_service": {
                                        "type": "string",
                                        "description": "The default BackendService resource. Before\nforwarding the request to backendService, the loadbalancer applies any relevant\nheaderActions specified as part of this backendServiceWeight.",
                                        "required": true
                                      },
                                      "weight": {
                                        "type": "number",
                                        "description": "Specifies the fraction of traffic sent to backendService, computed as weight /\n(sum of all weightedBackendService weights in routeAction) . The selection of a\nbackend service is determined only for new traffic. Once a user's request has\nbeen directed to a backendService, subsequent requests will be sent to the same\nbackendService as determined by the BackendService's session affinity policy.\nThe value must be between 0 and 1000",
                                        "required": true
                                      }
                                    },
                                    "block_types": {
                                      "header_action": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "request_headers_to_remove": {
                                              "type": [
                                                "list",
                                                "string"
                                              ],
                                              "description": "A list of header names for headers that need to be removed from the request\nprior to forwarding the request to the backendService.",
                                              "optional": true
                                            },
                                            "response_headers_to_remove": {
                                              "type": [
                                                "list",
                                                "string"
                                              ],
                                              "description": "A list of header names for headers that need to be removed from the response\nprior to sending the response back to the client.",
                                              "optional": true
                                            }
                                          },
                                          "block_types": {
                                            "request_headers_to_add": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "header_name": {
                                                    "type": "string",
                                                    "description": "The name of the header.",
                                                    "required": true
                                                  },
                                                  "header_value": {
                                                    "type": "string",
                                                    "description": "The value of the header to add.",
                                                    "required": true
                                                  },
                                                  "replace": {
                                                    "type": "bool",
                                                    "description": "If false, headerValue is appended to any values that already exist for the\nheader. If true, headerValue is set for the header, discarding any values that\nwere set for that header.",
                                                    "required": true
                                                  }
                                                }
                                              }
                                            },
                                            "response_headers_to_add": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "header_name": {
                                                    "type": "string",
                                                    "description": "The name of the header.",
                                                    "required": true
                                                  },
                                                  "header_value": {
                                                    "type": "string",
                                                    "description": "The value of the header to add.",
                                                    "required": true
                                                  },
                                                  "replace": {
                                                    "type": "bool",
                                                    "description": "If false, headerValue is appended to any values that already exist for the\nheader. If true, headerValue is set for the header, discarding any values that\nwere set for that header.",
                                                    "required": true
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "max_items": 1
                          },
                          "url_redirect": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "host_redirect": {
                                  "type": "string",
                                  "description": "The host that will be used in the redirect response instead of the one that was\nsupplied in the request. The value must be between 1 and 255 characters.",
                                  "optional": true
                                },
                                "https_redirect": {
                                  "type": "bool",
                                  "description": "If set to true, the URL scheme in the redirected request is set to https. If set\nto false, the URL scheme of the redirected request will remain the same as that\nof the request. This must only be set for UrlMaps used in TargetHttpProxys.\nSetting this true for TargetHttpsProxy is not permitted. Defaults to false.",
                                  "optional": true
                                },
                                "path_redirect": {
                                  "type": "string",
                                  "description": "The path that will be used in the redirect response instead of the one that was\nsupplied in the request. Only one of pathRedirect or prefixRedirect must be\nspecified. The value must be between 1 and 1024 characters.",
                                  "optional": true
                                },
                                "prefix_redirect": {
                                  "type": "string",
                                  "description": "The prefix that replaces the prefixMatch specified in the HttpRouteRuleMatch,\nretaining the remaining portion of the URL before redirecting the request.",
                                  "optional": true
                                },
                                "redirect_response_code": {
                                  "type": "string",
                                  "description": "The HTTP Status code to use for this RedirectAction. Supported values are:\n- MOVED_PERMANENTLY_DEFAULT, which is the default value and corresponds to 301.\n- FOUND, which corresponds to 302.\n- SEE_OTHER which corresponds to 303.\n- TEMPORARY_REDIRECT, which corresponds to 307. In this case, the request method\nwill be retained.\n- PERMANENT_REDIRECT, which corresponds to 308. In this case,\nthe request method will be retained.",
                                  "optional": true
                                },
                                "strip_query": {
                                  "type": "bool",
                                  "description": "If set to true, any accompanying query portion of the original URL is removed\nprior to redirecting the request. If set to false, the query portion of the\noriginal URL is retained.",
                                  "required": true
                                }
                              }
                            },
                            "max_items": 1
                          }
                        }
                      }
                    },
                    "route_rules": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "priority": {
                            "type": "number",
                            "description": "For routeRules within a given pathMatcher, priority determines the order\nin which load balancer will interpret routeRules. RouteRules are evaluated\nin order of priority, from the lowest to highest number. The priority of\na rule decreases as its number increases (1, 2, 3, N+1). The first rule\nthat matches the request is applied.\n\nYou cannot configure two or more routeRules with the same priority.\nPriority for each rule must be set to a number between 0 and\n2147483647 inclusive.\n\nPriority numbers can have gaps, which enable you to add or remove rules\nin the future without affecting the rest of the rules. For example,\n1, 2, 3, 4, 5, 9, 12, 16 is a valid series of priority numbers to which\nyou could add rules numbered from 6 to 8, 10 to 11, and 13 to 15 in the\nfuture without any impact on existing rules.",
                            "required": true
                          },
                          "service": {
                            "type": "string",
                            "description": "The backend service resource to which traffic is\ndirected if this rule is matched. If routeAction is additionally specified,\nadvanced routing actions like URL Rewrites, etc. take effect prior to sending\nthe request to the backend. However, if service is specified, routeAction cannot\ncontain any weightedBackendService s. Conversely, if routeAction specifies any\nweightedBackendServices, service must not be specified. Only one of urlRedirect,\nservice or routeAction.weightedBackendService must be set.",
                            "optional": true
                          }
                        },
                        "block_types": {
                          "header_action": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "request_headers_to_remove": {
                                  "type": [
                                    "list",
                                    "string"
                                  ],
                                  "description": "A list of header names for headers that need to be removed from the request\nprior to forwarding the request to the backendService.",
                                  "optional": true
                                },
                                "response_headers_to_remove": {
                                  "type": [
                                    "list",
                                    "string"
                                  ],
                                  "description": "A list of header names for headers that need to be removed from the response\nprior to sending the response back to the client.",
                                  "optional": true
                                }
                              },
                              "block_types": {
                                "request_headers_to_add": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "header_name": {
                                        "type": "string",
                                        "description": "The name of the header.",
                                        "required": true
                                      },
                                      "header_value": {
                                        "type": "string",
                                        "description": "The value of the header to add.",
                                        "required": true
                                      },
                                      "replace": {
                                        "type": "bool",
                                        "description": "If false, headerValue is appended to any values that already exist for the\nheader. If true, headerValue is set for the header, discarding any values that\nwere set for that header.",
                                        "required": true
                                      }
                                    }
                                  }
                                },
                                "response_headers_to_add": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "header_name": {
                                        "type": "string",
                                        "description": "The name of the header.",
                                        "required": true
                                      },
                                      "header_value": {
                                        "type": "string",
                                        "description": "The value of the header to add.",
                                        "required": true
                                      },
                                      "replace": {
                                        "type": "bool",
                                        "description": "If false, headerValue is appended to any values that already exist for the\nheader. If true, headerValue is set for the header, discarding any values that\nwere set for that header.",
                                        "required": true
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "max_items": 1
                          },
                          "match_rules": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "full_path_match": {
                                  "type": "string",
                                  "description": "For satifying the matchRule condition, the path of the request must exactly\nmatch the value specified in fullPathMatch after removing any query parameters\nand anchor that may be part of the original URL. FullPathMatch must be between 1\nand 1024 characters. Only one of prefixMatch, fullPathMatch or regexMatch must\nbe specified.",
                                  "optional": true
                                },
                                "ignore_case": {
                                  "type": "bool",
                                  "description": "Specifies that prefixMatch and fullPathMatch matches are case sensitive.\nDefaults to false.",
                                  "optional": true
                                },
                                "prefix_match": {
                                  "type": "string",
                                  "description": "For satifying the matchRule condition, the request's path must begin with the\nspecified prefixMatch. prefixMatch must begin with a /. The value must be\nbetween 1 and 1024 characters. Only one of prefixMatch, fullPathMatch or\nregexMatch must be specified.",
                                  "optional": true
                                },
                                "regex_match": {
                                  "type": "string",
                                  "description": "For satifying the matchRule condition, the path of the request must satisfy the\nregular expression specified in regexMatch after removing any query parameters\nand anchor supplied with the original URL. For regular expression grammar please\nsee en.cppreference.com/w/cpp/regex/ecmascript  Only one of prefixMatch,\nfullPathMatch or regexMatch must be specified.",
                                  "optional": true
                                }
                              },
                              "block_types": {
                                "header_matches": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "exact_match": {
                                        "type": "string",
                                        "description": "The value should exactly match contents of exactMatch. Only one of exactMatch,\nprefixMatch, suffixMatch, regexMatch, presentMatch or rangeMatch must be set.",
                                        "optional": true
                                      },
                                      "header_name": {
                                        "type": "string",
                                        "description": "The name of the HTTP header to match. For matching against the HTTP request's\nauthority, use a headerMatch with the header name \":authority\". For matching a\nrequest's method, use the headerName \":method\".",
                                        "required": true
                                      },
                                      "invert_match": {
                                        "type": "bool",
                                        "description": "If set to false, the headerMatch is considered a match if the match criteria\nabove are met. If set to true, the headerMatch is considered a match if the\nmatch criteria above are NOT met. Defaults to false.",
                                        "optional": true
                                      },
                                      "prefix_match": {
                                        "type": "string",
                                        "description": "The value of the header must start with the contents of prefixMatch. Only one of\nexactMatch, prefixMatch, suffixMatch, regexMatch, presentMatch or rangeMatch\nmust be set.",
                                        "optional": true
                                      },
                                      "present_match": {
                                        "type": "bool",
                                        "description": "A header with the contents of headerName must exist. The match takes place\nwhether or not the request's header has a value or not. Only one of exactMatch,\nprefixMatch, suffixMatch, regexMatch, presentMatch or rangeMatch must be set.",
                                        "optional": true
                                      },
                                      "regex_match": {
                                        "type": "string",
                                        "description": "The value of the header must match the regualar expression specified in\nregexMatch. For regular expression grammar, please see:\nen.cppreference.com/w/cpp/regex/ecmascript  For matching against a port\nspecified in the HTTP request, use a headerMatch with headerName set to PORT and\na regular expression that satisfies the RFC2616 Host header's port specifier.\nOnly one of exactMatch, prefixMatch, suffixMatch, regexMatch, presentMatch or\nrangeMatch must be set.",
                                        "optional": true
                                      },
                                      "suffix_match": {
                                        "type": "string",
                                        "description": "The value of the header must end with the contents of suffixMatch. Only one of\nexactMatch, prefixMatch, suffixMatch, regexMatch, presentMatch or rangeMatch\nmust be set.",
                                        "optional": true
                                      }
                                    },
                                    "block_types": {
                                      "range_match": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "range_end": {
                                              "type": "number",
                                              "description": "The end of the range (exclusive).",
                                              "required": true
                                            },
                                            "range_start": {
                                              "type": "number",
                                              "description": "The start of the range (inclusive).",
                                              "required": true
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      }
                                    }
                                  }
                                },
                                "metadata_filters": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "filter_match_criteria": {
                                        "type": "string",
                                        "description": "Specifies how individual filterLabel matches within the list of filterLabels\ncontribute towards the overall metadataFilter match. Supported values are:\n  - MATCH_ANY: At least one of the filterLabels must have a matching label in the\nprovided metadata.\n  - MATCH_ALL: All filterLabels must have matching labels in\nthe provided metadata.",
                                        "required": true
                                      }
                                    },
                                    "block_types": {
                                      "filter_labels": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "name": {
                                              "type": "string",
                                              "description": "Name of metadata label. The name can have a maximum length of 1024 characters\nand must be at least 1 character long.",
                                              "required": true
                                            },
                                            "value": {
                                              "type": "string",
                                              "description": "The value of the label must match the specified value. value can have a maximum\nlength of 1024 characters.",
                                              "required": true
                                            }
                                          }
                                        },
                                        "min_items": 1,
                                        "max_items": 64
                                      }
                                    }
                                  }
                                },
                                "query_parameter_matches": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "exact_match": {
                                        "type": "string",
                                        "description": "The queryParameterMatch matches if the value of the parameter exactly matches\nthe contents of exactMatch. Only one of presentMatch, exactMatch and regexMatch\nmust be set.",
                                        "optional": true
                                      },
                                      "name": {
                                        "type": "string",
                                        "description": "The name of the query parameter to match. The query parameter must exist in the\nrequest, in the absence of which the request match fails.",
                                        "required": true
                                      },
                                      "present_match": {
                                        "type": "bool",
                                        "description": "Specifies that the queryParameterMatch matches if the request contains the query\nparameter, irrespective of whether the parameter has a value or not. Only one of\npresentMatch, exactMatch and regexMatch must be set.",
                                        "optional": true
                                      },
                                      "regex_match": {
                                        "type": "string",
                                        "description": "The queryParameterMatch matches if the value of the parameter matches the\nregular expression specified by regexMatch. For the regular expression grammar,\nplease see en.cppreference.com/w/cpp/regex/ecmascript  Only one of presentMatch,\nexactMatch and regexMatch must be set.",
                                        "optional": true
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "route_action": {
                            "nesting_mode": "list",
                            "block": {
                              "block_types": {
                                "cors_policy": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "allow_credentials": {
                                        "type": "bool",
                                        "description": "In response to a preflight request, setting this to true indicates that the\nactual request can include user credentials. This translates to the Access-\nControl-Allow-Credentials header. Defaults to false.",
                                        "optional": true
                                      },
                                      "allow_headers": {
                                        "type": [
                                          "list",
                                          "string"
                                        ],
                                        "description": "Specifies the content for the Access-Control-Allow-Headers header.",
                                        "optional": true
                                      },
                                      "allow_methods": {
                                        "type": [
                                          "list",
                                          "string"
                                        ],
                                        "description": "Specifies the content for the Access-Control-Allow-Methods header.",
                                        "optional": true
                                      },
                                      "allow_origin_regexes": {
                                        "type": [
                                          "list",
                                          "string"
                                        ],
                                        "description": "Specifies the regualar expression patterns that match allowed origins. For\nregular expression grammar please see en.cppreference.com/w/cpp/regex/ecmascript\nAn origin is allowed if it matches either allow_origins or allow_origin_regex.",
                                        "optional": true
                                      },
                                      "allow_origins": {
                                        "type": [
                                          "list",
                                          "string"
                                        ],
                                        "description": "Specifies the list of origins that will be allowed to do CORS requests. An\norigin is allowed if it matches either allow_origins or allow_origin_regex.",
                                        "optional": true
                                      },
                                      "disabled": {
                                        "type": "bool",
                                        "description": "If true, specifies the CORS policy is disabled.\nwhich indicates that the CORS policy is in effect. Defaults to false.",
                                        "optional": true
                                      },
                                      "expose_headers": {
                                        "type": [
                                          "list",
                                          "string"
                                        ],
                                        "description": "Specifies the content for the Access-Control-Expose-Headers header.",
                                        "optional": true
                                      },
                                      "max_age": {
                                        "type": "number",
                                        "description": "Specifies how long the results of a preflight request can be cached. This\ntranslates to the content for the Access-Control-Max-Age header.",
                                        "optional": true
                                      }
                                    }
                                  },
                                  "max_items": 1
                                },
                                "fault_injection_policy": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "block_types": {
                                      "abort": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "http_status": {
                                              "type": "number",
                                              "description": "The HTTP status code used to abort the request. The value must be between 200\nand 599 inclusive.",
                                              "optional": true
                                            },
                                            "percentage": {
                                              "type": "number",
                                              "description": "The percentage of traffic (connections/operations/requests) which will be\naborted as part of fault injection. The value must be between 0.0 and 100.0\ninclusive.",
                                              "optional": true
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "delay": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "percentage": {
                                              "type": "number",
                                              "description": "The percentage of traffic (connections/operations/requests) on which delay will\nbe introduced as part of fault injection. The value must be between 0.0 and\n100.0 inclusive.",
                                              "optional": true
                                            }
                                          },
                                          "block_types": {
                                            "fixed_delay": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "nanos": {
                                                    "type": "number",
                                                    "description": "Span of time that's a fraction of a second at nanosecond resolution. Durations\nless than one second are represented with a 0 'seconds' field and a positive\n'nanos' field. Must be from 0 to 999,999,999 inclusive.",
                                                    "optional": true
                                                  },
                                                  "seconds": {
                                                    "type": "string",
                                                    "description": "Span of time at a resolution of a second. Must be from 0 to 315,576,000,000\ninclusive.",
                                                    "required": true
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      }
                                    }
                                  },
                                  "max_items": 1
                                },
                                "request_mirror_policy": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "backend_service": {
                                        "type": "string",
                                        "description": "The BackendService resource being mirrored to.",
                                        "required": true
                                      }
                                    }
                                  },
                                  "max_items": 1
                                },
                                "retry_policy": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "num_retries": {
                                        "type": "number",
                                        "description": "Specifies the allowed number retries. This number must be > 0.",
                                        "required": true
                                      },
                                      "retry_conditions": {
                                        "type": [
                                          "list",
                                          "string"
                                        ],
                                        "description": "Specfies one or more conditions when this retry rule applies. Valid values are:\n- 5xx: Loadbalancer will attempt a retry if the backend service responds with\n  any 5xx response code, or if the backend service does not respond at all,\n  example: disconnects, reset, read timeout, connection failure, and refused\n  streams.\n- gateway-error: Similar to 5xx, but only applies to response codes\n  502, 503 or 504.\n- connect-failure: Loadbalancer will retry on failures\n  connecting to backend services, for example due to connection timeouts.\n- retriable-4xx: Loadbalancer will retry for retriable 4xx response codes.\n  Currently the only retriable error supported is 409.\n- refused-stream: Loadbalancer will retry if the backend service resets the stream with a\n  REFUSED_STREAM error code. This reset type indicates that it is safe to retry.\n- cancelled: Loadbalancer will retry if the gRPC status code in the response\n  header is set to cancelled\n- deadline-exceeded: Loadbalancer will retry if the\n  gRPC status code in the response header is set to deadline-exceeded\n- resource-exhausted: Loadbalancer will retry if the gRPC status code in the response\n  header is set to resource-exhausted\n- unavailable: Loadbalancer will retry if the gRPC status code in\n  the response header is set to unavailable",
                                        "optional": true
                                      }
                                    },
                                    "block_types": {
                                      "per_try_timeout": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "nanos": {
                                              "type": "number",
                                              "description": "Span of time that's a fraction of a second at nanosecond resolution. Durations\nless than one second are represented with a 0 'seconds' field and a positive\n'nanos' field. Must be from 0 to 999,999,999 inclusive.",
                                              "optional": true
                                            },
                                            "seconds": {
                                              "type": "string",
                                              "description": "Span of time at a resolution of a second. Must be from 0 to 315,576,000,000\ninclusive.",
                                              "required": true
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      }
                                    }
                                  },
                                  "max_items": 1
                                },
                                "timeout": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "nanos": {
                                        "type": "number",
                                        "description": "Span of time that's a fraction of a second at nanosecond resolution. Durations\nless than one second are represented with a 0 'seconds' field and a positive\n'nanos' field. Must be from 0 to 999,999,999 inclusive.",
                                        "optional": true
                                      },
                                      "seconds": {
                                        "type": "string",
                                        "description": "Span of time at a resolution of a second. Must be from 0 to 315,576,000,000\ninclusive.",
                                        "required": true
                                      }
                                    }
                                  },
                                  "max_items": 1
                                },
                                "url_rewrite": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "host_rewrite": {
                                        "type": "string",
                                        "description": "Prior to forwarding the request to the selected service, the request's host\nheader is replaced with contents of hostRewrite. The value must be between 1 and\n255 characters.",
                                        "optional": true
                                      },
                                      "path_prefix_rewrite": {
                                        "type": "string",
                                        "description": "Prior to forwarding the request to the selected backend service, the matching\nportion of the request's path is replaced by pathPrefixRewrite. The value must\nbe between 1 and 1024 characters.",
                                        "optional": true
                                      }
                                    }
                                  },
                                  "max_items": 1
                                },
                                "weighted_backend_services": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "backend_service": {
                                        "type": "string",
                                        "description": "The default BackendService resource. Before\nforwarding the request to backendService, the loadbalancer applies any relevant\nheaderActions specified as part of this backendServiceWeight.",
                                        "required": true
                                      },
                                      "weight": {
                                        "type": "number",
                                        "description": "Specifies the fraction of traffic sent to backendService, computed as weight /\n(sum of all weightedBackendService weights in routeAction) . The selection of a\nbackend service is determined only for new traffic. Once a user's request has\nbeen directed to a backendService, subsequent requests will be sent to the same\nbackendService as determined by the BackendService's session affinity policy.\nThe value must be between 0 and 1000",
                                        "required": true
                                      }
                                    },
                                    "block_types": {
                                      "header_action": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "request_headers_to_remove": {
                                              "type": [
                                                "list",
                                                "string"
                                              ],
                                              "description": "A list of header names for headers that need to be removed from the request\nprior to forwarding the request to the backendService.",
                                              "optional": true
                                            },
                                            "response_headers_to_remove": {
                                              "type": [
                                                "list",
                                                "string"
                                              ],
                                              "description": "A list of header names for headers that need to be removed from the response\nprior to sending the response back to the client.",
                                              "optional": true
                                            }
                                          },
                                          "block_types": {
                                            "request_headers_to_add": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "header_name": {
                                                    "type": "string",
                                                    "description": "The name of the header.",
                                                    "required": true
                                                  },
                                                  "header_value": {
                                                    "type": "string",
                                                    "description": "The value of the header to add.",
                                                    "required": true
                                                  },
                                                  "replace": {
                                                    "type": "bool",
                                                    "description": "If false, headerValue is appended to any values that already exist for the\nheader. If true, headerValue is set for the header, discarding any values that\nwere set for that header.",
                                                    "required": true
                                                  }
                                                }
                                              }
                                            },
                                            "response_headers_to_add": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "header_name": {
                                                    "type": "string",
                                                    "description": "The name of the header.",
                                                    "required": true
                                                  },
                                                  "header_value": {
                                                    "type": "string",
                                                    "description": "The value of the header to add.",
                                                    "required": true
                                                  },
                                                  "replace": {
                                                    "type": "bool",
                                                    "description": "If false, headerValue is appended to any values that already exist for the\nheader. If true, headerValue is set for the header, discarding any values that\nwere set for that header.",
                                                    "required": true
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "max_items": 1
                          },
                          "url_redirect": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "host_redirect": {
                                  "type": "string",
                                  "description": "The host that will be used in the redirect response instead of the one that was\nsupplied in the request. The value must be between 1 and 255 characters.",
                                  "optional": true
                                },
                                "https_redirect": {
                                  "type": "bool",
                                  "description": "If set to true, the URL scheme in the redirected request is set to https. If set\nto false, the URL scheme of the redirected request will remain the same as that\nof the request. This must only be set for UrlMaps used in TargetHttpProxys.\nSetting this true for TargetHttpsProxy is not permitted. Defaults to false.",
                                  "optional": true
                                },
                                "path_redirect": {
                                  "type": "string",
                                  "description": "The path that will be used in the redirect response instead of the one that was\nsupplied in the request. Only one of pathRedirect or prefixRedirect must be\nspecified. The value must be between 1 and 1024 characters.",
                                  "optional": true
                                },
                                "prefix_redirect": {
                                  "type": "string",
                                  "description": "The prefix that replaces the prefixMatch specified in the HttpRouteRuleMatch,\nretaining the remaining portion of the URL before redirecting the request.",
                                  "optional": true
                                },
                                "redirect_response_code": {
                                  "type": "string",
                                  "description": "The HTTP Status code to use for this RedirectAction. Supported values are:   -\nMOVED_PERMANENTLY_DEFAULT, which is the default value and corresponds to 301.  -\nFOUND, which corresponds to 302.  - SEE_OTHER which corresponds to 303.  -\nTEMPORARY_REDIRECT, which corresponds to 307. In this case, the request method\nwill be retained.  - PERMANENT_REDIRECT, which corresponds to 308. In this case,\nthe request method will be retained.",
                                  "optional": true
                                },
                                "strip_query": {
                                  "type": "bool",
                                  "description": "If set to true, any accompanying query portion of the original URL is removed\nprior to redirecting the request. If set to false, the query portion of the\noriginal URL is retained. Defaults to false.",
                                  "optional": true
                                }
                              }
                            },
                            "max_items": 1
                          }
                        }
                      }
                    }
                  }
                }
              },
              "test": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "description": {
                      "type": "string",
                      "description": "Description of this test case.",
                      "optional": true
                    },
                    "host": {
                      "type": "string",
                      "description": "Host portion of the URL.",
                      "required": true
                    },
                    "path": {
                      "type": "string",
                      "description": "Path portion of the URL.",
                      "required": true
                    },
                    "service": {
                      "type": "string",
                      "description": "The backend service or backend bucket link that should be matched by this test.",
                      "required": true
                    }
                  }
                }
              },
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "google_compute_vpn_gateway": {
          "version": 0,
          "block": {
            "attributes": {
              "creation_timestamp": {
                "type": "string",
                "description": "Creation timestamp in RFC3339 text format.",
                "computed": true
              },
              "description": {
                "type": "string",
                "description": "An optional description of this resource.",
                "optional": true
              },
              "gateway_id": {
                "type": "number",
                "description": "The unique identifier for the resource.",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "Name of the resource. Provided by the client when the resource is\ncreated. The name must be 1-63 characters long, and comply with\nRFC1035.  Specifically, the name must be 1-63 characters long and\nmatch the regular expression '[a-z]([-a-z0-9]*[a-z0-9])?' which means\nthe first character must be a lowercase letter, and all following\ncharacters must be a dash, lowercase letter, or digit, except the last\ncharacter, which cannot be a dash.",
                "required": true
              },
              "network": {
                "type": "string",
                "description": "The network this VPN gateway is accepting traffic for.",
                "required": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "region": {
                "type": "string",
                "description": "The region this gateway should sit in.",
                "optional": true,
                "computed": true
              },
              "self_link": {
                "type": "string",
                "computed": true
              }
            },
            "block_types": {
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "google_compute_vpn_tunnel": {
          "version": 0,
          "block": {
            "attributes": {
              "creation_timestamp": {
                "type": "string",
                "description": "Creation timestamp in RFC3339 text format.",
                "computed": true
              },
              "description": {
                "type": "string",
                "description": "An optional description of this resource.",
                "optional": true
              },
              "detailed_status": {
                "type": "string",
                "description": "Detailed status message for the VPN tunnel.",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "ike_version": {
                "type": "number",
                "description": "IKE protocol version to use when establishing the VPN tunnel with\npeer VPN gateway.\nAcceptable IKE versions are 1 or 2. Default version is 2.",
                "optional": true
              },
              "local_traffic_selector": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "Local traffic selector to use when establishing the VPN tunnel with\npeer VPN gateway. The value should be a CIDR formatted string,\nfor example '192.168.0.0/16'. The ranges should be disjoint.\nOnly IPv4 is supported.",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "Name of the resource. The name must be 1-63 characters long, and\ncomply with RFC1035. Specifically, the name must be 1-63\ncharacters long and match the regular expression\n'[a-z]([-a-z0-9]*[a-z0-9])?' which means the first character\nmust be a lowercase letter, and all following characters must\nbe a dash, lowercase letter, or digit,\nexcept the last character, which cannot be a dash.",
                "required": true
              },
              "peer_ip": {
                "type": "string",
                "description": "IP address of the peer VPN gateway. Only IPv4 is supported.",
                "optional": true,
                "computed": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "region": {
                "type": "string",
                "description": "The region where the tunnel is located. If unset, is set to the region of 'target_vpn_gateway'.",
                "optional": true,
                "computed": true
              },
              "remote_traffic_selector": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "Remote traffic selector to use when establishing the VPN tunnel with\npeer VPN gateway. The value should be a CIDR formatted string,\nfor example '192.168.0.0/16'. The ranges should be disjoint.\nOnly IPv4 is supported.",
                "optional": true,
                "computed": true
              },
              "router": {
                "type": "string",
                "description": "URL of router resource to be used for dynamic routing.",
                "optional": true
              },
              "self_link": {
                "type": "string",
                "computed": true
              },
              "shared_secret": {
                "type": "string",
                "description": "Shared secret used to set the secure session between the Cloud VPN\ngateway and the peer VPN gateway.",
                "required": true,
                "sensitive": true
              },
              "shared_secret_hash": {
                "type": "string",
                "description": "Hash of the shared secret.",
                "computed": true
              },
              "target_vpn_gateway": {
                "type": "string",
                "description": "URL of the Target VPN gateway with which this VPN tunnel is\nassociated.",
                "optional": true
              },
              "tunnel_id": {
                "type": "string",
                "description": "The unique identifier for the resource. This identifier is defined by the server.",
                "computed": true
              }
            },
            "block_types": {
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "google_container_analysis_note": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "The name of the note.",
                "required": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              }
            },
            "block_types": {
              "attestation_authority": {
                "nesting_mode": "list",
                "block": {
                  "block_types": {
                    "hint": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "human_readable_name": {
                            "type": "string",
                            "description": "The human readable name of this Attestation Authority, for\nexample \"qa\".",
                            "required": true
                          }
                        }
                      },
                      "min_items": 1,
                      "max_items": 1
                    }
                  }
                },
                "min_items": 1,
                "max_items": 1
              },
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "google_container_cluster": {
          "version": 1,
          "block": {
            "attributes": {
              "additional_zones": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true,
                "computed": true
              },
              "cluster_ipv4_cidr": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "default_max_pods_per_node": {
                "type": "number",
                "optional": true,
                "computed": true
              },
              "description": {
                "type": "string",
                "optional": true
              },
              "enable_binary_authorization": {
                "type": "bool",
                "optional": true
              },
              "enable_intranode_visibility": {
                "type": "bool",
                "optional": true,
                "computed": true
              },
              "enable_kubernetes_alpha": {
                "type": "bool",
                "optional": true
              },
              "enable_legacy_abac": {
                "type": "bool",
                "optional": true
              },
              "enable_tpu": {
                "type": "bool",
                "optional": true,
                "computed": true
              },
              "endpoint": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "initial_node_count": {
                "type": "number",
                "optional": true
              },
              "instance_group_urls": {
                "type": [
                  "list",
                  "string"
                ],
                "computed": true
              },
              "label_fingerprint": {
                "type": "string",
                "computed": true
              },
              "location": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "logging_service": {
                "type": "string",
                "optional": true
              },
              "master_version": {
                "type": "string",
                "computed": true
              },
              "min_master_version": {
                "type": "string",
                "optional": true
              },
              "monitoring_service": {
                "type": "string",
                "optional": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "network": {
                "type": "string",
                "optional": true
              },
              "node_locations": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true,
                "computed": true
              },
              "node_version": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "operation": {
                "type": "string",
                "computed": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "region": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "remove_default_node_pool": {
                "type": "bool",
                "optional": true
              },
              "resource_labels": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              },
              "services_ipv4_cidr": {
                "type": "string",
                "computed": true
              },
              "subnetwork": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "zone": {
                "type": "string",
                "optional": true,
                "computed": true
              }
            },
            "block_types": {
              "addons_config": {
                "nesting_mode": "list",
                "block": {
                  "block_types": {
                    "horizontal_pod_autoscaling": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "disabled": {
                            "type": "bool",
                            "required": true
                          }
                        }
                      },
                      "max_items": 1
                    },
                    "http_load_balancing": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "disabled": {
                            "type": "bool",
                            "required": true
                          }
                        }
                      },
                      "max_items": 1
                    },
                    "kubernetes_dashboard": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "disabled": {
                            "type": "bool",
                            "optional": true
                          }
                        }
                      },
                      "max_items": 1
                    },
                    "network_policy_config": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "disabled": {
                            "type": "bool",
                            "required": true
                          }
                        }
                      },
                      "max_items": 1
                    }
                  }
                },
                "max_items": 1
              },
              "authenticator_groups_config": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "security_group": {
                      "type": "string",
                      "required": true
                    }
                  }
                },
                "max_items": 1
              },
              "cluster_autoscaling": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "enabled": {
                      "type": "bool",
                      "required": true
                    }
                  },
                  "block_types": {
                    "auto_provisioning_defaults": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "oauth_scopes": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "optional": true,
                            "computed": true
                          },
                          "service_account": {
                            "type": "string",
                            "optional": true
                          }
                        }
                      },
                      "max_items": 1
                    },
                    "resource_limits": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "maximum": {
                            "type": "number",
                            "optional": true
                          },
                          "minimum": {
                            "type": "number",
                            "optional": true
                          },
                          "resource_type": {
                            "type": "string",
                            "required": true
                          }
                        }
                      }
                    }
                  }
                },
                "max_items": 1
              },
              "ip_allocation_policy": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "cluster_ipv4_cidr_block": {
                      "type": "string",
                      "optional": true,
                      "computed": true
                    },
                    "cluster_secondary_range_name": {
                      "type": "string",
                      "optional": true,
                      "computed": true
                    },
                    "node_ipv4_cidr_block": {
                      "type": "string",
                      "optional": true,
                      "computed": true
                    },
                    "services_ipv4_cidr_block": {
                      "type": "string",
                      "optional": true,
                      "computed": true
                    },
                    "services_secondary_range_name": {
                      "type": "string",
                      "optional": true,
                      "computed": true
                    },
                    "subnetwork_name": {
                      "type": "string",
                      "optional": true,
                      "computed": true
                    }
                  }
                },
                "max_items": 1
              },
              "maintenance_policy": {
                "nesting_mode": "list",
                "block": {
                  "block_types": {
                    "daily_maintenance_window": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "duration": {
                            "type": "string",
                            "computed": true
                          },
                          "start_time": {
                            "type": "string",
                            "required": true
                          }
                        }
                      },
                      "min_items": 1,
                      "max_items": 1
                    }
                  }
                },
                "max_items": 1
              },
              "master_auth": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "client_certificate": {
                      "type": "string",
                      "computed": true
                    },
                    "client_key": {
                      "type": "string",
                      "computed": true,
                      "sensitive": true
                    },
                    "cluster_ca_certificate": {
                      "type": "string",
                      "computed": true
                    },
                    "password": {
                      "type": "string",
                      "optional": true,
                      "sensitive": true
                    },
                    "username": {
                      "type": "string",
                      "optional": true
                    }
                  },
                  "block_types": {
                    "client_certificate_config": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "issue_client_certificate": {
                            "type": "bool",
                            "required": true
                          }
                        }
                      },
                      "max_items": 1
                    }
                  }
                },
                "max_items": 1
              },
              "master_authorized_networks_config": {
                "nesting_mode": "list",
                "block": {
                  "block_types": {
                    "cidr_blocks": {
                      "nesting_mode": "set",
                      "block": {
                        "attributes": {
                          "cidr_block": {
                            "type": "string",
                            "required": true
                          },
                          "display_name": {
                            "type": "string",
                            "optional": true
                          }
                        }
                      }
                    }
                  }
                },
                "max_items": 1
              },
              "network_policy": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "enabled": {
                      "type": "bool",
                      "required": true
                    },
                    "provider": {
                      "type": "string",
                      "optional": true
                    }
                  }
                },
                "max_items": 1
              },
              "node_config": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "disk_size_gb": {
                      "type": "number",
                      "optional": true,
                      "computed": true
                    },
                    "disk_type": {
                      "type": "string",
                      "optional": true,
                      "computed": true
                    },
                    "guest_accelerator": {
                      "type": [
                        "list",
                        [
                          "object",
                          {
                            "count": "number",
                            "type": "string"
                          }
                        ]
                      ],
                      "optional": true,
                      "computed": true
                    },
                    "image_type": {
                      "type": "string",
                      "optional": true,
                      "computed": true
                    },
                    "labels": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "optional": true,
                      "computed": true
                    },
                    "local_ssd_count": {
                      "type": "number",
                      "optional": true,
                      "computed": true
                    },
                    "machine_type": {
                      "type": "string",
                      "optional": true,
                      "computed": true
                    },
                    "metadata": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "optional": true,
                      "computed": true
                    },
                    "min_cpu_platform": {
                      "type": "string",
                      "optional": true
                    },
                    "oauth_scopes": {
                      "type": [
                        "set",
                        "string"
                      ],
                      "optional": true,
                      "computed": true
                    },
                    "preemptible": {
                      "type": "bool",
                      "optional": true
                    },
                    "service_account": {
                      "type": "string",
                      "optional": true,
                      "computed": true
                    },
                    "tags": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "optional": true
                    },
                    "taint": {
                      "type": [
                        "list",
                        [
                          "object",
                          {
                            "effect": "string",
                            "key": "string",
                            "value": "string"
                          }
                        ]
                      ],
                      "optional": true,
                      "computed": true
                    }
                  },
                  "block_types": {
                    "sandbox_config": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "sandbox_type": {
                            "type": "string",
                            "required": true
                          }
                        }
                      },
                      "max_items": 1
                    },
                    "shielded_instance_config": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "enable_integrity_monitoring": {
                            "type": "bool",
                            "optional": true
                          },
                          "enable_secure_boot": {
                            "type": "bool",
                            "optional": true
                          }
                        }
                      },
                      "max_items": 1
                    },
                    "workload_metadata_config": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "node_metadata": {
                            "type": "string",
                            "required": true
                          }
                        }
                      },
                      "max_items": 1
                    }
                  }
                },
                "max_items": 1
              },
              "node_pool": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "initial_node_count": {
                      "type": "number",
                      "optional": true,
                      "computed": true
                    },
                    "instance_group_urls": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "computed": true
                    },
                    "max_pods_per_node": {
                      "type": "number",
                      "optional": true,
                      "computed": true
                    },
                    "name": {
                      "type": "string",
                      "optional": true,
                      "computed": true
                    },
                    "name_prefix": {
                      "type": "string",
                      "optional": true,
                      "computed": true
                    },
                    "node_count": {
                      "type": "number",
                      "optional": true,
                      "computed": true
                    },
                    "version": {
                      "type": "string",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "block_types": {
                    "autoscaling": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "max_node_count": {
                            "type": "number",
                            "required": true
                          },
                          "min_node_count": {
                            "type": "number",
                            "required": true
                          }
                        }
                      },
                      "max_items": 1
                    },
                    "management": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "auto_repair": {
                            "type": "bool",
                            "optional": true
                          },
                          "auto_upgrade": {
                            "type": "bool",
                            "optional": true
                          }
                        }
                      },
                      "max_items": 1
                    },
                    "node_config": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "disk_size_gb": {
                            "type": "number",
                            "optional": true,
                            "computed": true
                          },
                          "disk_type": {
                            "type": "string",
                            "optional": true,
                            "computed": true
                          },
                          "guest_accelerator": {
                            "type": [
                              "list",
                              [
                                "object",
                                {
                                  "count": "number",
                                  "type": "string"
                                }
                              ]
                            ],
                            "optional": true,
                            "computed": true
                          },
                          "image_type": {
                            "type": "string",
                            "optional": true,
                            "computed": true
                          },
                          "labels": {
                            "type": [
                              "map",
                              "string"
                            ],
                            "optional": true,
                            "computed": true
                          },
                          "local_ssd_count": {
                            "type": "number",
                            "optional": true,
                            "computed": true
                          },
                          "machine_type": {
                            "type": "string",
                            "optional": true,
                            "computed": true
                          },
                          "metadata": {
                            "type": [
                              "map",
                              "string"
                            ],
                            "optional": true,
                            "computed": true
                          },
                          "min_cpu_platform": {
                            "type": "string",
                            "optional": true
                          },
                          "oauth_scopes": {
                            "type": [
                              "set",
                              "string"
                            ],
                            "optional": true,
                            "computed": true
                          },
                          "preemptible": {
                            "type": "bool",
                            "optional": true
                          },
                          "service_account": {
                            "type": "string",
                            "optional": true,
                            "computed": true
                          },
                          "tags": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "optional": true
                          },
                          "taint": {
                            "type": [
                              "list",
                              [
                                "object",
                                {
                                  "effect": "string",
                                  "key": "string",
                                  "value": "string"
                                }
                              ]
                            ],
                            "optional": true,
                            "computed": true
                          }
                        },
                        "block_types": {
                          "sandbox_config": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "sandbox_type": {
                                  "type": "string",
                                  "required": true
                                }
                              }
                            },
                            "max_items": 1
                          },
                          "shielded_instance_config": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "enable_integrity_monitoring": {
                                  "type": "bool",
                                  "optional": true
                                },
                                "enable_secure_boot": {
                                  "type": "bool",
                                  "optional": true
                                }
                              }
                            },
                            "max_items": 1
                          },
                          "workload_metadata_config": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "node_metadata": {
                                  "type": "string",
                                  "required": true
                                }
                              }
                            },
                            "max_items": 1
                          }
                        }
                      },
                      "max_items": 1
                    }
                  }
                }
              },
              "pod_security_policy_config": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "enabled": {
                      "type": "bool",
                      "required": true
                    }
                  }
                },
                "max_items": 1
              },
              "private_cluster_config": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "enable_private_endpoint": {
                      "type": "bool",
                      "required": true
                    },
                    "enable_private_nodes": {
                      "type": "bool",
                      "optional": true
                    },
                    "master_ipv4_cidr_block": {
                      "type": "string",
                      "optional": true
                    },
                    "peering_name": {
                      "type": "string",
                      "computed": true
                    },
                    "private_endpoint": {
                      "type": "string",
                      "computed": true
                    },
                    "public_endpoint": {
                      "type": "string",
                      "computed": true
                    }
                  }
                },
                "max_items": 1
              },
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              },
              "vertical_pod_autoscaling": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "enabled": {
                      "type": "bool",
                      "required": true
                    }
                  }
                },
                "max_items": 1
              }
            }
          }
        },
        "google_container_node_pool": {
          "version": 1,
          "block": {
            "attributes": {
              "cluster": {
                "type": "string",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "initial_node_count": {
                "type": "number",
                "optional": true,
                "computed": true
              },
              "instance_group_urls": {
                "type": [
                  "list",
                  "string"
                ],
                "computed": true
              },
              "location": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "max_pods_per_node": {
                "type": "number",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name_prefix": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "node_count": {
                "type": "number",
                "optional": true,
                "computed": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "region": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "version": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "zone": {
                "type": "string",
                "optional": true,
                "computed": true
              }
            },
            "block_types": {
              "autoscaling": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "max_node_count": {
                      "type": "number",
                      "required": true
                    },
                    "min_node_count": {
                      "type": "number",
                      "required": true
                    }
                  }
                },
                "max_items": 1
              },
              "management": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "auto_repair": {
                      "type": "bool",
                      "optional": true
                    },
                    "auto_upgrade": {
                      "type": "bool",
                      "optional": true
                    }
                  }
                },
                "max_items": 1
              },
              "node_config": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "disk_size_gb": {
                      "type": "number",
                      "optional": true,
                      "computed": true
                    },
                    "disk_type": {
                      "type": "string",
                      "optional": true,
                      "computed": true
                    },
                    "guest_accelerator": {
                      "type": [
                        "list",
                        [
                          "object",
                          {
                            "count": "number",
                            "type": "string"
                          }
                        ]
                      ],
                      "optional": true,
                      "computed": true
                    },
                    "image_type": {
                      "type": "string",
                      "optional": true,
                      "computed": true
                    },
                    "labels": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "optional": true,
                      "computed": true
                    },
                    "local_ssd_count": {
                      "type": "number",
                      "optional": true,
                      "computed": true
                    },
                    "machine_type": {
                      "type": "string",
                      "optional": true,
                      "computed": true
                    },
                    "metadata": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "optional": true,
                      "computed": true
                    },
                    "min_cpu_platform": {
                      "type": "string",
                      "optional": true
                    },
                    "oauth_scopes": {
                      "type": [
                        "set",
                        "string"
                      ],
                      "optional": true,
                      "computed": true
                    },
                    "preemptible": {
                      "type": "bool",
                      "optional": true
                    },
                    "service_account": {
                      "type": "string",
                      "optional": true,
                      "computed": true
                    },
                    "tags": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "optional": true
                    },
                    "taint": {
                      "type": [
                        "list",
                        [
                          "object",
                          {
                            "effect": "string",
                            "key": "string",
                            "value": "string"
                          }
                        ]
                      ],
                      "optional": true,
                      "computed": true
                    }
                  },
                  "block_types": {
                    "sandbox_config": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "sandbox_type": {
                            "type": "string",
                            "required": true
                          }
                        }
                      },
                      "max_items": 1
                    },
                    "shielded_instance_config": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "enable_integrity_monitoring": {
                            "type": "bool",
                            "optional": true
                          },
                          "enable_secure_boot": {
                            "type": "bool",
                            "optional": true
                          }
                        }
                      },
                      "max_items": 1
                    },
                    "workload_metadata_config": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "node_metadata": {
                            "type": "string",
                            "required": true
                          }
                        }
                      },
                      "max_items": 1
                    }
                  }
                },
                "max_items": 1
              },
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "google_container_registry": {
          "version": 0,
          "block": {
            "attributes": {
              "bucket_self_link": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "location": {
                "type": "string",
                "optional": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              }
            }
          }
        },
        "google_dataflow_job": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "ip_configuration": {
                "type": "string",
                "optional": true
              },
              "job_id": {
                "type": "string",
                "computed": true
              },
              "labels": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              },
              "machine_type": {
                "type": "string",
                "optional": true
              },
              "max_workers": {
                "type": "number",
                "optional": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "network": {
                "type": "string",
                "optional": true
              },
              "on_delete": {
                "type": "string",
                "optional": true
              },
              "parameters": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "region": {
                "type": "string",
                "optional": true
              },
              "service_account_email": {
                "type": "string",
                "optional": true
              },
              "state": {
                "type": "string",
                "computed": true
              },
              "subnetwork": {
                "type": "string",
                "optional": true
              },
              "temp_gcs_location": {
                "type": "string",
                "required": true
              },
              "template_gcs_path": {
                "type": "string",
                "required": true
              },
              "type": {
                "type": "string",
                "computed": true
              },
              "zone": {
                "type": "string",
                "optional": true
              }
            }
          }
        },
        "google_dataproc_autoscaling_policy": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "location": {
                "type": "string",
                "description": "The  location where the autoscaling poicy should reside.\nThe default value is 'global'.",
                "optional": true
              },
              "name": {
                "type": "string",
                "description": "The \"resource name\" of the autoscaling policy.",
                "computed": true
              },
              "policy_id": {
                "type": "string",
                "description": "The policy id. The id must contain only letters (a-z, A-Z), numbers (0-9), underscores (_),\nand hyphens (-). Cannot begin or end with underscore or hyphen. Must consist of between\n3 and 50 characters.",
                "required": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              }
            },
            "block_types": {
              "basic_algorithm": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "cooldown_period": {
                      "type": "string",
                      "description": "Duration between scaling events. A scaling period starts after the\nupdate operation from the previous event has completed.\n\nBounds: [2m, 1d]. Default: 2m.",
                      "optional": true
                    }
                  },
                  "block_types": {
                    "yarn_config": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "graceful_decommission_timeout": {
                            "type": "string",
                            "description": "Timeout for YARN graceful decommissioning of Node Managers. Specifies the\nduration to wait for jobs to complete before forcefully removing workers\n(and potentially interrupting jobs). Only applicable to downscaling operations.\n\nBounds: [0s, 1d].",
                            "required": true
                          },
                          "scale_down_factor": {
                            "type": "number",
                            "description": "Fraction of average pending memory in the last cooldown period for which to\nremove workers. A scale-down factor of 1 will result in scaling down so that there\nis no available memory remaining after the update (more aggressive scaling).\nA scale-down factor of 0 disables removing workers, which can be beneficial for\nautoscaling a single job.\n\nBounds: [0.0, 1.0].",
                            "required": true
                          },
                          "scale_down_min_worker_fraction": {
                            "type": "number",
                            "description": "Minimum scale-down threshold as a fraction of total cluster size before scaling occurs.\nFor example, in a 20-worker cluster, a threshold of 0.1 means the autoscaler must\nrecommend at least a 2 worker scale-down for the cluster to scale. A threshold of 0\nmeans the autoscaler will scale down on any recommended change.\n\nBounds: [0.0, 1.0]. Default: 0.0.",
                            "optional": true
                          },
                          "scale_up_factor": {
                            "type": "number",
                            "description": "Fraction of average pending memory in the last cooldown period for which to\nadd workers. A scale-up factor of 1.0 will result in scaling up so that there\nis no pending memory remaining after the update (more aggressive scaling).\nA scale-up factor closer to 0 will result in a smaller magnitude of scaling up\n(less aggressive scaling).\n\nBounds: [0.0, 1.0].",
                            "required": true
                          },
                          "scale_up_min_worker_fraction": {
                            "type": "number",
                            "description": "Minimum scale-up threshold as a fraction of total cluster size before scaling\noccurs. For example, in a 20-worker cluster, a threshold of 0.1 means the autoscaler\nmust recommend at least a 2-worker scale-up for the cluster to scale. A threshold of\n0 means the autoscaler will scale up on any recommended change.\n\nBounds: [0.0, 1.0]. Default: 0.0.",
                            "optional": true
                          }
                        }
                      },
                      "min_items": 1,
                      "max_items": 1
                    }
                  }
                },
                "max_items": 1
              },
              "secondary_worker_config": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "max_instances": {
                      "type": "number",
                      "description": "Maximum number of instances for this group. Note that by default, clusters will not use\nsecondary workers. Required for secondary workers if the minimum secondary instances is set.\nBounds: [minInstances, ). Defaults to 0.",
                      "optional": true
                    },
                    "min_instances": {
                      "type": "number",
                      "description": "Minimum number of instances for this group. Bounds: [0, maxInstances]. Defaults to 0.",
                      "optional": true
                    },
                    "weight": {
                      "type": "number",
                      "description": "Weight for the instance group, which is used to determine the fraction of total workers\nin the cluster from this instance group. For example, if primary workers have weight 2,\nand secondary workers have weight 1, the cluster will have approximately 2 primary workers\nfor each secondary worker.\n\nThe cluster may not reach the specified balance if constrained by min/max bounds or other\nautoscaling settings. For example, if maxInstances for secondary workers is 0, then only\nprimary workers will be added. The cluster can also be out of balance when created.\n\nIf weight is not set on any instance group, the cluster will default to equal weight for\nall groups: the cluster will attempt to maintain an equal number of workers in each group\nwithin the configured size bounds for each group. If weight is set for one group only,\nthe cluster will default to zero weight on the unset group. For example if weight is set\nonly on primary workers, the cluster will use primary workers only and no secondary workers.",
                      "optional": true
                    }
                  }
                },
                "max_items": 1
              },
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              },
              "worker_config": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "max_instances": {
                      "type": "number",
                      "description": "Maximum number of instances for this group.",
                      "required": true
                    },
                    "min_instances": {
                      "type": "number",
                      "description": "Minimum number of instances for this group. Bounds: [2, maxInstances]. Defaults to 2.",
                      "optional": true
                    },
                    "weight": {
                      "type": "number",
                      "description": "Weight for the instance group, which is used to determine the fraction of total workers\nin the cluster from this instance group. For example, if primary workers have weight 2,\nand secondary workers have weight 1, the cluster will have approximately 2 primary workers\nfor each secondary worker.\n\nThe cluster may not reach the specified balance if constrained by min/max bounds or other\nautoscaling settings. For example, if maxInstances for secondary workers is 0, then only\nprimary workers will be added. The cluster can also be out of balance when created.\n\nIf weight is not set on any instance group, the cluster will default to equal weight for\nall groups: the cluster will attempt to maintain an equal number of workers in each group\nwithin the configured size bounds for each group. If weight is set for one group only,\nthe cluster will default to zero weight on the unset group. For example if weight is set\nonly on primary workers, the cluster will use primary workers only and no secondary workers.",
                      "optional": true
                    }
                  }
                },
                "max_items": 1
              }
            }
          }
        },
        "google_dataproc_cluster": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "labels": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "region": {
                "type": "string",
                "optional": true
              }
            },
            "block_types": {
              "cluster_config": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "bucket": {
                      "type": "string",
                      "computed": true
                    },
                    "staging_bucket": {
                      "type": "string",
                      "optional": true
                    }
                  },
                  "block_types": {
                    "autoscaling_config": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "policy_uri": {
                            "type": "string",
                            "required": true
                          }
                        }
                      },
                      "max_items": 1
                    },
                    "encryption_config": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "kms_key_name": {
                            "type": "string",
                            "required": true
                          }
                        }
                      },
                      "max_items": 1
                    },
                    "gce_cluster_config": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "internal_ip_only": {
                            "type": "bool",
                            "optional": true
                          },
                          "metadata": {
                            "type": [
                              "map",
                              "string"
                            ],
                            "optional": true
                          },
                          "network": {
                            "type": "string",
                            "optional": true,
                            "computed": true
                          },
                          "service_account": {
                            "type": "string",
                            "optional": true
                          },
                          "service_account_scopes": {
                            "type": [
                              "set",
                              "string"
                            ],
                            "optional": true,
                            "computed": true
                          },
                          "subnetwork": {
                            "type": "string",
                            "optional": true
                          },
                          "tags": {
                            "type": [
                              "set",
                              "string"
                            ],
                            "optional": true
                          },
                          "zone": {
                            "type": "string",
                            "optional": true,
                            "computed": true
                          }
                        }
                      },
                      "max_items": 1
                    },
                    "initialization_action": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "script": {
                            "type": "string",
                            "required": true
                          },
                          "timeout_sec": {
                            "type": "number",
                            "optional": true
                          }
                        }
                      }
                    },
                    "master_config": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "image_uri": {
                            "type": "string",
                            "optional": true,
                            "computed": true
                          },
                          "instance_names": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "computed": true
                          },
                          "machine_type": {
                            "type": "string",
                            "optional": true,
                            "computed": true
                          },
                          "min_cpu_platform": {
                            "type": "string",
                            "optional": true,
                            "computed": true
                          },
                          "num_instances": {
                            "type": "number",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "block_types": {
                          "accelerators": {
                            "nesting_mode": "set",
                            "block": {
                              "attributes": {
                                "accelerator_count": {
                                  "type": "number",
                                  "required": true
                                },
                                "accelerator_type": {
                                  "type": "string",
                                  "required": true
                                }
                              }
                            }
                          },
                          "disk_config": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "boot_disk_size_gb": {
                                  "type": "number",
                                  "optional": true,
                                  "computed": true
                                },
                                "boot_disk_type": {
                                  "type": "string",
                                  "optional": true
                                },
                                "num_local_ssds": {
                                  "type": "number",
                                  "optional": true,
                                  "computed": true
                                }
                              }
                            },
                            "max_items": 1
                          }
                        }
                      },
                      "max_items": 1
                    },
                    "preemptible_worker_config": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "instance_names": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "computed": true
                          },
                          "num_instances": {
                            "type": "number",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "block_types": {
                          "disk_config": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "boot_disk_size_gb": {
                                  "type": "number",
                                  "optional": true,
                                  "computed": true
                                },
                                "boot_disk_type": {
                                  "type": "string",
                                  "optional": true
                                },
                                "num_local_ssds": {
                                  "type": "number",
                                  "optional": true,
                                  "computed": true
                                }
                              }
                            },
                            "max_items": 1
                          }
                        }
                      },
                      "max_items": 1
                    },
                    "security_config": {
                      "nesting_mode": "list",
                      "block": {
                        "block_types": {
                          "kerberos_config": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "cross_realm_trust_admin_server": {
                                  "type": "string",
                                  "description": "The admin server (IP or hostname) for the remote trusted realm in a cross realm trust relationship.",
                                  "optional": true
                                },
                                "cross_realm_trust_kdc": {
                                  "type": "string",
                                  "description": "The KDC (IP or hostname) for the remote trusted realm in a cross realm trust relationship.",
                                  "optional": true
                                },
                                "cross_realm_trust_realm": {
                                  "type": "string",
                                  "description": "The remote realm the Dataproc on-cluster KDC will trust, should the user enable cross realm trust.",
                                  "optional": true
                                },
                                "cross_realm_trust_shared_password_uri": {
                                  "type": "string",
                                  "description": "The Cloud Storage URI of a KMS encrypted file containing the shared password between the on-cluster\nKerberos realm and the remote trusted realm, in a cross realm trust relationship.",
                                  "optional": true
                                },
                                "enable_kerberos": {
                                  "type": "bool",
                                  "description": "Flag to indicate whether to Kerberize the cluster.",
                                  "optional": true
                                },
                                "kdc_db_key_uri": {
                                  "type": "string",
                                  "description": "The Cloud Storage URI of a KMS encrypted file containing the master key of the KDC database.",
                                  "optional": true
                                },
                                "key_password_uri": {
                                  "type": "string",
                                  "description": "The Cloud Storage URI of a KMS encrypted file containing the password to the user provided key. For the self-signed certificate, this password is generated by Dataproc.",
                                  "optional": true
                                },
                                "keystore_password_uri": {
                                  "type": "string",
                                  "description": "The Cloud Storage URI of a KMS encrypted file containing\nthe password to the user provided keystore. For the self-signed certificate, this password is generated\nby Dataproc",
                                  "optional": true
                                },
                                "keystore_uri": {
                                  "type": "string",
                                  "description": "The Cloud Storage URI of the keystore file used for SSL encryption. If not provided, Dataproc will provide a self-signed certificate.",
                                  "optional": true
                                },
                                "kms_key_uri": {
                                  "type": "string",
                                  "description": "The uri of the KMS key used to encrypt various sensitive files.",
                                  "required": true
                                },
                                "realm": {
                                  "type": "string",
                                  "description": "The name of the on-cluster Kerberos realm. If not specified, the uppercased domain of hostnames will be the realm.",
                                  "optional": true
                                },
                                "root_principal_password_uri": {
                                  "type": "string",
                                  "description": "The cloud Storage URI of a KMS encrypted file containing the root principal password.",
                                  "required": true
                                },
                                "tgt_lifetime_hours": {
                                  "type": "number",
                                  "description": "The lifetime of the ticket granting ticket, in hours.",
                                  "optional": true
                                },
                                "truststore_password_uri": {
                                  "type": "string",
                                  "description": "The Cloud Storage URI of a KMS encrypted file containing the password to the user provided truststore. For the self-signed certificate, this password is generated by Dataproc.",
                                  "optional": true
                                },
                                "truststore_uri": {
                                  "type": "string",
                                  "description": "The Cloud Storage URI of the truststore file used for SSL encryption. If not provided, Dataproc will provide a self-signed certificate.",
                                  "optional": true
                                }
                              }
                            },
                            "min_items": 1,
                            "max_items": 1
                          }
                        }
                      },
                      "max_items": 1
                    },
                    "software_config": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "image_version": {
                            "type": "string",
                            "optional": true,
                            "computed": true
                          },
                          "optional_components": {
                            "type": [
                              "set",
                              "string"
                            ],
                            "optional": true
                          },
                          "override_properties": {
                            "type": [
                              "map",
                              "string"
                            ],
                            "optional": true
                          },
                          "properties": {
                            "type": [
                              "map",
                              "string"
                            ],
                            "computed": true
                          }
                        }
                      },
                      "max_items": 1
                    },
                    "worker_config": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "image_uri": {
                            "type": "string",
                            "optional": true,
                            "computed": true
                          },
                          "instance_names": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "computed": true
                          },
                          "machine_type": {
                            "type": "string",
                            "optional": true,
                            "computed": true
                          },
                          "min_cpu_platform": {
                            "type": "string",
                            "optional": true,
                            "computed": true
                          },
                          "num_instances": {
                            "type": "number",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "block_types": {
                          "accelerators": {
                            "nesting_mode": "set",
                            "block": {
                              "attributes": {
                                "accelerator_count": {
                                  "type": "number",
                                  "required": true
                                },
                                "accelerator_type": {
                                  "type": "string",
                                  "required": true
                                }
                              }
                            }
                          },
                          "disk_config": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "boot_disk_size_gb": {
                                  "type": "number",
                                  "optional": true,
                                  "computed": true
                                },
                                "boot_disk_type": {
                                  "type": "string",
                                  "optional": true
                                },
                                "num_local_ssds": {
                                  "type": "number",
                                  "optional": true,
                                  "computed": true
                                }
                              }
                            },
                            "max_items": 1
                          }
                        }
                      },
                      "max_items": 1
                    }
                  }
                },
                "max_items": 1
              },
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "google_dataproc_cluster_iam_binding": {
          "version": 0,
          "block": {
            "attributes": {
              "cluster": {
                "type": "string",
                "required": true
              },
              "etag": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "members": {
                "type": [
                  "set",
                  "string"
                ],
                "required": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "region": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "role": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "google_dataproc_cluster_iam_member": {
          "version": 0,
          "block": {
            "attributes": {
              "cluster": {
                "type": "string",
                "required": true
              },
              "etag": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "member": {
                "type": "string",
                "required": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "region": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "role": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "google_dataproc_cluster_iam_policy": {
          "version": 0,
          "block": {
            "attributes": {
              "cluster": {
                "type": "string",
                "required": true
              },
              "etag": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "policy_data": {
                "type": "string",
                "required": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "region": {
                "type": "string",
                "optional": true,
                "computed": true
              }
            }
          }
        },
        "google_dataproc_job": {
          "version": 0,
          "block": {
            "attributes": {
              "driver_controls_files_uri": {
                "type": "string",
                "description": "Output-only. If present, the location of miscellaneous control files which may be used as part of job setup and handling. If not present, control files may be placed in the same location as driver_output_uri.",
                "computed": true
              },
              "driver_output_resource_uri": {
                "type": "string",
                "description": "Output-only. A URI pointing to the location of the stdout of the job's driver program",
                "computed": true
              },
              "force_delete": {
                "type": "bool",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "labels": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "Optional. The labels to associate with this job.",
                "optional": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "region": {
                "type": "string",
                "optional": true
              },
              "status": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "details": "string",
                      "state": "string",
                      "state_start_time": "string",
                      "substate": "string"
                    }
                  ]
                ],
                "computed": true
              }
            },
            "block_types": {
              "hadoop_config": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "archive_uris": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "optional": true
                    },
                    "args": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "optional": true
                    },
                    "file_uris": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "optional": true
                    },
                    "jar_file_uris": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "optional": true
                    },
                    "main_class": {
                      "type": "string",
                      "optional": true
                    },
                    "main_jar_file_uri": {
                      "type": "string",
                      "optional": true
                    },
                    "properties": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "optional": true
                    }
                  },
                  "block_types": {
                    "logging_config": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "driver_log_levels": {
                            "type": [
                              "map",
                              "string"
                            ],
                            "description": "Optional. The per-package log levels for the driver. This may include 'root' package name to configure rootLogger. Examples: 'com.google = FATAL', 'root = INFO', 'org.apache = DEBUG'.",
                            "required": true
                          }
                        }
                      },
                      "max_items": 1
                    }
                  }
                },
                "max_items": 1
              },
              "hive_config": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "continue_on_failure": {
                      "type": "bool",
                      "optional": true
                    },
                    "jar_file_uris": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "optional": true
                    },
                    "properties": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "optional": true
                    },
                    "query_file_uri": {
                      "type": "string",
                      "optional": true
                    },
                    "query_list": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "optional": true
                    },
                    "script_variables": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "optional": true
                    }
                  }
                },
                "max_items": 1
              },
              "pig_config": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "continue_on_failure": {
                      "type": "bool",
                      "optional": true
                    },
                    "jar_file_uris": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "optional": true
                    },
                    "properties": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "optional": true
                    },
                    "query_file_uri": {
                      "type": "string",
                      "optional": true
                    },
                    "query_list": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "optional": true
                    },
                    "script_variables": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "optional": true
                    }
                  },
                  "block_types": {
                    "logging_config": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "driver_log_levels": {
                            "type": [
                              "map",
                              "string"
                            ],
                            "description": "Optional. The per-package log levels for the driver. This may include 'root' package name to configure rootLogger. Examples: 'com.google = FATAL', 'root = INFO', 'org.apache = DEBUG'.",
                            "required": true
                          }
                        }
                      },
                      "max_items": 1
                    }
                  }
                },
                "max_items": 1
              },
              "placement": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "cluster_name": {
                      "type": "string",
                      "description": "The name of the cluster where the job will be submitted",
                      "required": true
                    },
                    "cluster_uuid": {
                      "type": "string",
                      "description": "Output-only. A cluster UUID generated by the Cloud Dataproc service when the job is submitted",
                      "computed": true
                    }
                  }
                },
                "min_items": 1,
                "max_items": 1
              },
              "pyspark_config": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "archive_uris": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "Optional. HCFS URIs of archives to be extracted in the working directory of .jar, .tar, .tar.gz, .tgz, and .zip",
                      "optional": true
                    },
                    "args": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "Optional. The arguments to pass to the driver. Do not include arguments, such as --conf, that can be set as job properties, since a collision may occur that causes an incorrect job submission",
                      "optional": true
                    },
                    "file_uris": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "Optional. HCFS URIs of files to be copied to the working directory of Python drivers and distributed tasks. Useful for naively parallel tasks",
                      "optional": true
                    },
                    "jar_file_uris": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "Optional. HCFS URIs of jar files to add to the CLASSPATHs of the Python driver and tasks",
                      "optional": true
                    },
                    "main_python_file_uri": {
                      "type": "string",
                      "description": "Required. The HCFS URI of the main Python file to use as the driver. Must be a .py file",
                      "required": true
                    },
                    "properties": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description": "Optional. A mapping of property names to values, used to configure PySpark. Properties that conflict with values set by the Cloud Dataproc API may be overwritten. Can include properties set in /etc/spark/conf/spark-defaults.conf and classes in user code",
                      "optional": true
                    },
                    "python_file_uris": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "Optional. HCFS file URIs of Python files to pass to the PySpark framework. Supported file types: .py, .egg, and .zip",
                      "optional": true
                    }
                  },
                  "block_types": {
                    "logging_config": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "driver_log_levels": {
                            "type": [
                              "map",
                              "string"
                            ],
                            "description": "Optional. The per-package log levels for the driver. This may include 'root' package name to configure rootLogger. Examples: 'com.google = FATAL', 'root = INFO', 'org.apache = DEBUG'.",
                            "required": true
                          }
                        }
                      },
                      "max_items": 1
                    }
                  }
                },
                "max_items": 1
              },
              "reference": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "job_id": {
                      "type": "string",
                      "description": "The job ID, which must be unique within the project. The job ID is generated by the server upon job submission or provided by the user as a means to perform retries without creating duplicate jobs",
                      "optional": true,
                      "computed": true
                    }
                  }
                },
                "max_items": 1
              },
              "scheduling": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "max_failures_per_hour": {
                      "type": "number",
                      "description": "Maximum number of times per hour a driver may be restarted as a result of driver terminating with non-zero code before job is reported failed.",
                      "required": true
                    }
                  }
                },
                "max_items": 1
              },
              "spark_config": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "archive_uris": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "optional": true
                    },
                    "args": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "optional": true
                    },
                    "file_uris": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "optional": true
                    },
                    "jar_file_uris": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "optional": true
                    },
                    "main_class": {
                      "type": "string",
                      "optional": true
                    },
                    "main_jar_file_uri": {
                      "type": "string",
                      "optional": true
                    },
                    "properties": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "optional": true
                    }
                  },
                  "block_types": {
                    "logging_config": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "driver_log_levels": {
                            "type": [
                              "map",
                              "string"
                            ],
                            "description": "Optional. The per-package log levels for the driver. This may include 'root' package name to configure rootLogger. Examples: 'com.google = FATAL', 'root = INFO', 'org.apache = DEBUG'.",
                            "required": true
                          }
                        }
                      },
                      "max_items": 1
                    }
                  }
                },
                "max_items": 1
              },
              "sparksql_config": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "jar_file_uris": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "optional": true
                    },
                    "properties": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "optional": true
                    },
                    "query_file_uri": {
                      "type": "string",
                      "optional": true
                    },
                    "query_list": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "optional": true
                    },
                    "script_variables": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "optional": true
                    }
                  },
                  "block_types": {
                    "logging_config": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "driver_log_levels": {
                            "type": [
                              "map",
                              "string"
                            ],
                            "description": "Optional. The per-package log levels for the driver. This may include 'root' package name to configure rootLogger. Examples: 'com.google = FATAL', 'root = INFO', 'org.apache = DEBUG'.",
                            "required": true
                          }
                        }
                      },
                      "max_items": 1
                    }
                  }
                },
                "max_items": 1
              },
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "google_dataproc_job_iam_binding": {
          "version": 0,
          "block": {
            "attributes": {
              "etag": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "job_id": {
                "type": "string",
                "required": true
              },
              "members": {
                "type": [
                  "set",
                  "string"
                ],
                "required": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "region": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "role": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "google_dataproc_job_iam_member": {
          "version": 0,
          "block": {
            "attributes": {
              "etag": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "job_id": {
                "type": "string",
                "required": true
              },
              "member": {
                "type": "string",
                "required": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "region": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "role": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "google_dataproc_job_iam_policy": {
          "version": 0,
          "block": {
            "attributes": {
              "etag": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "job_id": {
                "type": "string",
                "required": true
              },
              "policy_data": {
                "type": "string",
                "required": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "region": {
                "type": "string",
                "optional": true,
                "computed": true
              }
            }
          }
        },
        "google_datastore_index": {
          "version": 0,
          "block": {
            "attributes": {
              "ancestor": {
                "type": "string",
                "description": "Policy for including ancestors in the index.  Either 'ALL_ANCESTORS' or 'NONE',\nthe default is 'NONE'.",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "index_id": {
                "type": "string",
                "description": "The index id.",
                "computed": true
              },
              "kind": {
                "type": "string",
                "description": "The entity kind which the index applies to.",
                "required": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              }
            },
            "block_types": {
              "properties": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "direction": {
                      "type": "string",
                      "description": "The direction the index should optimize for sorting. Possible values are ASCENDING and DESCENDING.",
                      "required": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The property name to index.",
                      "required": true
                    }
                  }
                }
              },
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "google_deployment_manager_deployment": {
          "version": 0,
          "block": {
            "attributes": {
              "create_policy": {
                "type": "string",
                "description": "Set the policy to use for creating new resources. Only used on\ncreate and update. Valid values are 'CREATE_OR_ACQUIRE' (default) or\n'ACQUIRE'. If set to 'ACQUIRE' and resources do not already exist,\nthe deployment will fail. Note that updating this field does not\nactually affect the deployment, just how it is updated.",
                "optional": true
              },
              "delete_policy": {
                "type": "string",
                "description": "Set the policy to use for deleting new resources on update/delete.\nValid values are 'DELETE' (default) or 'ABANDON'. If 'DELETE',\nresource is deleted after removal from Deployment Manager. If\n'ABANDON', the resource is only removed from Deployment Manager\nand is not actually deleted. Note that updating this field does not\nactually change the deployment, just how it is updated.",
                "optional": true
              },
              "deployment_id": {
                "type": "string",
                "description": "Unique identifier for deployment. Output only.",
                "computed": true
              },
              "description": {
                "type": "string",
                "description": "Optional user-provided description of deployment.",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "manifest": {
                "type": "string",
                "description": "Output only. URL of the manifest representing the last manifest that\nwas successfully deployed.",
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "Unique name for the deployment",
                "required": true
              },
              "preview": {
                "type": "bool",
                "description": "If set to true, a deployment is created with \"shell\" resources\nthat are not actually instantiated. This allows you to preview a\ndeployment. It can be updated to false to actually deploy\nwith real resources.\n ~>**NOTE**: Deployment Manager does not allow update\nof a deployment in preview (unless updating to preview=false). Thus,\nTerraform will force-recreate deployments if either preview is updated\nto true or if other fields are updated while preview is true.",
                "optional": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "self_link": {
                "type": "string",
                "description": "Output only. Server defined URL for the resource.",
                "computed": true
              }
            },
            "block_types": {
              "labels": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "key": {
                      "type": "string",
                      "description": "Key for label.",
                      "optional": true
                    },
                    "value": {
                      "type": "string",
                      "description": "Value of label.",
                      "optional": true
                    }
                  }
                }
              },
              "target": {
                "nesting_mode": "list",
                "block": {
                  "block_types": {
                    "config": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "content": {
                            "type": "string",
                            "description": "The full YAML contents of your configuration file.",
                            "required": true
                          }
                        }
                      },
                      "min_items": 1,
                      "max_items": 1
                    },
                    "imports": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "content": {
                            "type": "string",
                            "description": "The full contents of the template that you want to import.",
                            "optional": true
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the template to import, as declared in the YAML\nconfiguration.",
                            "optional": true
                          }
                        }
                      }
                    }
                  }
                },
                "min_items": 1,
                "max_items": 1
              },
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "google_dialogflow_agent": {
          "version": 0,
          "block": {
            "attributes": {
              "api_version": {
                "type": "string",
                "description": "API version displayed in Dialogflow console. If not specified, V2 API is assumed. Clients are free to query\ndifferent service endpoints for different API versions. However, bots connectors and webhook calls will follow \nthe specified API version.\n* API_VERSION_V1: Legacy V1 API.\n* API_VERSION_V2: V2 API.\n* API_VERSION_V2_BETA_1: V2beta1 API.",
                "optional": true,
                "computed": true
              },
              "avatar_uri": {
                "type": "string",
                "description": "The URI of the agent's avatar, which are used throughout the Dialogflow console. When an image URL is entered\ninto this field, the Dialogflow will save the image in the backend. The address of the backend image returned\nfrom the API will be shown in the [avatarUriBackend] field.",
                "optional": true
              },
              "avatar_uri_backend": {
                "type": "string",
                "description": "The URI of the agent's avatar as returned from the API. Output only. To provide an image URL for the agent avatar,\nthe [avatarUri] field can be used.",
                "computed": true
              },
              "classification_threshold": {
                "type": "number",
                "description": "To filter out false positive results and still get variety in matched natural language inputs for your agent,\nyou can tune the machine learning classification threshold. If the returned score value is less than the threshold\nvalue, then a fallback intent will be triggered or, if there are no fallback intents defined, no intent will be \ntriggered. The score values range from 0.0 (completely uncertain) to 1.0 (completely certain). If set to 0.0, the \ndefault of 0.3 is used.",
                "optional": true
              },
              "default_language_code": {
                "type": "string",
                "description": "The default language of the agent as a language tag. [See Language Support](https://cloud.google.com/dialogflow/docs/reference/language) \nfor a list of the currently supported language codes. This field cannot be updated after creation.",
                "required": true
              },
              "description": {
                "type": "string",
                "description": "The description of this agent. The maximum length is 500 characters. If exceeded, the request is rejected.",
                "optional": true
              },
              "display_name": {
                "type": "string",
                "description": "The name of this agent.",
                "required": true
              },
              "enable_logging": {
                "type": "bool",
                "description": "Determines whether this agent should log conversation queries.",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "match_mode": {
                "type": "string",
                "description": "Determines how intents are detected from user queries.\n* MATCH_MODE_HYBRID: Best for agents with a small number of examples in intents and/or wide use of templates\nsyntax and composite entities.\n* MATCH_MODE_ML_ONLY: Can be used for agents with a large number of examples in intents, especially the ones\nusing @sys.any or very large developer entities.",
                "optional": true,
                "computed": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "supported_language_codes": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "The list of all languages supported by this agent (except for the defaultLanguageCode).",
                "optional": true
              },
              "tier": {
                "type": "string",
                "description": "The agent tier. If not specified, TIER_STANDARD is assumed.\n* TIER_STANDARD: Standard tier.\n* TIER_ENTERPRISE: Enterprise tier (Essentials).\n* TIER_ENTERPRISE_PLUS: Enterprise tier (Plus).\nNOTE: This field seems to have eventual consistency in the API. Updating this field to a new value, or even \ncreating a new agent with a tier that is different from a previous agent in the same project will take some\ntime to propagate. The provider will wait for the API to show consistency, which can lead to longer apply times.",
                "optional": true,
                "computed": true
              },
              "time_zone": {
                "type": "string",
                "description": "The time zone of this agent from the [time zone database](https://www.iana.org/time-zones), e.g., America/New_York,\nEurope/Paris.",
                "required": true
              }
            },
            "block_types": {
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "google_dns_managed_zone": {
          "version": 0,
          "block": {
            "attributes": {
              "description": {
                "type": "string",
                "description": "A textual description field. Defaults to 'Managed by Terraform'.",
                "optional": true
              },
              "dns_name": {
                "type": "string",
                "description": "The DNS name of this managed zone, for instance \"example.com.\".",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "labels": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "A set of key/value label pairs to assign to this ManagedZone.",
                "optional": true
              },
              "name": {
                "type": "string",
                "description": "User assigned name for this resource.\nMust be unique within the project.",
                "required": true
              },
              "name_servers": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "Delegate your managed_zone to these virtual name servers;\ndefined by the server",
                "computed": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "visibility": {
                "type": "string",
                "description": "The zone's visibility: public zones are exposed to the Internet,\nwhile private zones are visible only to Virtual Private Cloud resources.\nMust be one of: 'public', 'private'.",
                "optional": true
              }
            },
            "block_types": {
              "dnssec_config": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "kind": {
                      "type": "string",
                      "description": "Identifies what kind of resource this is",
                      "optional": true
                    },
                    "non_existence": {
                      "type": "string",
                      "description": "Specifies the mechanism used to provide authenticated denial-of-existence responses.",
                      "optional": true,
                      "computed": true
                    },
                    "state": {
                      "type": "string",
                      "description": "Specifies whether DNSSEC is enabled, and what mode it is in",
                      "optional": true
                    }
                  },
                  "block_types": {
                    "default_key_specs": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "algorithm": {
                            "type": "string",
                            "description": "String mnemonic specifying the DNSSEC algorithm of this key",
                            "optional": true
                          },
                          "key_length": {
                            "type": "number",
                            "description": "Length of the keys in bits",
                            "optional": true
                          },
                          "key_type": {
                            "type": "string",
                            "description": "Specifies whether this is a key signing key (KSK) or a zone\nsigning key (ZSK). Key signing keys have the Secure Entry\nPoint flag set and, when active, will only be used to sign\nresource record sets of type DNSKEY. Zone signing keys do\nnot have the Secure Entry Point flag set and will be used\nto sign all other types of resource record sets.",
                            "optional": true
                          },
                          "kind": {
                            "type": "string",
                            "description": "Identifies what kind of resource this is",
                            "optional": true
                          }
                        }
                      }
                    }
                  }
                },
                "max_items": 1
              },
              "private_visibility_config": {
                "nesting_mode": "list",
                "block": {
                  "block_types": {
                    "networks": {
                      "nesting_mode": "set",
                      "block": {
                        "attributes": {
                          "network_url": {
                            "type": "string",
                            "description": "The fully qualified URL of the VPC network to bind to.\nThis should be formatted like\n'https://www.googleapis.com/compute/v1/projects/{project}/global/networks/{network}'",
                            "required": true
                          }
                        }
                      },
                      "min_items": 1
                    }
                  }
                },
                "max_items": 1
              },
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "google_dns_record_set": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "managed_zone": {
                "type": "string",
                "required": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "rrdatas": {
                "type": [
                  "list",
                  "string"
                ],
                "required": true
              },
              "ttl": {
                "type": "number",
                "required": true
              },
              "type": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "google_endpoints_service": {
          "version": 1,
          "block": {
            "attributes": {
              "apis": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "methods": [
                        "list",
                        [
                          "object",
                          {
                            "name": "string",
                            "request_type": "string",
                            "response_type": "string",
                            "syntax": "string"
                          }
                        ]
                      ],
                      "name": "string",
                      "syntax": "string",
                      "version": "string"
                    }
                  ]
                ],
                "computed": true
              },
              "config_id": {
                "type": "string",
                "computed": true
              },
              "dns_address": {
                "type": "string",
                "computed": true
              },
              "endpoints": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "address": "string",
                      "name": "string"
                    }
                  ]
                ],
                "computed": true
              },
              "grpc_config": {
                "type": "string",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "openapi_config": {
                "type": "string",
                "optional": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "protoc_output_base64": {
                "type": "string",
                "optional": true
              },
              "service_name": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "google_endpoints_service_iam_binding": {
          "version": 0,
          "block": {
            "attributes": {
              "etag": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "members": {
                "type": [
                  "set",
                  "string"
                ],
                "required": true
              },
              "role": {
                "type": "string",
                "required": true
              },
              "service_name": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "google_endpoints_service_iam_member": {
          "version": 0,
          "block": {
            "attributes": {
              "etag": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "member": {
                "type": "string",
                "required": true
              },
              "role": {
                "type": "string",
                "required": true
              },
              "service_name": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "google_endpoints_service_iam_policy": {
          "version": 0,
          "block": {
            "attributes": {
              "etag": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "policy_data": {
                "type": "string",
                "required": true
              },
              "service_name": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "google_filestore_instance": {
          "version": 0,
          "block": {
            "attributes": {
              "create_time": {
                "type": "string",
                "description": "Creation timestamp in RFC3339 text format.",
                "computed": true
              },
              "description": {
                "type": "string",
                "description": "A description of the instance.",
                "optional": true
              },
              "etag": {
                "type": "string",
                "description": "Server-specified ETag for the instance resource to prevent\nsimultaneous updates from overwriting each other.",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "labels": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "Resource labels to represent user-provided metadata.",
                "optional": true
              },
              "name": {
                "type": "string",
                "description": "The resource name of the instance.",
                "required": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "tier": {
                "type": "string",
                "description": "The service tier of the instance.",
                "required": true
              },
              "zone": {
                "type": "string",
                "description": "The name of the Filestore zone of the instance.",
                "required": true
              }
            },
            "block_types": {
              "file_shares": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "capacity_gb": {
                      "type": "number",
                      "description": "File share capacity in GiB. This must be at least 1024 GiB\nfor the standard tier, or 2560 GiB for the premium tier.",
                      "required": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of the fileshare (16 characters or less)",
                      "required": true
                    }
                  }
                },
                "min_items": 1,
                "max_items": 1
              },
              "networks": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "ip_addresses": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "A list of IPv4 or IPv6 addresses.",
                      "computed": true
                    },
                    "modes": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "IP versions for which the instance has\nIP addresses assigned.",
                      "required": true
                    },
                    "network": {
                      "type": "string",
                      "description": "The name of the GCE VPC network to which the\ninstance is connected.",
                      "required": true
                    },
                    "reserved_ip_range": {
                      "type": "string",
                      "description": "A /29 CIDR block that identifies the range of IP\naddresses reserved for this instance.",
                      "optional": true,
                      "computed": true
                    }
                  }
                },
                "min_items": 1
              },
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "google_firestore_index": {
          "version": 0,
          "block": {
            "attributes": {
              "collection": {
                "type": "string",
                "description": "The collection being indexed.",
                "required": true
              },
              "database": {
                "type": "string",
                "description": "The Firestore database id. Defaults to '\"(default)\"'.",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "A server defined name for this index. Format:\n'projects/{{project}}/databases/{{database}}/collectionGroups/{{collection}}/indexes/{{server_generated_id}}'",
                "computed": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "query_scope": {
                "type": "string",
                "description": "The scope at which a query is run. One of '\"COLLECTION\"' or\n'\"COLLECTION_GROUP\"'. Defaults to '\"COLLECTION\"'.",
                "optional": true
              }
            },
            "block_types": {
              "fields": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "array_config": {
                      "type": "string",
                      "description": "Indicates that this field supports operations on arrayValues. Only one of 'order' and 'arrayConfig' can\nbe specified.",
                      "optional": true
                    },
                    "field_path": {
                      "type": "string",
                      "description": "Name of the field.",
                      "optional": true
                    },
                    "order": {
                      "type": "string",
                      "description": "Indicates that this field supports ordering by the specified order or comparing using =, <, <=, >, >=.\nOnly one of 'order' and 'arrayConfig' can be specified.",
                      "optional": true
                    }
                  }
                },
                "min_items": 2
              },
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "google_folder": {
          "version": 0,
          "block": {
            "attributes": {
              "create_time": {
                "type": "string",
                "computed": true
              },
              "display_name": {
                "type": "string",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "lifecycle_state": {
                "type": "string",
                "computed": true
              },
              "name": {
                "type": "string",
                "computed": true
              },
              "parent": {
                "type": "string",
                "required": true
              }
            },
            "block_types": {
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    },
                    "read": {
                      "type": "string",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "google_folder_iam_binding": {
          "version": 0,
          "block": {
            "attributes": {
              "etag": {
                "type": "string",
                "computed": true
              },
              "folder": {
                "type": "string",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "members": {
                "type": [
                  "set",
                  "string"
                ],
                "required": true
              },
              "role": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "google_folder_iam_member": {
          "version": 0,
          "block": {
            "attributes": {
              "etag": {
                "type": "string",
                "computed": true
              },
              "folder": {
                "type": "string",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "member": {
                "type": "string",
                "required": true
              },
              "role": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "google_folder_iam_policy": {
          "version": 0,
          "block": {
            "attributes": {
              "etag": {
                "type": "string",
                "computed": true
              },
              "folder": {
                "type": "string",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "policy_data": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "google_folder_organization_policy": {
          "version": 0,
          "block": {
            "attributes": {
              "constraint": {
                "type": "string",
                "required": true
              },
              "etag": {
                "type": "string",
                "computed": true
              },
              "folder": {
                "type": "string",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "update_time": {
                "type": "string",
                "computed": true
              },
              "version": {
                "type": "number",
                "optional": true,
                "computed": true
              }
            },
            "block_types": {
              "boolean_policy": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "enforced": {
                      "type": "bool",
                      "required": true
                    }
                  }
                },
                "max_items": 1
              },
              "list_policy": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "inherit_from_parent": {
                      "type": "bool",
                      "optional": true
                    },
                    "suggested_value": {
                      "type": "string",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "block_types": {
                    "allow": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "all": {
                            "type": "bool",
                            "optional": true
                          },
                          "values": {
                            "type": [
                              "set",
                              "string"
                            ],
                            "optional": true
                          }
                        }
                      },
                      "max_items": 1
                    },
                    "deny": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "all": {
                            "type": "bool",
                            "optional": true
                          },
                          "values": {
                            "type": [
                              "set",
                              "string"
                            ],
                            "optional": true
                          }
                        }
                      },
                      "max_items": 1
                    }
                  }
                },
                "max_items": 1
              },
              "restore_policy": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "default": {
                      "type": "bool",
                      "required": true
                    }
                  }
                },
                "max_items": 1
              },
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    },
                    "read": {
                      "type": "string",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "google_iap_app_engine_service_iam_binding": {
          "version": 0,
          "block": {
            "attributes": {
              "app_id": {
                "type": "string",
                "required": true
              },
              "etag": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "members": {
                "type": [
                  "set",
                  "string"
                ],
                "required": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "role": {
                "type": "string",
                "required": true
              },
              "service": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "google_iap_app_engine_service_iam_member": {
          "version": 0,
          "block": {
            "attributes": {
              "app_id": {
                "type": "string",
                "required": true
              },
              "etag": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "member": {
                "type": "string",
                "required": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "role": {
                "type": "string",
                "required": true
              },
              "service": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "google_iap_app_engine_service_iam_policy": {
          "version": 0,
          "block": {
            "attributes": {
              "app_id": {
                "type": "string",
                "required": true
              },
              "etag": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "policy_data": {
                "type": "string",
                "required": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "service": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "google_iap_app_engine_version_iam_binding": {
          "version": 0,
          "block": {
            "attributes": {
              "app_id": {
                "type": "string",
                "required": true
              },
              "etag": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "members": {
                "type": [
                  "set",
                  "string"
                ],
                "required": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "role": {
                "type": "string",
                "required": true
              },
              "service": {
                "type": "string",
                "required": true
              },
              "version_id": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "google_iap_app_engine_version_iam_member": {
          "version": 0,
          "block": {
            "attributes": {
              "app_id": {
                "type": "string",
                "required": true
              },
              "etag": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "member": {
                "type": "string",
                "required": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "role": {
                "type": "string",
                "required": true
              },
              "service": {
                "type": "string",
                "required": true
              },
              "version_id": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "google_iap_app_engine_version_iam_policy": {
          "version": 0,
          "block": {
            "attributes": {
              "app_id": {
                "type": "string",
                "required": true
              },
              "etag": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "policy_data": {
                "type": "string",
                "required": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "service": {
                "type": "string",
                "required": true
              },
              "version_id": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "google_iap_tunnel_instance_iam_binding": {
          "version": 0,
          "block": {
            "attributes": {
              "etag": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "instance": {
                "type": "string",
                "required": true
              },
              "members": {
                "type": [
                  "set",
                  "string"
                ],
                "required": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "role": {
                "type": "string",
                "required": true
              },
              "zone": {
                "type": "string",
                "optional": true,
                "computed": true
              }
            }
          }
        },
        "google_iap_tunnel_instance_iam_member": {
          "version": 0,
          "block": {
            "attributes": {
              "etag": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "instance": {
                "type": "string",
                "required": true
              },
              "member": {
                "type": "string",
                "required": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "role": {
                "type": "string",
                "required": true
              },
              "zone": {
                "type": "string",
                "optional": true,
                "computed": true
              }
            }
          }
        },
        "google_iap_tunnel_instance_iam_policy": {
          "version": 0,
          "block": {
            "attributes": {
              "etag": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "instance": {
                "type": "string",
                "required": true
              },
              "policy_data": {
                "type": "string",
                "required": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "zone": {
                "type": "string",
                "optional": true,
                "computed": true
              }
            }
          }
        },
        "google_iap_web_backend_service_iam_binding": {
          "version": 0,
          "block": {
            "attributes": {
              "etag": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "members": {
                "type": [
                  "set",
                  "string"
                ],
                "required": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "role": {
                "type": "string",
                "required": true
              },
              "web_backend_service": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "google_iap_web_backend_service_iam_member": {
          "version": 0,
          "block": {
            "attributes": {
              "etag": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "member": {
                "type": "string",
                "required": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "role": {
                "type": "string",
                "required": true
              },
              "web_backend_service": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "google_iap_web_backend_service_iam_policy": {
          "version": 0,
          "block": {
            "attributes": {
              "etag": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "policy_data": {
                "type": "string",
                "required": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "web_backend_service": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "google_iap_web_iam_binding": {
          "version": 0,
          "block": {
            "attributes": {
              "etag": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "members": {
                "type": [
                  "set",
                  "string"
                ],
                "required": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "role": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "google_iap_web_iam_member": {
          "version": 0,
          "block": {
            "attributes": {
              "etag": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "member": {
                "type": "string",
                "required": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "role": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "google_iap_web_iam_policy": {
          "version": 0,
          "block": {
            "attributes": {
              "etag": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "policy_data": {
                "type": "string",
                "required": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              }
            }
          }
        },
        "google_iap_web_type_app_engine_iam_binding": {
          "version": 0,
          "block": {
            "attributes": {
              "app_id": {
                "type": "string",
                "required": true
              },
              "etag": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "members": {
                "type": [
                  "set",
                  "string"
                ],
                "required": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "role": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "google_iap_web_type_app_engine_iam_member": {
          "version": 0,
          "block": {
            "attributes": {
              "app_id": {
                "type": "string",
                "required": true
              },
              "etag": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "member": {
                "type": "string",
                "required": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "role": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "google_iap_web_type_app_engine_iam_policy": {
          "version": 0,
          "block": {
            "attributes": {
              "app_id": {
                "type": "string",
                "required": true
              },
              "etag": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "policy_data": {
                "type": "string",
                "required": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              }
            }
          }
        },
        "google_iap_web_type_compute_iam_binding": {
          "version": 0,
          "block": {
            "attributes": {
              "etag": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "members": {
                "type": [
                  "set",
                  "string"
                ],
                "required": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "role": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "google_iap_web_type_compute_iam_member": {
          "version": 0,
          "block": {
            "attributes": {
              "etag": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "member": {
                "type": "string",
                "required": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "role": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "google_iap_web_type_compute_iam_policy": {
          "version": 0,
          "block": {
            "attributes": {
              "etag": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "policy_data": {
                "type": "string",
                "required": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              }
            }
          }
        },
        "google_identity_platform_default_supported_idp_config": {
          "version": 0,
          "block": {
            "attributes": {
              "client_id": {
                "type": "string",
                "description": "OAuth client ID",
                "required": true
              },
              "client_secret": {
                "type": "string",
                "description": "OAuth client secret",
                "required": true
              },
              "enabled": {
                "type": "bool",
                "description": "If this IDP allows the user to sign in",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "idp_id": {
                "type": "string",
                "description": "ID of the IDP. Possible values include:\n\n* 'apple.com'\n\n* 'facebook.com'\n\n* 'gc.apple.com'\n\n* 'github.com'\n\n* 'google.com'\n\n* 'linkedin.com'\n\n* 'microsoft.com'\n\n* 'playgames.google.com'\n\n* 'twitter.com'\n\n* 'yahoo.com'",
                "required": true
              },
              "name": {
                "type": "string",
                "description": "The name of the DefaultSupportedIdpConfig resource",
                "computed": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              }
            },
            "block_types": {
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "google_identity_platform_inbound_saml_config": {
          "version": 0,
          "block": {
            "attributes": {
              "display_name": {
                "type": "string",
                "description": "Human friendly display name.",
                "required": true
              },
              "enabled": {
                "type": "bool",
                "description": "If this config allows users to sign in with the provider.",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "The name of the InboundSamlConfig resource. Must start with 'saml.' and can only have alphanumeric characters,\nhyphens, underscores or periods. The part after 'saml.' must also start with a lowercase letter, end with an\nalphanumeric character, and have at least 2 characters.",
                "required": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              }
            },
            "block_types": {
              "idp_config": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "idp_entity_id": {
                      "type": "string",
                      "description": "Unique identifier for all SAML entities",
                      "required": true
                    },
                    "sign_request": {
                      "type": "bool",
                      "description": "Indicates if outbounding SAMLRequest should be signed.",
                      "optional": true
                    },
                    "sso_url": {
                      "type": "string",
                      "description": "URL to send Authentication request to.",
                      "required": true
                    }
                  },
                  "block_types": {
                    "idp_certificates": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "x509_certificate": {
                            "type": "string",
                            "description": "The IdP's x509 certificate.",
                            "optional": true
                          }
                        }
                      },
                      "min_items": 1
                    }
                  }
                },
                "min_items": 1,
                "max_items": 1
              },
              "sp_config": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "callback_uri": {
                      "type": "string",
                      "description": "Callback URI where responses from IDP are handled. Must start with 'https://'.",
                      "optional": true
                    },
                    "sp_certificates": {
                      "type": [
                        "list",
                        [
                          "object",
                          {
                            "x509_certificate": "string"
                          }
                        ]
                      ],
                      "description": "The IDP's certificate data to verify the signature in the SAMLResponse issued by the IDP.",
                      "computed": true
                    },
                    "sp_entity_id": {
                      "type": "string",
                      "description": "Unique identifier for all SAML entities.",
                      "optional": true
                    }
                  }
                },
                "min_items": 1,
                "max_items": 1
              },
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "google_identity_platform_oauth_idp_config": {
          "version": 0,
          "block": {
            "attributes": {
              "client_id": {
                "type": "string",
                "description": "The client id of an OAuth client.",
                "required": true
              },
              "client_secret": {
                "type": "string",
                "description": "The client secret of the OAuth client, to enable OIDC code flow.",
                "optional": true
              },
              "display_name": {
                "type": "string",
                "description": "Human friendly display name.",
                "optional": true
              },
              "enabled": {
                "type": "bool",
                "description": "If this config allows users to sign in with the provider.",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "issuer": {
                "type": "string",
                "description": "For OIDC Idps, the issuer identifier.",
                "required": true
              },
              "name": {
                "type": "string",
                "description": "The name of the OauthIdpConfig. Must start with 'oidc.'.",
                "required": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              }
            },
            "block_types": {
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "google_identity_platform_tenant": {
          "version": 0,
          "block": {
            "attributes": {
              "allow_password_signup": {
                "type": "bool",
                "description": "Whether to allow email/password user authentication.",
                "optional": true
              },
              "disable_auth": {
                "type": "bool",
                "description": "Whether authentication is disabled for the tenant. If true, the users under\nthe disabled tenant are not allowed to sign-in. Admins of the disabled tenant\nare not able to manage its users.",
                "optional": true
              },
              "display_name": {
                "type": "string",
                "description": "Human friendly display name of the tenant.",
                "required": true
              },
              "enable_email_link_signin": {
                "type": "bool",
                "description": "Whether to enable email link user authentication.",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "The name of the tenant that is generated by the server",
                "computed": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              }
            },
            "block_types": {
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "google_identity_platform_tenant_default_supported_idp_config": {
          "version": 0,
          "block": {
            "attributes": {
              "client_id": {
                "type": "string",
                "description": "OAuth client ID",
                "required": true
              },
              "client_secret": {
                "type": "string",
                "description": "OAuth client secret",
                "required": true
              },
              "enabled": {
                "type": "bool",
                "description": "If this IDP allows the user to sign in",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "idp_id": {
                "type": "string",
                "description": "ID of the IDP. Possible values include:\n\n* 'apple.com'\n\n* 'facebook.com'\n\n* 'gc.apple.com'\n\n* 'github.com'\n\n* 'google.com'\n\n* 'linkedin.com'\n\n* 'microsoft.com'\n\n* 'playgames.google.com'\n\n* 'twitter.com'\n\n* 'yahoo.com'",
                "required": true
              },
              "name": {
                "type": "string",
                "description": "The name of the default supported IDP config resource",
                "computed": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "tenant": {
                "type": "string",
                "description": "The name of the tenant where this DefaultSupportedIdpConfig resource exists",
                "required": true
              }
            },
            "block_types": {
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "google_identity_platform_tenant_inbound_saml_config": {
          "version": 0,
          "block": {
            "attributes": {
              "display_name": {
                "type": "string",
                "description": "Human friendly display name.",
                "required": true
              },
              "enabled": {
                "type": "bool",
                "description": "If this config allows users to sign in with the provider.",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "The name of the InboundSamlConfig resource. Must start with 'saml.' and can only have alphanumeric characters,\nhyphens, underscores or periods. The part after 'saml.' must also start with a lowercase letter, end with an\nalphanumeric character, and have at least 2 characters.",
                "required": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "tenant": {
                "type": "string",
                "description": "The name of the tenant where this inbound SAML config resource exists",
                "required": true
              }
            },
            "block_types": {
              "idp_config": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "idp_entity_id": {
                      "type": "string",
                      "description": "Unique identifier for all SAML entities",
                      "required": true
                    },
                    "sign_request": {
                      "type": "bool",
                      "description": "Indicates if outbounding SAMLRequest should be signed.",
                      "optional": true
                    },
                    "sso_url": {
                      "type": "string",
                      "description": "URL to send Authentication request to.",
                      "required": true
                    }
                  },
                  "block_types": {
                    "idp_certificates": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "x509_certificate": {
                            "type": "string",
                            "description": "The x509 certificate",
                            "optional": true
                          }
                        }
                      },
                      "min_items": 1
                    }
                  }
                },
                "min_items": 1,
                "max_items": 1
              },
              "sp_config": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "callback_uri": {
                      "type": "string",
                      "description": "Callback URI where responses from IDP are handled. Must start with 'https://'.",
                      "required": true
                    },
                    "sp_certificates": {
                      "type": [
                        "list",
                        [
                          "object",
                          {
                            "x509_certificate": "string"
                          }
                        ]
                      ],
                      "description": "The IDP's certificate data to verify the signature in the SAMLResponse issued by the IDP.",
                      "computed": true
                    },
                    "sp_entity_id": {
                      "type": "string",
                      "description": "Unique identifier for all SAML entities.",
                      "required": true
                    }
                  }
                },
                "min_items": 1,
                "max_items": 1
              },
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "google_identity_platform_tenant_oauth_idp_config": {
          "version": 0,
          "block": {
            "attributes": {
              "client_id": {
                "type": "string",
                "description": "The client id of an OAuth client.",
                "required": true
              },
              "client_secret": {
                "type": "string",
                "description": "The client secret of the OAuth client, to enable OIDC code flow.",
                "optional": true
              },
              "display_name": {
                "type": "string",
                "description": "Human friendly display name.",
                "required": true
              },
              "enabled": {
                "type": "bool",
                "description": "If this config allows users to sign in with the provider.",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "issuer": {
                "type": "string",
                "description": "For OIDC Idps, the issuer identifier.",
                "required": true
              },
              "name": {
                "type": "string",
                "description": "The name of the OauthIdpConfig. Must start with 'oidc.'.",
                "required": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "tenant": {
                "type": "string",
                "description": "The name of the tenant where this OIDC IDP configuration resource exists",
                "required": true
              }
            },
            "block_types": {
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "google_kms_crypto_key": {
          "version": 1,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "key_ring": {
                "type": "string",
                "description": "The KeyRing that this key belongs to.\nFormat: ''projects/{{project}}/locations/{{location}}/keyRings/{{keyRing}}''.",
                "required": true
              },
              "labels": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "Labels with user-defined metadata to apply to this resource.",
                "optional": true
              },
              "name": {
                "type": "string",
                "description": "The resource name for the CryptoKey.",
                "required": true
              },
              "purpose": {
                "type": "string",
                "description": "The immutable purpose of this CryptoKey. See the\n[purpose reference](https://cloud.google.com/kms/docs/reference/rest/v1/projects.locations.keyRings.cryptoKeys#CryptoKeyPurpose)\nfor possible inputs.",
                "optional": true
              },
              "rotation_period": {
                "type": "string",
                "description": "Every time this period passes, generate a new CryptoKeyVersion and set it as the primary.\nThe first rotation will take place after the specified period. The rotation period has\nthe format of a decimal number with up to 9 fractional digits, followed by the\nletter 's' (seconds). It must be greater than a day (ie, 86400).",
                "optional": true
              },
              "self_link": {
                "type": "string",
                "computed": true
              }
            },
            "block_types": {
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              },
              "version_template": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "algorithm": {
                      "type": "string",
                      "description": "The algorithm to use when creating a version based on this template.\nSee the [algorithm reference](https://cloud.google.com/kms/docs/reference/rest/v1/CryptoKeyVersionAlgorithm) for possible inputs.",
                      "required": true
                    },
                    "protection_level": {
                      "type": "string",
                      "description": "The protection level to use when creating a version based on this template.",
                      "optional": true
                    }
                  }
                },
                "max_items": 1
              }
            }
          }
        },
        "google_kms_crypto_key_iam_binding": {
          "version": 0,
          "block": {
            "attributes": {
              "crypto_key_id": {
                "type": "string",
                "required": true
              },
              "etag": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "members": {
                "type": [
                  "set",
                  "string"
                ],
                "required": true
              },
              "role": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "google_kms_crypto_key_iam_member": {
          "version": 0,
          "block": {
            "attributes": {
              "crypto_key_id": {
                "type": "string",
                "required": true
              },
              "etag": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "member": {
                "type": "string",
                "required": true
              },
              "role": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "google_kms_crypto_key_iam_policy": {
          "version": 0,
          "block": {
            "attributes": {
              "crypto_key_id": {
                "type": "string",
                "required": true
              },
              "etag": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "policy_data": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "google_kms_key_ring": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "location": {
                "type": "string",
                "description": "The location for the KeyRing.\nA full list of valid locations can be found by running 'gcloud kms locations list'.",
                "required": true
              },
              "name": {
                "type": "string",
                "description": "The resource name for the KeyRing.",
                "required": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "self_link": {
                "type": "string",
                "computed": true
              }
            },
            "block_types": {
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "google_kms_key_ring_iam_binding": {
          "version": 0,
          "block": {
            "attributes": {
              "etag": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "key_ring_id": {
                "type": "string",
                "required": true
              },
              "members": {
                "type": [
                  "set",
                  "string"
                ],
                "required": true
              },
              "role": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "google_kms_key_ring_iam_member": {
          "version": 0,
          "block": {
            "attributes": {
              "etag": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "key_ring_id": {
                "type": "string",
                "required": true
              },
              "member": {
                "type": "string",
                "required": true
              },
              "role": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "google_kms_key_ring_iam_policy": {
          "version": 0,
          "block": {
            "attributes": {
              "etag": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "key_ring_id": {
                "type": "string",
                "required": true
              },
              "policy_data": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "google_kms_secret_ciphertext": {
          "version": 0,
          "block": {
            "attributes": {
              "ciphertext": {
                "type": "string",
                "description": "Contains the result of encrypting the provided plaintext, encoded in base64.",
                "computed": true
              },
              "crypto_key": {
                "type": "string",
                "description": "The full name of the CryptoKey that will be used to encrypt the provided plaintext.\nFormat: ''projects/{{project}}/locations/{{location}}/keyRings/{{keyRing}}/cryptoKeys/{{cryptoKey}}''",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "plaintext": {
                "type": "string",
                "description": "The plaintext to be encrypted.",
                "required": true,
                "sensitive": true
              }
            },
            "block_types": {
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "google_logging_billing_account_exclusion": {
          "version": 0,
          "block": {
            "attributes": {
              "billing_account": {
                "type": "string",
                "required": true
              },
              "description": {
                "type": "string",
                "optional": true
              },
              "disabled": {
                "type": "bool",
                "optional": true
              },
              "filter": {
                "type": "string",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "google_logging_billing_account_sink": {
          "version": 0,
          "block": {
            "attributes": {
              "billing_account": {
                "type": "string",
                "required": true
              },
              "destination": {
                "type": "string",
                "required": true
              },
              "filter": {
                "type": "string",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "writer_identity": {
                "type": "string",
                "computed": true
              }
            },
            "block_types": {
              "bigquery_options": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "use_partitioned_tables": {
                      "type": "bool",
                      "required": true
                    }
                  }
                },
                "max_items": 1
              }
            }
          }
        },
        "google_logging_folder_exclusion": {
          "version": 0,
          "block": {
            "attributes": {
              "description": {
                "type": "string",
                "optional": true
              },
              "disabled": {
                "type": "bool",
                "optional": true
              },
              "filter": {
                "type": "string",
                "required": true
              },
              "folder": {
                "type": "string",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "google_logging_folder_sink": {
          "version": 0,
          "block": {
            "attributes": {
              "destination": {
                "type": "string",
                "required": true
              },
              "filter": {
                "type": "string",
                "optional": true
              },
              "folder": {
                "type": "string",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "include_children": {
                "type": "bool",
                "optional": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "writer_identity": {
                "type": "string",
                "computed": true
              }
            },
            "block_types": {
              "bigquery_options": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "use_partitioned_tables": {
                      "type": "bool",
                      "required": true
                    }
                  }
                },
                "max_items": 1
              }
            }
          }
        },
        "google_logging_metric": {
          "version": 0,
          "block": {
            "attributes": {
              "description": {
                "type": "string",
                "description": "A description of this metric, which is used in documentation. The maximum length of the\ndescription is 8000 characters.",
                "optional": true
              },
              "filter": {
                "type": "string",
                "description": "An advanced logs filter (https://cloud.google.com/logging/docs/view/advanced-filters) which\nis used to match log entries.",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "label_extractors": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "A map from a label key string to an extractor expression which is used to extract data from a log\nentry field and assign as the label value. Each label key specified in the LabelDescriptor must\nhave an associated extractor expression in this map. The syntax of the extractor expression is\nthe same as for the valueExtractor field.",
                "optional": true
              },
              "name": {
                "type": "string",
                "description": "The client-assigned metric identifier. Examples - \"error_count\", \"nginx/requests\".\nMetric identifiers are limited to 100 characters and can include only the following\ncharacters A-Z, a-z, 0-9, and the special characters _-.,+!*',()%/. The forward-slash\ncharacter (/) denotes a hierarchy of name pieces, and it cannot be the first character\nof the name.",
                "required": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "value_extractor": {
                "type": "string",
                "description": "A valueExtractor is required when using a distribution logs-based metric to extract the values to\nrecord from a log entry. Two functions are supported for value extraction - EXTRACT(field) or\nREGEXP_EXTRACT(field, regex). The argument are 1. field - The name of the log entry field from which\nthe value is to be extracted. 2. regex - A regular expression using the Google RE2 syntax\n(https://github.com/google/re2/wiki/Syntax) with a single capture group to extract data from the specified\nlog entry field. The value of the field is converted to a string before applying the regex. It is an\nerror to specify a regex that does not include exactly one capture group.",
                "optional": true
              }
            },
            "block_types": {
              "bucket_options": {
                "nesting_mode": "list",
                "block": {
                  "block_types": {
                    "explicit_buckets": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "bounds": {
                            "type": [
                              "list",
                              "number"
                            ],
                            "description": "The values must be monotonically increasing.",
                            "required": true
                          }
                        }
                      },
                      "max_items": 1
                    },
                    "exponential_buckets": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "growth_factor": {
                            "type": "number",
                            "description": "Must be greater than 1.",
                            "optional": true
                          },
                          "num_finite_buckets": {
                            "type": "number",
                            "description": "Must be greater than 0.",
                            "optional": true
                          },
                          "scale": {
                            "type": "number",
                            "description": "Must be greater than 0.",
                            "optional": true
                          }
                        }
                      },
                      "max_items": 1
                    },
                    "linear_buckets": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "num_finite_buckets": {
                            "type": "number",
                            "description": "Must be greater than 0.",
                            "optional": true
                          },
                          "offset": {
                            "type": "number",
                            "description": "Lower bound of the first bucket.",
                            "optional": true
                          },
                          "width": {
                            "type": "number",
                            "description": "Must be greater than 0.",
                            "optional": true
                          }
                        }
                      },
                      "max_items": 1
                    }
                  }
                },
                "max_items": 1
              },
              "metric_descriptor": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "display_name": {
                      "type": "string",
                      "description": "A concise name for the metric, which can be displayed in user interfaces. Use sentence case \nwithout an ending period, for example \"Request count\". This field is optional but it is \nrecommended to be set for any metrics associated with user-visible concepts, such as Quota.",
                      "optional": true
                    },
                    "metric_kind": {
                      "type": "string",
                      "description": "Whether the metric records instantaneous values, changes to a value, etc.\nSome combinations of metricKind and valueType might not be supported.\nFor counter metrics, set this to DELTA.",
                      "required": true
                    },
                    "unit": {
                      "type": "string",
                      "description": "The unit in which the metric value is reported. It is only applicable if the valueType is\n'INT64', 'DOUBLE', or 'DISTRIBUTION'. The supported units are a subset of\n[The Unified Code for Units of Measure](http://unitsofmeasure.org/ucum.html) standard",
                      "optional": true
                    },
                    "value_type": {
                      "type": "string",
                      "description": "Whether the measurement is an integer, a floating-point number, etc.\nSome combinations of metricKind and valueType might not be supported.\nFor counter metrics, set this to INT64.",
                      "required": true
                    }
                  },
                  "block_types": {
                    "labels": {
                      "nesting_mode": "set",
                      "block": {
                        "attributes": {
                          "description": {
                            "type": "string",
                            "description": "A human-readable description for the label.",
                            "optional": true
                          },
                          "key": {
                            "type": "string",
                            "description": "The label key.",
                            "required": true
                          },
                          "value_type": {
                            "type": "string",
                            "description": "The type of data that can be assigned to the label.",
                            "optional": true
                          }
                        }
                      }
                    }
                  }
                },
                "min_items": 1,
                "max_items": 1
              },
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "google_logging_organization_exclusion": {
          "version": 0,
          "block": {
            "attributes": {
              "description": {
                "type": "string",
                "optional": true
              },
              "disabled": {
                "type": "bool",
                "optional": true
              },
              "filter": {
                "type": "string",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "org_id": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "google_logging_organization_sink": {
          "version": 0,
          "block": {
            "attributes": {
              "destination": {
                "type": "string",
                "required": true
              },
              "filter": {
                "type": "string",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "include_children": {
                "type": "bool",
                "optional": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "org_id": {
                "type": "string",
                "required": true
              },
              "writer_identity": {
                "type": "string",
                "computed": true
              }
            },
            "block_types": {
              "bigquery_options": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "use_partitioned_tables": {
                      "type": "bool",
                      "required": true
                    }
                  }
                },
                "max_items": 1
              }
            }
          }
        },
        "google_logging_project_exclusion": {
          "version": 0,
          "block": {
            "attributes": {
              "description": {
                "type": "string",
                "optional": true
              },
              "disabled": {
                "type": "bool",
                "optional": true
              },
              "filter": {
                "type": "string",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              }
            }
          }
        },
        "google_logging_project_sink": {
          "version": 0,
          "block": {
            "attributes": {
              "destination": {
                "type": "string",
                "required": true
              },
              "filter": {
                "type": "string",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "unique_writer_identity": {
                "type": "bool",
                "optional": true
              },
              "writer_identity": {
                "type": "string",
                "computed": true
              }
            },
            "block_types": {
              "bigquery_options": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "use_partitioned_tables": {
                      "type": "bool",
                      "required": true
                    }
                  }
                },
                "max_items": 1
              }
            }
          }
        },
        "google_ml_engine_model": {
          "version": 0,
          "block": {
            "attributes": {
              "description": {
                "type": "string",
                "description": "The description specified for the model when it was created.",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "labels": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "One or more labels that you can add, to organize your models.",
                "optional": true
              },
              "name": {
                "type": "string",
                "description": "The name specified for the model.",
                "required": true
              },
              "online_prediction_console_logging": {
                "type": "bool",
                "description": "If true, online prediction nodes send stderr and stdout streams to Stackdriver Logging",
                "optional": true
              },
              "online_prediction_logging": {
                "type": "bool",
                "description": "If true, online prediction access logs are sent to StackDriver Logging.",
                "optional": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "regions": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "The list of regions where the model is going to be deployed.\nCurrently only one region per model is supported",
                "optional": true
              }
            },
            "block_types": {
              "default_version": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "name": {
                      "type": "string",
                      "description": "The name specified for the version when it was created.",
                      "required": true
                    }
                  }
                },
                "max_items": 1
              },
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "google_monitoring_alert_policy": {
          "version": 0,
          "block": {
            "attributes": {
              "combiner": {
                "type": "string",
                "description": "How to combine the results of multiple conditions to\ndetermine if an incident should be opened.",
                "required": true
              },
              "creation_record": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "mutate_time": "string",
                      "mutated_by": "string"
                    }
                  ]
                ],
                "description": "A read-only record of the creation of the alerting policy.\nIf provided in a call to create or update, this field will\nbe ignored.",
                "computed": true
              },
              "display_name": {
                "type": "string",
                "description": "A short name or phrase used to identify the policy in\ndashboards, notifications, and incidents. To avoid confusion, don't use\nthe same display name for multiple policies in the same project. The\nname is limited to 512 Unicode characters.",
                "required": true
              },
              "enabled": {
                "type": "bool",
                "description": "Whether or not the policy is enabled. The default is true.",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "labels": {
                "type": [
                  "list",
                  "string"
                ],
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "The unique resource name for this policy.\nIts syntax is: projects/[PROJECT_ID]/alertPolicies/[ALERT_POLICY_ID]",
                "computed": true
              },
              "notification_channels": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "Identifies the notification channels to which notifications should be\nsent when incidents are opened or closed or when new violations occur\non an already opened incident. Each element of this array corresponds\nto the name field in each of the NotificationChannel objects that are\nreturned from the notificationChannels.list method. The syntax of the\nentries in this field is\n'projects/[PROJECT_ID]/notificationChannels/[CHANNEL_ID]'",
                "optional": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "user_labels": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "This field is intended to be used for organizing and identifying the AlertPolicy\nobjects.The field can contain up to 64 entries. Each key and value is limited\nto 63 Unicode characters or 128 bytes, whichever is smaller. Labels and values\ncan contain only lowercase letters, numerals, underscores, and dashes. Keys\nmust begin with a letter.",
                "optional": true
              }
            },
            "block_types": {
              "conditions": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "display_name": {
                      "type": "string",
                      "description": "A short name or phrase used to identify the\ncondition in dashboards, notifications, and\nincidents. To avoid confusion, don't use the same\ndisplay name for multiple conditions in the same\npolicy.",
                      "required": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The unique resource name for this condition.\nIts syntax is:\nprojects/[PROJECT_ID]/alertPolicies/[POLICY_ID]/conditions/[CONDITION_ID]\n[CONDITION_ID] is assigned by Stackdriver Monitoring when\nthe condition is created as part of a new or updated alerting\npolicy.",
                      "computed": true
                    }
                  },
                  "block_types": {
                    "condition_absent": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "duration": {
                            "type": "string",
                            "description": "The amount of time that a time series must\nfail to report new data to be considered\nfailing. Currently, only values that are a\nmultiple of a minute--e.g. 60s, 120s, or 300s\n--are supported.",
                            "required": true
                          },
                          "filter": {
                            "type": "string",
                            "description": "A filter that identifies which time series\nshould be compared with the threshold.The\nfilter is similar to the one that is\nspecified in the\nMetricService.ListTimeSeries request (that\ncall is useful to verify the time series\nthat will be retrieved / processed) and must\nspecify the metric type and optionally may\ncontain restrictions on resource type,\nresource labels, and metric labels. This\nfield may not exceed 2048 Unicode characters\nin length.",
                            "optional": true
                          }
                        },
                        "block_types": {
                          "aggregations": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "alignment_period": {
                                  "type": "string",
                                  "description": "The alignment period for per-time\nseries alignment. If present,\nalignmentPeriod must be at least\n60 seconds. After per-time series\nalignment, each time series will\ncontain data points only on the\nperiod boundaries. If\nperSeriesAligner is not specified\nor equals ALIGN_NONE, then this\nfield is ignored. If\nperSeriesAligner is specified and\ndoes not equal ALIGN_NONE, then\nthis field must be defined;\notherwise an error is returned.",
                                  "optional": true
                                },
                                "cross_series_reducer": {
                                  "type": "string",
                                  "description": "The approach to be used to combine\ntime series. Not all reducer\nfunctions may be applied to all\ntime series, depending on the\nmetric type and the value type of\nthe original time series.\nReduction may change the metric\ntype of value type of the time\nseries.Time series data must be\naligned in order to perform cross-\ntime series reduction. If\ncrossSeriesReducer is specified,\nthen perSeriesAligner must be\nspecified and not equal ALIGN_NONE\nand alignmentPeriod must be\nspecified; otherwise, an error is\nreturned.",
                                  "optional": true
                                },
                                "group_by_fields": {
                                  "type": [
                                    "list",
                                    "string"
                                  ],
                                  "description": "The set of fields to preserve when\ncrossSeriesReducer is specified.\nThe groupByFields determine how\nthe time series are partitioned\ninto subsets prior to applying the\naggregation function. Each subset\ncontains time series that have the\nsame value for each of the\ngrouping fields. Each individual\ntime series is a member of exactly\none subset. The crossSeriesReducer\nis applied to each subset of time\nseries. It is not possible to\nreduce across different resource\ntypes, so this field implicitly\ncontains resource.type. Fields not\nspecified in groupByFields are\naggregated away. If groupByFields\nis not specified and all the time\nseries have the same resource\ntype, then the time series are\naggregated into a single output\ntime series. If crossSeriesReducer\nis not defined, this field is\nignored.",
                                  "optional": true
                                },
                                "per_series_aligner": {
                                  "type": "string",
                                  "description": "The approach to be used to align\nindividual time series. Not all\nalignment functions may be applied\nto all time series, depending on\nthe metric type and value type of\nthe original time series.\nAlignment may change the metric\ntype or the value type of the time\nseries.Time series data must be\naligned in order to perform cross-\ntime series reduction. If\ncrossSeriesReducer is specified,\nthen perSeriesAligner must be\nspecified and not equal ALIGN_NONE\nand alignmentPeriod must be\nspecified; otherwise, an error is\nreturned.",
                                  "optional": true
                                }
                              }
                            }
                          },
                          "trigger": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "count": {
                                  "type": "number",
                                  "description": "The absolute number of time series\nthat must fail the predicate for the\ncondition to be triggered.",
                                  "optional": true
                                },
                                "percent": {
                                  "type": "number",
                                  "description": "The percentage of time series that\nmust fail the predicate for the\ncondition to be triggered.",
                                  "optional": true
                                }
                              }
                            },
                            "max_items": 1
                          }
                        }
                      },
                      "max_items": 1
                    },
                    "condition_threshold": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "comparison": {
                            "type": "string",
                            "description": "The comparison to apply between the time\nseries (indicated by filter and aggregation)\nand the threshold (indicated by\nthreshold_value). The comparison is applied\non each time series, with the time series on\nthe left-hand side and the threshold on the\nright-hand side. Only COMPARISON_LT and\nCOMPARISON_GT are supported currently.",
                            "required": true
                          },
                          "denominator_filter": {
                            "type": "string",
                            "description": "A filter that identifies a time series that\nshould be used as the denominator of a ratio\nthat will be compared with the threshold. If\na denominator_filter is specified, the time\nseries specified by the filter field will be\nused as the numerator.The filter is similar\nto the one that is specified in the\nMetricService.ListTimeSeries request (that\ncall is useful to verify the time series\nthat will be retrieved / processed) and must\nspecify the metric type and optionally may\ncontain restrictions on resource type,\nresource labels, and metric labels. This\nfield may not exceed 2048 Unicode characters\nin length.",
                            "optional": true
                          },
                          "duration": {
                            "type": "string",
                            "description": "The amount of time that a time series must\nviolate the threshold to be considered\nfailing. Currently, only values that are a\nmultiple of a minute--e.g., 0, 60, 120, or\n300 seconds--are supported. If an invalid\nvalue is given, an error will be returned.\nWhen choosing a duration, it is useful to\nkeep in mind the frequency of the underlying\ntime series data (which may also be affected\nby any alignments specified in the\naggregations field); a good duration is long\nenough so that a single outlier does not\ngenerate spurious alerts, but short enough\nthat unhealthy states are detected and\nalerted on quickly.",
                            "required": true
                          },
                          "filter": {
                            "type": "string",
                            "description": "A filter that identifies which time series\nshould be compared with the threshold.The\nfilter is similar to the one that is\nspecified in the\nMetricService.ListTimeSeries request (that\ncall is useful to verify the time series\nthat will be retrieved / processed) and must\nspecify the metric type and optionally may\ncontain restrictions on resource type,\nresource labels, and metric labels. This\nfield may not exceed 2048 Unicode characters\nin length.",
                            "optional": true
                          },
                          "threshold_value": {
                            "type": "number",
                            "description": "A value against which to compare the time\nseries.",
                            "optional": true
                          }
                        },
                        "block_types": {
                          "aggregations": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "alignment_period": {
                                  "type": "string",
                                  "description": "The alignment period for per-time\nseries alignment. If present,\nalignmentPeriod must be at least\n60 seconds. After per-time series\nalignment, each time series will\ncontain data points only on the\nperiod boundaries. If\nperSeriesAligner is not specified\nor equals ALIGN_NONE, then this\nfield is ignored. If\nperSeriesAligner is specified and\ndoes not equal ALIGN_NONE, then\nthis field must be defined;\notherwise an error is returned.",
                                  "optional": true
                                },
                                "cross_series_reducer": {
                                  "type": "string",
                                  "description": "The approach to be used to combine\ntime series. Not all reducer\nfunctions may be applied to all\ntime series, depending on the\nmetric type and the value type of\nthe original time series.\nReduction may change the metric\ntype of value type of the time\nseries.Time series data must be\naligned in order to perform cross-\ntime series reduction. If\ncrossSeriesReducer is specified,\nthen perSeriesAligner must be\nspecified and not equal ALIGN_NONE\nand alignmentPeriod must be\nspecified; otherwise, an error is\nreturned.",
                                  "optional": true
                                },
                                "group_by_fields": {
                                  "type": [
                                    "list",
                                    "string"
                                  ],
                                  "description": "The set of fields to preserve when\ncrossSeriesReducer is specified.\nThe groupByFields determine how\nthe time series are partitioned\ninto subsets prior to applying the\naggregation function. Each subset\ncontains time series that have the\nsame value for each of the\ngrouping fields. Each individual\ntime series is a member of exactly\none subset. The crossSeriesReducer\nis applied to each subset of time\nseries. It is not possible to\nreduce across different resource\ntypes, so this field implicitly\ncontains resource.type. Fields not\nspecified in groupByFields are\naggregated away. If groupByFields\nis not specified and all the time\nseries have the same resource\ntype, then the time series are\naggregated into a single output\ntime series. If crossSeriesReducer\nis not defined, this field is\nignored.",
                                  "optional": true
                                },
                                "per_series_aligner": {
                                  "type": "string",
                                  "description": "The approach to be used to align\nindividual time series. Not all\nalignment functions may be applied\nto all time series, depending on\nthe metric type and value type of\nthe original time series.\nAlignment may change the metric\ntype or the value type of the time\nseries.Time series data must be\naligned in order to perform cross-\ntime series reduction. If\ncrossSeriesReducer is specified,\nthen perSeriesAligner must be\nspecified and not equal ALIGN_NONE\nand alignmentPeriod must be\nspecified; otherwise, an error is\nreturned.",
                                  "optional": true
                                }
                              }
                            }
                          },
                          "denominator_aggregations": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "alignment_period": {
                                  "type": "string",
                                  "description": "The alignment period for per-time\nseries alignment. If present,\nalignmentPeriod must be at least\n60 seconds. After per-time series\nalignment, each time series will\ncontain data points only on the\nperiod boundaries. If\nperSeriesAligner is not specified\nor equals ALIGN_NONE, then this\nfield is ignored. If\nperSeriesAligner is specified and\ndoes not equal ALIGN_NONE, then\nthis field must be defined;\notherwise an error is returned.",
                                  "optional": true
                                },
                                "cross_series_reducer": {
                                  "type": "string",
                                  "description": "The approach to be used to combine\ntime series. Not all reducer\nfunctions may be applied to all\ntime series, depending on the\nmetric type and the value type of\nthe original time series.\nReduction may change the metric\ntype of value type of the time\nseries.Time series data must be\naligned in order to perform cross-\ntime series reduction. If\ncrossSeriesReducer is specified,\nthen perSeriesAligner must be\nspecified and not equal ALIGN_NONE\nand alignmentPeriod must be\nspecified; otherwise, an error is\nreturned.",
                                  "optional": true
                                },
                                "group_by_fields": {
                                  "type": [
                                    "list",
                                    "string"
                                  ],
                                  "description": "The set of fields to preserve when\ncrossSeriesReducer is specified.\nThe groupByFields determine how\nthe time series are partitioned\ninto subsets prior to applying the\naggregation function. Each subset\ncontains time series that have the\nsame value for each of the\ngrouping fields. Each individual\ntime series is a member of exactly\none subset. The crossSeriesReducer\nis applied to each subset of time\nseries. It is not possible to\nreduce across different resource\ntypes, so this field implicitly\ncontains resource.type. Fields not\nspecified in groupByFields are\naggregated away. If groupByFields\nis not specified and all the time\nseries have the same resource\ntype, then the time series are\naggregated into a single output\ntime series. If crossSeriesReducer\nis not defined, this field is\nignored.",
                                  "optional": true
                                },
                                "per_series_aligner": {
                                  "type": "string",
                                  "description": "The approach to be used to align\nindividual time series. Not all\nalignment functions may be applied\nto all time series, depending on\nthe metric type and value type of\nthe original time series.\nAlignment may change the metric\ntype or the value type of the time\nseries.Time series data must be\naligned in order to perform cross-\ntime series reduction. If\ncrossSeriesReducer is specified,\nthen perSeriesAligner must be\nspecified and not equal ALIGN_NONE\nand alignmentPeriod must be\nspecified; otherwise, an error is\nreturned.",
                                  "optional": true
                                }
                              }
                            }
                          },
                          "trigger": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "count": {
                                  "type": "number",
                                  "description": "The absolute number of time series\nthat must fail the predicate for the\ncondition to be triggered.",
                                  "optional": true
                                },
                                "percent": {
                                  "type": "number",
                                  "description": "The percentage of time series that\nmust fail the predicate for the\ncondition to be triggered.",
                                  "optional": true
                                }
                              }
                            },
                            "max_items": 1
                          }
                        }
                      },
                      "max_items": 1
                    }
                  }
                },
                "min_items": 1
              },
              "documentation": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "content": {
                      "type": "string",
                      "description": "The text of the documentation, interpreted according to mimeType.\nThe content may not exceed 8,192 Unicode characters and may not\nexceed more than 10,240 bytes when encoded in UTF-8 format,\nwhichever is smaller.",
                      "optional": true
                    },
                    "mime_type": {
                      "type": "string",
                      "description": "The format of the content field. Presently, only the value\n\"text/markdown\" is supported.",
                      "optional": true
                    }
                  }
                },
                "max_items": 1
              },
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "google_monitoring_group": {
          "version": 0,
          "block": {
            "attributes": {
              "display_name": {
                "type": "string",
                "description": "A user-assigned name for this group, used only for display\npurposes.",
                "required": true
              },
              "filter": {
                "type": "string",
                "description": "The filter used to determine which monitored resources\nbelong to this group.",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "is_cluster": {
                "type": "bool",
                "description": "If true, the members of this group are considered to be a\ncluster. The system can perform additional analysis on\ngroups that are clusters.",
                "optional": true
              },
              "name": {
                "type": "string",
                "description": "A unique identifier for this group. The format is\n\"projects/{project_id_or_number}/groups/{group_id}\".",
                "computed": true
              },
              "parent_name": {
                "type": "string",
                "description": "The name of the group's parent, if it has one. The format is\n\"projects/{project_id_or_number}/groups/{group_id}\". For\ngroups with no parent, parentName is the empty string, \"\".",
                "optional": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              }
            },
            "block_types": {
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "google_monitoring_notification_channel": {
          "version": 0,
          "block": {
            "attributes": {
              "description": {
                "type": "string",
                "description": "An optional human-readable description of this notification channel. This description may provide additional details, beyond the display name, for the channel. This may not exceed 1024 Unicode characters.",
                "optional": true
              },
              "display_name": {
                "type": "string",
                "description": "An optional human-readable name for this notification channel. It is recommended that you specify a non-empty and unique name in order to make it easier to identify the channels in your project, though this is not enforced. The display name is limited to 512 Unicode characters.",
                "required": true
              },
              "enabled": {
                "type": "bool",
                "description": "Whether notifications are forwarded to the described channel. This makes it possible to disable delivery of notifications to a particular channel without removing the channel from all alerting policies that reference the channel. This is a more convenient approach when the change is temporary and you want to receive notifications from the same set of alerting policies on the channel at some point in the future.",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "labels": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "Configuration fields that define the channel and its behavior. The\npermissible and required labels are specified in the\nNotificationChannelDescriptor corresponding to the type field.\n\n**Note**: Some NotificationChannelDescriptor labels are\nsensitive and the API will return an partially-obfuscated value.\nFor example, for '\"type\": \"slack\"' channels, an 'auth_token'\nlabel with value \"SECRET\" will be obfuscated as \"**CRET\". In order\nto avoid a diff, Terraform will use the state value if it appears\nthat the obfuscated value matches the state value in\nlength/unobfuscated characters. However, Terraform will not detect a\ndiff if the obfuscated portion of the value was changed outside of\nTerraform.",
                "optional": true
              },
              "name": {
                "type": "string",
                "description": "The full REST resource name for this channel. The syntax is:\nprojects/[PROJECT_ID]/notificationChannels/[CHANNEL_ID]\nThe [CHANNEL_ID] is automatically assigned by the server on creation.",
                "computed": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "type": {
                "type": "string",
                "description": "The type of the notification channel. This field matches the value of the NotificationChannelDescriptor.type field. See https://cloud.google.com/monitoring/api/ref_v3/rest/v3/projects.notificationChannelDescriptors/list to get the list of valid values such as \"email\", \"slack\", etc...",
                "required": true
              },
              "user_labels": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "User-supplied key/value data that does not need to conform to the corresponding NotificationChannelDescriptor's schema, unlike the labels field. This field is intended to be used for organizing and identifying the NotificationChannel objects.The field can contain up to 64 entries. Each key and value is limited to 63 Unicode characters or 128 bytes, whichever is smaller. Labels and values can contain only lowercase letters, numerals, underscores, and dashes. Keys must begin with a letter.",
                "optional": true
              },
              "verification_status": {
                "type": "string",
                "description": "Indicates whether this channel has been verified or not. On a ListNotificationChannels or GetNotificationChannel operation, this field is expected to be populated.If the value is UNVERIFIED, then it indicates that the channel is non-functioning (it both requires verification and lacks verification); otherwise, it is assumed that the channel works.If the channel is neither VERIFIED nor UNVERIFIED, it implies that the channel is of a type that does not require verification or that this specific channel has been exempted from verification because it was created prior to verification being required for channels of this type.This field cannot be modified using a standard UpdateNotificationChannel operation. To change the value of this field, you must call VerifyNotificationChannel.",
                "computed": true
              }
            },
            "block_types": {
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "google_monitoring_uptime_check_config": {
          "version": 0,
          "block": {
            "attributes": {
              "display_name": {
                "type": "string",
                "description": "A human-friendly name for the uptime check configuration. The display name should be unique within a Stackdriver Workspace in order to make it easier to identify; however, uniqueness is not enforced.",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "is_internal": {
                "type": "bool",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "A unique resource name for this UptimeCheckConfig. The format is projects/[PROJECT_ID]/uptimeCheckConfigs/[UPTIME_CHECK_ID].",
                "computed": true
              },
              "period": {
                "type": "string",
                "description": "How often, in seconds, the uptime check is performed. Currently, the only supported values are 60s (1 minute), 300s (5 minutes), 600s (10 minutes), and 900s (15 minutes). Optional, defaults to 300s.",
                "optional": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "selected_regions": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "The list of regions from which the check will be run. Some regions contain one location, and others contain more than one. If this field is specified, enough regions to include a minimum of 3 locations must be provided, or an error message is returned. Not specifying this field will result in uptime checks running from all regions.",
                "optional": true
              },
              "timeout": {
                "type": "string",
                "description": "The maximum amount of time to wait for the request to complete (must be between 1 and 60 seconds). Accepted formats https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#google.protobuf.Duration",
                "required": true
              },
              "uptime_check_id": {
                "type": "string",
                "description": "The id of the uptime check",
                "computed": true
              }
            },
            "block_types": {
              "content_matchers": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "content": {
                      "type": "string",
                      "description": "String or regex content to match (max 1024 bytes)",
                      "required": true
                    }
                  }
                }
              },
              "http_check": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "headers": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description": "The list of headers to send as part of the uptime check request. If two headers have the same key and different values, they should be entered as a single header, with the value being a comma-separated list of all the desired values as described at https://www.w3.org/Protocols/rfc2616/rfc2616.txt (page 31). Entering two separate headers with the same key in a Create call will cause the first to be overwritten by the second. The maximum number of headers allowed is 100.",
                      "optional": true
                    },
                    "mask_headers": {
                      "type": "bool",
                      "description": "Boolean specifying whether to encrypt the header information. Encryption should be specified for any headers related to authentication that you do not wish to be seen when retrieving the configuration. The server will be responsible for encrypting the headers. On Get/List calls, if mask_headers is set to True then the headers will be obscured with ******.",
                      "optional": true
                    },
                    "path": {
                      "type": "string",
                      "description": "The path to the page to run the check against. Will be combined with the host (specified within the MonitoredResource) and port to construct the full URL. Optional (defaults to \"/\").",
                      "optional": true
                    },
                    "port": {
                      "type": "number",
                      "description": "The port to the page to run the check against. Will be combined with host (specified within the MonitoredResource) and path to construct the full URL. Optional (defaults to 80 without SSL, or 443 with SSL).",
                      "optional": true,
                      "computed": true
                    },
                    "use_ssl": {
                      "type": "bool",
                      "description": "If true, use HTTPS instead of HTTP to run the check.",
                      "optional": true
                    },
                    "validate_ssl": {
                      "type": "bool",
                      "description": "Boolean specifying whether to include SSL certificate validation as a part of the Uptime check. Only applies to checks where monitoredResource is set to uptime_url. If useSsl is false, setting validateSsl to true has no effect.",
                      "optional": true
                    }
                  },
                  "block_types": {
                    "auth_info": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "password": {
                            "type": "string",
                            "description": "The password to authenticate.",
                            "required": true,
                            "sensitive": true
                          },
                          "username": {
                            "type": "string",
                            "description": "The username to authenticate.",
                            "required": true
                          }
                        }
                      },
                      "max_items": 1
                    }
                  }
                },
                "max_items": 1
              },
              "internal_checkers": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "display_name": {
                      "type": "string",
                      "optional": true,
                      "computed": true
                    },
                    "gcp_zone": {
                      "type": "string",
                      "optional": true,
                      "computed": true
                    },
                    "name": {
                      "type": "string",
                      "optional": true,
                      "computed": true
                    },
                    "network": {
                      "type": "string",
                      "optional": true,
                      "computed": true
                    },
                    "peer_project_id": {
                      "type": "string",
                      "optional": true,
                      "computed": true
                    }
                  }
                }
              },
              "monitored_resource": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "labels": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description": "Values for all of the labels listed in the associated monitored resource descriptor. For example, Compute Engine VM instances use the labels \"project_id\", \"instance_id\", and \"zone\".",
                      "required": true
                    },
                    "type": {
                      "type": "string",
                      "description": "The monitored resource type. This field must match the type field of a MonitoredResourceDescriptor (https://cloud.google.com/monitoring/api/ref_v3/rest/v3/projects.monitoredResourceDescriptors#MonitoredResourceDescriptor) object. For example, the type of a Compute Engine VM instance is gce_instance. For a list of types, see Monitoring resource types (https://cloud.google.com/monitoring/api/resources) and Logging resource types (https://cloud.google.com/logging/docs/api/v2/resource-list).",
                      "required": true
                    }
                  }
                },
                "max_items": 1
              },
              "resource_group": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "group_id": {
                      "type": "string",
                      "description": "The group of resources being monitored. Should be the 'name' of a group",
                      "optional": true
                    },
                    "resource_type": {
                      "type": "string",
                      "description": "The resource type of the group members.",
                      "optional": true
                    }
                  }
                },
                "max_items": 1
              },
              "tcp_check": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "port": {
                      "type": "number",
                      "description": "The port to the page to run the check against. Will be combined with host (specified within the MonitoredResource) to construct the full URL.",
                      "required": true
                    }
                  }
                },
                "max_items": 1
              },
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "google_organization_iam_audit_config": {
          "version": 0,
          "block": {
            "attributes": {
              "etag": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "org_id": {
                "type": "string",
                "required": true
              },
              "service": {
                "type": "string",
                "required": true
              }
            },
            "block_types": {
              "audit_log_config": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "exempted_members": {
                      "type": [
                        "set",
                        "string"
                      ],
                      "optional": true
                    },
                    "log_type": {
                      "type": "string",
                      "required": true
                    }
                  }
                },
                "min_items": 1
              }
            }
          }
        },
        "google_organization_iam_binding": {
          "version": 0,
          "block": {
            "attributes": {
              "etag": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "members": {
                "type": [
                  "set",
                  "string"
                ],
                "required": true
              },
              "org_id": {
                "type": "string",
                "required": true
              },
              "role": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "google_organization_iam_custom_role": {
          "version": 0,
          "block": {
            "attributes": {
              "deleted": {
                "type": "bool",
                "computed": true
              },
              "description": {
                "type": "string",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "org_id": {
                "type": "string",
                "required": true
              },
              "permissions": {
                "type": [
                  "set",
                  "string"
                ],
                "required": true
              },
              "role_id": {
                "type": "string",
                "required": true
              },
              "stage": {
                "type": "string",
                "optional": true
              },
              "title": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "google_organization_iam_member": {
          "version": 0,
          "block": {
            "attributes": {
              "etag": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "member": {
                "type": "string",
                "required": true
              },
              "org_id": {
                "type": "string",
                "required": true
              },
              "role": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "google_organization_iam_policy": {
          "version": 0,
          "block": {
            "attributes": {
              "etag": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "org_id": {
                "type": "string",
                "required": true
              },
              "policy_data": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "google_organization_policy": {
          "version": 0,
          "block": {
            "attributes": {
              "constraint": {
                "type": "string",
                "required": true
              },
              "etag": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "org_id": {
                "type": "string",
                "required": true
              },
              "update_time": {
                "type": "string",
                "computed": true
              },
              "version": {
                "type": "number",
                "optional": true,
                "computed": true
              }
            },
            "block_types": {
              "boolean_policy": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "enforced": {
                      "type": "bool",
                      "required": true
                    }
                  }
                },
                "max_items": 1
              },
              "list_policy": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "inherit_from_parent": {
                      "type": "bool",
                      "optional": true
                    },
                    "suggested_value": {
                      "type": "string",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "block_types": {
                    "allow": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "all": {
                            "type": "bool",
                            "optional": true
                          },
                          "values": {
                            "type": [
                              "set",
                              "string"
                            ],
                            "optional": true
                          }
                        }
                      },
                      "max_items": 1
                    },
                    "deny": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "all": {
                            "type": "bool",
                            "optional": true
                          },
                          "values": {
                            "type": [
                              "set",
                              "string"
                            ],
                            "optional": true
                          }
                        }
                      },
                      "max_items": 1
                    }
                  }
                },
                "max_items": 1
              },
              "restore_policy": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "default": {
                      "type": "bool",
                      "required": true
                    }
                  }
                },
                "max_items": 1
              },
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    },
                    "read": {
                      "type": "string",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "google_project": {
          "version": 1,
          "block": {
            "attributes": {
              "auto_create_network": {
                "type": "bool",
                "optional": true
              },
              "billing_account": {
                "type": "string",
                "optional": true
              },
              "folder_id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "labels": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "number": {
                "type": "string",
                "computed": true
              },
              "org_id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "project_id": {
                "type": "string",
                "required": true
              },
              "skip_delete": {
                "type": "bool",
                "optional": true,
                "computed": true
              }
            },
            "block_types": {
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    },
                    "read": {
                      "type": "string",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "google_project_iam_audit_config": {
          "version": 0,
          "block": {
            "attributes": {
              "etag": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "service": {
                "type": "string",
                "required": true
              }
            },
            "block_types": {
              "audit_log_config": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "exempted_members": {
                      "type": [
                        "set",
                        "string"
                      ],
                      "optional": true
                    },
                    "log_type": {
                      "type": "string",
                      "required": true
                    }
                  }
                },
                "min_items": 1
              }
            }
          }
        },
        "google_project_iam_binding": {
          "version": 0,
          "block": {
            "attributes": {
              "etag": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "members": {
                "type": [
                  "set",
                  "string"
                ],
                "required": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "role": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "google_project_iam_custom_role": {
          "version": 0,
          "block": {
            "attributes": {
              "deleted": {
                "type": "bool",
                "computed": true
              },
              "description": {
                "type": "string",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "permissions": {
                "type": [
                  "set",
                  "string"
                ],
                "required": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "role_id": {
                "type": "string",
                "required": true
              },
              "stage": {
                "type": "string",
                "optional": true
              },
              "title": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "google_project_iam_member": {
          "version": 0,
          "block": {
            "attributes": {
              "etag": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "member": {
                "type": "string",
                "required": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "role": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "google_project_iam_policy": {
          "version": 0,
          "block": {
            "attributes": {
              "etag": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "policy_data": {
                "type": "string",
                "required": true
              },
              "project": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "google_project_organization_policy": {
          "version": 0,
          "block": {
            "attributes": {
              "constraint": {
                "type": "string",
                "required": true
              },
              "etag": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "project": {
                "type": "string",
                "required": true
              },
              "update_time": {
                "type": "string",
                "computed": true
              },
              "version": {
                "type": "number",
                "optional": true,
                "computed": true
              }
            },
            "block_types": {
              "boolean_policy": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "enforced": {
                      "type": "bool",
                      "required": true
                    }
                  }
                },
                "max_items": 1
              },
              "list_policy": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "inherit_from_parent": {
                      "type": "bool",
                      "optional": true
                    },
                    "suggested_value": {
                      "type": "string",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "block_types": {
                    "allow": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "all": {
                            "type": "bool",
                            "optional": true
                          },
                          "values": {
                            "type": [
                              "set",
                              "string"
                            ],
                            "optional": true
                          }
                        }
                      },
                      "max_items": 1
                    },
                    "deny": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "all": {
                            "type": "bool",
                            "optional": true
                          },
                          "values": {
                            "type": [
                              "set",
                              "string"
                            ],
                            "optional": true
                          }
                        }
                      },
                      "max_items": 1
                    }
                  }
                },
                "max_items": 1
              },
              "restore_policy": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "default": {
                      "type": "bool",
                      "required": true
                    }
                  }
                },
                "max_items": 1
              },
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    },
                    "read": {
                      "type": "string",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "google_project_service": {
          "version": 0,
          "block": {
            "attributes": {
              "disable_dependent_services": {
                "type": "bool",
                "optional": true
              },
              "disable_on_destroy": {
                "type": "bool",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "service": {
                "type": "string",
                "required": true
              }
            },
            "block_types": {
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    },
                    "read": {
                      "type": "string",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "google_project_usage_export_bucket": {
          "version": 0,
          "block": {
            "attributes": {
              "bucket_name": {
                "type": "string",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "prefix": {
                "type": "string",
                "optional": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              }
            }
          }
        },
        "google_pubsub_subscription": {
          "version": 0,
          "block": {
            "attributes": {
              "ack_deadline_seconds": {
                "type": "number",
                "description": "This value is the maximum time after a subscriber receives a message\nbefore the subscriber should acknowledge the message. After message\ndelivery but before the ack deadline expires and before the message is\nacknowledged, it is an outstanding message and will not be delivered\nagain during that time (on a best-effort basis).\n\nFor pull subscriptions, this value is used as the initial value for\nthe ack deadline. To override this value for a given message, call\nsubscriptions.modifyAckDeadline with the corresponding ackId if using\npull. The minimum custom deadline you can specify is 10 seconds. The\nmaximum custom deadline you can specify is 600 seconds (10 minutes).\nIf this parameter is 0, a default value of 10 seconds is used.\n\nFor push delivery, this value is also used to set the request timeout\nfor the call to the push endpoint.\n\nIf the subscriber never acknowledges the message, the Pub/Sub system\nwill eventually redeliver the message.",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "labels": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "A set of key/value label pairs to assign to this Subscription.",
                "optional": true
              },
              "message_retention_duration": {
                "type": "string",
                "description": "How long to retain unacknowledged messages in the subscription's\nbacklog, from the moment a message is published. If\nretainAckedMessages is true, then this also configures the retention\nof acknowledged messages, and thus configures how far back in time a\nsubscriptions.seek can be done. Defaults to 7 days. Cannot be more\nthan 7 days ('\"604800s\"') or less than 10 minutes ('\"600s\"').\n\nA duration in seconds with up to nine fractional digits, terminated\nby 's'. Example: '\"600.5s\"'.",
                "optional": true
              },
              "name": {
                "type": "string",
                "description": "Name of the subscription.",
                "required": true
              },
              "path": {
                "type": "string",
                "computed": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "retain_acked_messages": {
                "type": "bool",
                "description": "Indicates whether to retain acknowledged messages. If 'true', then\nmessages are not expunged from the subscription's backlog, even if\nthey are acknowledged, until they fall out of the\nmessageRetentionDuration window.",
                "optional": true
              },
              "topic": {
                "type": "string",
                "description": "A reference to a Topic resource.",
                "required": true
              }
            },
            "block_types": {
              "expiration_policy": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "ttl": {
                      "type": "string",
                      "description": "Specifies the \"time-to-live\" duration for an associated resource. The\nresource expires if it is not active for a period of ttl.\nIf ttl is not set, the associated resource never expires.\nA duration in seconds with up to nine fractional digits, terminated by 's'.\nExample - \"3.5s\".",
                      "required": true
                    }
                  }
                },
                "max_items": 1
              },
              "push_config": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "attributes": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description": "Endpoint configuration attributes.\n\nEvery endpoint has a set of API supported attributes that can\nbe used to control different aspects of the message delivery.\n\nThe currently supported attribute is x-goog-version, which you\ncan use to change the format of the pushed message. This\nattribute indicates the version of the data expected by\nthe endpoint. This controls the shape of the pushed message\n(i.e., its fields and metadata). The endpoint version is\nbased on the version of the Pub/Sub API.\n\nIf not present during the subscriptions.create call,\nit will default to the version of the API used to make\nsuch call. If not present during a subscriptions.modifyPushConfig\ncall, its value will not be changed. subscriptions.get\ncalls will always return a valid version, even if the\nsubscription was created without this attribute.\n\nThe possible values for this attribute are:\n\n- v1beta1: uses the push format defined in the v1beta1 Pub/Sub API.\n- v1 or v1beta2: uses the push format defined in the v1 Pub/Sub API.",
                      "optional": true
                    },
                    "push_endpoint": {
                      "type": "string",
                      "description": "A URL locating the endpoint to which messages should be pushed.\nFor example, a Webhook endpoint might use\n\"https://example.com/push\".",
                      "required": true
                    }
                  },
                  "block_types": {
                    "oidc_token": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "audience": {
                            "type": "string",
                            "description": "Audience to be used when generating OIDC token. The audience claim\nidentifies the recipients that the JWT is intended for. The audience\nvalue is a single case-sensitive string. Having multiple values (array)\nfor the audience field is not supported. More info about the OIDC JWT\ntoken audience here: https://tools.ietf.org/html/rfc7519#section-4.1.3\nNote: if not specified, the Push endpoint URL will be used.",
                            "optional": true
                          },
                          "service_account_email": {
                            "type": "string",
                            "description": "Service account email to be used for generating the OIDC token.\nThe caller (for subscriptions.create, subscriptions.patch, and\nsubscriptions.modifyPushConfig RPCs) must have the\niam.serviceAccounts.actAs permission for the service account.",
                            "required": true
                          }
                        }
                      },
                      "max_items": 1
                    }
                  }
                },
                "max_items": 1
              },
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "google_pubsub_subscription_iam_binding": {
          "version": 0,
          "block": {
            "attributes": {
              "etag": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "members": {
                "type": [
                  "set",
                  "string"
                ],
                "required": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "role": {
                "type": "string",
                "required": true
              },
              "subscription": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "google_pubsub_subscription_iam_member": {
          "version": 0,
          "block": {
            "attributes": {
              "etag": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "member": {
                "type": "string",
                "required": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "role": {
                "type": "string",
                "required": true
              },
              "subscription": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "google_pubsub_subscription_iam_policy": {
          "version": 0,
          "block": {
            "attributes": {
              "etag": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "policy_data": {
                "type": "string",
                "required": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "subscription": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "google_pubsub_topic": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "kms_key_name": {
                "type": "string",
                "description": "The resource name of the Cloud KMS CryptoKey to be used to protect access\nto messages published on this topic. Your project's PubSub service account\n('service-{{PROJECT_NUMBER}}@gcp-sa-pubsub.iam.gserviceaccount.com') must have\n'roles/cloudkms.cryptoKeyEncrypterDecrypter' to use this feature.\n\nThe expected format is 'projects/*/locations/*/keyRings/*/cryptoKeys/*'",
                "optional": true
              },
              "labels": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "A set of key/value label pairs to assign to this Topic.",
                "optional": true
              },
              "name": {
                "type": "string",
                "description": "Name of the topic.",
                "required": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              }
            },
            "block_types": {
              "message_storage_policy": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "allowed_persistence_regions": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "A list of IDs of GCP regions where messages that are published to\nthe topic may be persisted in storage. Messages published by\npublishers running in non-allowed GCP regions (or running outside\nof GCP altogether) will be routed for storage in one of the\nallowed regions. An empty list means that no regions are allowed,\nand is not a valid configuration.",
                      "required": true
                    }
                  }
                },
                "max_items": 1
              },
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "google_pubsub_topic_iam_binding": {
          "version": 0,
          "block": {
            "attributes": {
              "etag": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "members": {
                "type": [
                  "set",
                  "string"
                ],
                "required": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "role": {
                "type": "string",
                "required": true
              },
              "topic": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "google_pubsub_topic_iam_member": {
          "version": 0,
          "block": {
            "attributes": {
              "etag": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "member": {
                "type": "string",
                "required": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "role": {
                "type": "string",
                "required": true
              },
              "topic": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "google_pubsub_topic_iam_policy": {
          "version": 0,
          "block": {
            "attributes": {
              "etag": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "policy_data": {
                "type": "string",
                "required": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "topic": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "google_redis_instance": {
          "version": 0,
          "block": {
            "attributes": {
              "alternative_location_id": {
                "type": "string",
                "description": "Only applicable to STANDARD_HA tier which protects the instance\nagainst zonal failures by provisioning it across two zones.\nIf provided, it must be a different zone from the one provided in\n[locationId].",
                "optional": true,
                "computed": true
              },
              "authorized_network": {
                "type": "string",
                "description": "The full name of the Google Compute Engine network to which the\ninstance is connected. If left unspecified, the default network\nwill be used.",
                "optional": true,
                "computed": true
              },
              "create_time": {
                "type": "string",
                "description": "The time the instance was created in RFC3339 UTC \"Zulu\" format,\naccurate to nanoseconds.",
                "computed": true
              },
              "current_location_id": {
                "type": "string",
                "description": "The current zone where the Redis endpoint is placed.\nFor Basic Tier instances, this will always be the same as the\n[locationId] provided by the user at creation time. For Standard Tier\ninstances, this can be either [locationId] or [alternativeLocationId]\nand can change after a failover event.",
                "computed": true
              },
              "display_name": {
                "type": "string",
                "description": "An arbitrary and optional user-provided name for the instance.",
                "optional": true
              },
              "host": {
                "type": "string",
                "description": "Hostname or IP address of the exposed Redis endpoint used by clients\nto connect to the service.",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "labels": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "Resource labels to represent user provided metadata.",
                "optional": true
              },
              "location_id": {
                "type": "string",
                "description": "The zone where the instance will be provisioned. If not provided,\nthe service will choose a zone for the instance. For STANDARD_HA tier,\ninstances will be created across two zones for protection against\nzonal failures. If [alternativeLocationId] is also provided, it must\nbe different from [locationId].",
                "optional": true,
                "computed": true
              },
              "memory_size_gb": {
                "type": "number",
                "description": "Redis memory size in GiB.",
                "required": true
              },
              "name": {
                "type": "string",
                "description": "The ID of the instance or a fully qualified identifier for the instance.",
                "required": true
              },
              "port": {
                "type": "number",
                "description": "The port number of the exposed Redis endpoint.",
                "computed": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "redis_configs": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "Redis configuration parameters, according to http://redis.io/topics/config.\nPlease check Memorystore documentation for the list of supported parameters:\nhttps://cloud.google.com/memorystore/docs/redis/reference/rest/v1/projects.locations.instances#Instance.FIELDS.redis_configs",
                "optional": true
              },
              "redis_version": {
                "type": "string",
                "description": "The version of Redis software. If not provided, latest supported\nversion will be used. Currently, the supported values are:\n\n- REDIS_4_0 for Redis 4.0 compatibility\n- REDIS_3_2 for Redis 3.2 compatibility",
                "optional": true,
                "computed": true
              },
              "region": {
                "type": "string",
                "description": "The name of the Redis region of the instance.",
                "optional": true,
                "computed": true
              },
              "reserved_ip_range": {
                "type": "string",
                "description": "The CIDR range of internal addresses that are reserved for this\ninstance. If not provided, the service will choose an unused /29\nblock, for example, 10.0.0.0/29 or 192.168.0.0/29. Ranges must be\nunique and non-overlapping with existing subnets in an authorized\nnetwork.",
                "optional": true,
                "computed": true
              },
              "tier": {
                "type": "string",
                "description": "The service tier of the instance. Must be one of these values:\n\n- BASIC: standalone instance\n- STANDARD_HA: highly available primary/replica instances",
                "optional": true
              }
            },
            "block_types": {
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "google_resource_manager_lien": {
          "version": 0,
          "block": {
            "attributes": {
              "create_time": {
                "type": "string",
                "description": "Time of creation",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "A system-generated unique identifier for this Lien.",
                "computed": true
              },
              "origin": {
                "type": "string",
                "description": "A stable, user-visible/meaningful string identifying the origin\nof the Lien, intended to be inspected programmatically. Maximum length of\n200 characters.",
                "required": true
              },
              "parent": {
                "type": "string",
                "description": "A reference to the resource this Lien is attached to.\nThe server will validate the parent against those for which Liens are supported.\nSince a variety of objects can have Liens against them, you must provide the type\nprefix (e.g. \"projects/my-project-name\").",
                "required": true
              },
              "reason": {
                "type": "string",
                "description": "Concise user-visible strings indicating why an action cannot be performed\non a resource. Maximum length of 200 characters.",
                "required": true
              },
              "restrictions": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "The types of operations which should be blocked as a result of this Lien.\nEach value should correspond to an IAM permission. The server will validate\nthe permissions against those for which Liens are supported.  An empty\nlist is meaningless and will be rejected.\ne.g. ['resourcemanager.projects.delete']",
                "required": true
              }
            },
            "block_types": {
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "google_runtimeconfig_config": {
          "version": 0,
          "block": {
            "attributes": {
              "description": {
                "type": "string",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              }
            }
          }
        },
        "google_runtimeconfig_config_iam_binding": {
          "version": 0,
          "block": {
            "attributes": {
              "config": {
                "type": "string",
                "required": true
              },
              "etag": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "members": {
                "type": [
                  "set",
                  "string"
                ],
                "required": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "role": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "google_runtimeconfig_config_iam_member": {
          "version": 0,
          "block": {
            "attributes": {
              "config": {
                "type": "string",
                "required": true
              },
              "etag": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "member": {
                "type": "string",
                "required": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "role": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "google_runtimeconfig_config_iam_policy": {
          "version": 0,
          "block": {
            "attributes": {
              "config": {
                "type": "string",
                "required": true
              },
              "etag": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "policy_data": {
                "type": "string",
                "required": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              }
            }
          }
        },
        "google_runtimeconfig_variable": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "parent": {
                "type": "string",
                "required": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "text": {
                "type": "string",
                "optional": true
              },
              "update_time": {
                "type": "string",
                "computed": true
              },
              "value": {
                "type": "string",
                "optional": true
              }
            }
          }
        },
        "google_scc_source": {
          "version": 0,
          "block": {
            "attributes": {
              "description": {
                "type": "string",
                "description": "The description of the source (max of 1024 characters).",
                "optional": true
              },
              "display_name": {
                "type": "string",
                "description": "The source’s display name. A source’s display name must be unique\namongst its siblings, for example, two sources with the same parent\ncan't share the same display name. The display name must start and end\nwith a letter or digit, may contain letters, digits, spaces, hyphens,\nand underscores, and can be no longer than 32 characters.",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "The resource name of this source, in the format\n'organizations/{{organization}}/sources/{{source}}'.",
                "computed": true
              },
              "organization": {
                "type": "string",
                "description": "The organization whose Cloud Security Command Center the Source\nlives in.",
                "required": true
              }
            },
            "block_types": {
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "google_service_account": {
          "version": 0,
          "block": {
            "attributes": {
              "account_id": {
                "type": "string",
                "required": true
              },
              "description": {
                "type": "string",
                "optional": true
              },
              "display_name": {
                "type": "string",
                "optional": true
              },
              "email": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "computed": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "unique_id": {
                "type": "string",
                "computed": true
              }
            }
          }
        },
        "google_service_account_iam_binding": {
          "version": 0,
          "block": {
            "attributes": {
              "etag": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "members": {
                "type": [
                  "set",
                  "string"
                ],
                "required": true
              },
              "role": {
                "type": "string",
                "required": true
              },
              "service_account_id": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "google_service_account_iam_member": {
          "version": 0,
          "block": {
            "attributes": {
              "etag": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "member": {
                "type": "string",
                "required": true
              },
              "role": {
                "type": "string",
                "required": true
              },
              "service_account_id": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "google_service_account_iam_policy": {
          "version": 0,
          "block": {
            "attributes": {
              "etag": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "policy_data": {
                "type": "string",
                "required": true
              },
              "service_account_id": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "google_service_account_key": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "key_algorithm": {
                "type": "string",
                "optional": true
              },
              "name": {
                "type": "string",
                "computed": true
              },
              "pgp_key": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "private_key": {
                "type": "string",
                "computed": true,
                "sensitive": true
              },
              "private_key_encrypted": {
                "type": "string",
                "computed": true
              },
              "private_key_fingerprint": {
                "type": "string",
                "computed": true
              },
              "private_key_type": {
                "type": "string",
                "optional": true
              },
              "public_key": {
                "type": "string",
                "computed": true
              },
              "public_key_type": {
                "type": "string",
                "optional": true
              },
              "service_account_id": {
                "type": "string",
                "required": true
              },
              "valid_after": {
                "type": "string",
                "computed": true
              },
              "valid_before": {
                "type": "string",
                "computed": true
              }
            }
          }
        },
        "google_service_networking_connection": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "network": {
                "type": "string",
                "required": true
              },
              "peering": {
                "type": "string",
                "computed": true
              },
              "reserved_peering_ranges": {
                "type": [
                  "list",
                  "string"
                ],
                "required": true
              },
              "service": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "google_sourcerepo_repository": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "Resource name of the repository, of the form '{{repo}}'.\nThe repo name may contain slashes. eg, 'name/with/slash'",
                "required": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "size": {
                "type": "number",
                "description": "The disk usage of the repo, in bytes.",
                "computed": true
              },
              "url": {
                "type": "string",
                "description": "URL to clone the repository from Google Cloud Source Repositories.",
                "computed": true
              }
            },
            "block_types": {
              "pubsub_configs": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "message_format": {
                      "type": "string",
                      "description": "The format of the Cloud Pub/Sub messages. \n- PROTOBUF: The message payload is a serialized protocol buffer of SourceRepoEvent.\n- JSON: The message payload is a JSON string of SourceRepoEvent.",
                      "required": true
                    },
                    "service_account_email": {
                      "type": "string",
                      "description": "Email address of the service account used for publishing Cloud Pub/Sub messages. \nThis service account needs to be in the same project as the PubsubConfig. When added, \nthe caller needs to have iam.serviceAccounts.actAs permission on this service account. \nIf unspecified, it defaults to the compute engine default service account.",
                      "optional": true,
                      "computed": true
                    },
                    "topic": {
                      "type": "string",
                      "required": true
                    }
                  }
                }
              },
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "google_sourcerepo_repository_iam_binding": {
          "version": 0,
          "block": {
            "attributes": {
              "etag": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "members": {
                "type": [
                  "set",
                  "string"
                ],
                "required": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "repository": {
                "type": "string",
                "required": true
              },
              "role": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "google_sourcerepo_repository_iam_member": {
          "version": 0,
          "block": {
            "attributes": {
              "etag": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "member": {
                "type": "string",
                "required": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "repository": {
                "type": "string",
                "required": true
              },
              "role": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "google_sourcerepo_repository_iam_policy": {
          "version": 0,
          "block": {
            "attributes": {
              "etag": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "policy_data": {
                "type": "string",
                "required": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "repository": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "google_spanner_database": {
          "version": 0,
          "block": {
            "attributes": {
              "ddl": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "An optional list of DDL statements to run inside the newly created\ndatabase. Statements can create tables, indexes, etc. These statements\nexecute atomically with the creation of the database: if there is an\nerror in any statement, the database is not created.",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "instance": {
                "type": "string",
                "description": "The instance to create the database on.",
                "required": true
              },
              "name": {
                "type": "string",
                "description": "A unique identifier for the database, which cannot be changed after\nthe instance is created. Values are of the form [a-z][-a-z0-9]*[a-z0-9].",
                "required": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "state": {
                "type": "string",
                "description": "An explanation of the status of the database.",
                "computed": true
              }
            },
            "block_types": {
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "google_spanner_database_iam_binding": {
          "version": 0,
          "block": {
            "attributes": {
              "database": {
                "type": "string",
                "required": true
              },
              "etag": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "instance": {
                "type": "string",
                "required": true
              },
              "members": {
                "type": [
                  "set",
                  "string"
                ],
                "required": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "role": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "google_spanner_database_iam_member": {
          "version": 0,
          "block": {
            "attributes": {
              "database": {
                "type": "string",
                "required": true
              },
              "etag": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "instance": {
                "type": "string",
                "required": true
              },
              "member": {
                "type": "string",
                "required": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "role": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "google_spanner_database_iam_policy": {
          "version": 0,
          "block": {
            "attributes": {
              "database": {
                "type": "string",
                "required": true
              },
              "etag": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "instance": {
                "type": "string",
                "required": true
              },
              "policy_data": {
                "type": "string",
                "required": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              }
            }
          }
        },
        "google_spanner_instance": {
          "version": 0,
          "block": {
            "attributes": {
              "config": {
                "type": "string",
                "description": "The name of the instance's configuration (similar but not\nquite the same as a region) which defines defines the geographic placement and\nreplication of your databases in this instance. It determines where your data\nis stored. Values are typically of the form 'regional-europe-west1' , 'us-central' etc.\nIn order to obtain a valid list please consult the\n[Configuration section of the docs](https://cloud.google.com/spanner/docs/instances).",
                "required": true
              },
              "display_name": {
                "type": "string",
                "description": "The descriptive name for this instance as it appears in UIs. Must be\nunique per project and between 4 and 30 characters in length.",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "labels": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "An object containing a list of \"key\": value pairs.\nExample: { \"name\": \"wrench\", \"mass\": \"1.3kg\", \"count\": \"3\" }.",
                "optional": true
              },
              "name": {
                "type": "string",
                "description": "A unique identifier for the instance, which cannot be changed after\nthe instance is created. The name must be between 6 and 30 characters\nin length.\n\n\nIf not provided, a random string starting with 'tf-' will be selected.",
                "optional": true,
                "computed": true
              },
              "num_nodes": {
                "type": "number",
                "description": "The number of nodes allocated to this instance.",
                "optional": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "state": {
                "type": "string",
                "description": "Instance status: 'CREATING' or 'READY'.",
                "computed": true
              }
            },
            "block_types": {
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "google_spanner_instance_iam_binding": {
          "version": 0,
          "block": {
            "attributes": {
              "etag": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "instance": {
                "type": "string",
                "required": true
              },
              "members": {
                "type": [
                  "set",
                  "string"
                ],
                "required": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "role": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "google_spanner_instance_iam_member": {
          "version": 0,
          "block": {
            "attributes": {
              "etag": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "instance": {
                "type": "string",
                "required": true
              },
              "member": {
                "type": "string",
                "required": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "role": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "google_spanner_instance_iam_policy": {
          "version": 0,
          "block": {
            "attributes": {
              "etag": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "instance": {
                "type": "string",
                "required": true
              },
              "policy_data": {
                "type": "string",
                "required": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              }
            }
          }
        },
        "google_sql_database": {
          "version": 0,
          "block": {
            "attributes": {
              "charset": {
                "type": "string",
                "description": "The charset value. See MySQL's\n[Supported Character Sets and Collations](https://dev.mysql.com/doc/refman/5.7/en/charset-charsets.html)\nand Postgres' [Character Set Support](https://www.postgresql.org/docs/9.6/static/multibyte.html)\nfor more details and supported values. Postgres databases only support\na value of 'UTF8' at creation time.",
                "optional": true,
                "computed": true
              },
              "collation": {
                "type": "string",
                "description": "The collation value. See MySQL's\n[Supported Character Sets and Collations](https://dev.mysql.com/doc/refman/5.7/en/charset-charsets.html)\nand Postgres' [Collation Support](https://www.postgresql.org/docs/9.6/static/collation.html)\nfor more details and supported values. Postgres databases only support\na value of 'en_US.UTF8' at creation time.",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "instance": {
                "type": "string",
                "description": "The name of the Cloud SQL instance. This does not include the project\nID.",
                "required": true
              },
              "name": {
                "type": "string",
                "description": "The name of the database in the Cloud SQL instance.\nThis does not include the project ID or instance name.",
                "required": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "self_link": {
                "type": "string",
                "computed": true
              }
            },
            "block_types": {
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "google_sql_database_instance": {
          "version": 0,
          "block": {
            "attributes": {
              "connection_name": {
                "type": "string",
                "computed": true
              },
              "database_version": {
                "type": "string",
                "optional": true
              },
              "first_ip_address": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "ip_address": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "ip_address": "string",
                      "time_to_retire": "string",
                      "type": "string"
                    }
                  ]
                ],
                "computed": true
              },
              "master_instance_name": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "private_ip_address": {
                "type": "string",
                "computed": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "public_ip_address": {
                "type": "string",
                "computed": true
              },
              "region": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "self_link": {
                "type": "string",
                "computed": true
              },
              "server_ca_cert": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "cert": "string",
                      "common_name": "string",
                      "create_time": "string",
                      "expiration_time": "string",
                      "sha1_fingerprint": "string"
                    }
                  ]
                ],
                "computed": true
              },
              "service_account_email_address": {
                "type": "string",
                "computed": true
              }
            },
            "block_types": {
              "replica_configuration": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "ca_certificate": {
                      "type": "string",
                      "optional": true
                    },
                    "client_certificate": {
                      "type": "string",
                      "optional": true
                    },
                    "client_key": {
                      "type": "string",
                      "optional": true
                    },
                    "connect_retry_interval": {
                      "type": "number",
                      "optional": true
                    },
                    "dump_file_path": {
                      "type": "string",
                      "optional": true
                    },
                    "failover_target": {
                      "type": "bool",
                      "optional": true
                    },
                    "master_heartbeat_period": {
                      "type": "number",
                      "optional": true
                    },
                    "password": {
                      "type": "string",
                      "optional": true,
                      "sensitive": true
                    },
                    "ssl_cipher": {
                      "type": "string",
                      "optional": true
                    },
                    "username": {
                      "type": "string",
                      "optional": true
                    },
                    "verify_server_certificate": {
                      "type": "bool",
                      "optional": true
                    }
                  }
                },
                "max_items": 1
              },
              "settings": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "activation_policy": {
                      "type": "string",
                      "optional": true,
                      "computed": true
                    },
                    "authorized_gae_applications": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "optional": true
                    },
                    "availability_type": {
                      "type": "string",
                      "optional": true,
                      "computed": true
                    },
                    "crash_safe_replication": {
                      "type": "bool",
                      "optional": true,
                      "computed": true
                    },
                    "disk_autoresize": {
                      "type": "bool",
                      "optional": true
                    },
                    "disk_size": {
                      "type": "number",
                      "optional": true,
                      "computed": true
                    },
                    "disk_type": {
                      "type": "string",
                      "optional": true,
                      "computed": true
                    },
                    "pricing_plan": {
                      "type": "string",
                      "optional": true
                    },
                    "replication_type": {
                      "type": "string",
                      "optional": true
                    },
                    "tier": {
                      "type": "string",
                      "required": true
                    },
                    "user_labels": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "optional": true
                    },
                    "version": {
                      "type": "number",
                      "computed": true
                    }
                  },
                  "block_types": {
                    "backup_configuration": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "binary_log_enabled": {
                            "type": "bool",
                            "optional": true
                          },
                          "enabled": {
                            "type": "bool",
                            "optional": true
                          },
                          "location": {
                            "type": "string",
                            "optional": true
                          },
                          "start_time": {
                            "type": "string",
                            "optional": true,
                            "computed": true
                          }
                        }
                      },
                      "max_items": 1
                    },
                    "database_flags": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "name": {
                            "type": "string",
                            "required": true
                          },
                          "value": {
                            "type": "string",
                            "required": true
                          }
                        }
                      }
                    },
                    "ip_configuration": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "ipv4_enabled": {
                            "type": "bool",
                            "optional": true,
                            "computed": true
                          },
                          "private_network": {
                            "type": "string",
                            "optional": true
                          },
                          "require_ssl": {
                            "type": "bool",
                            "optional": true
                          }
                        },
                        "block_types": {
                          "authorized_networks": {
                            "nesting_mode": "set",
                            "block": {
                              "attributes": {
                                "expiration_time": {
                                  "type": "string",
                                  "optional": true
                                },
                                "name": {
                                  "type": "string",
                                  "optional": true
                                },
                                "value": {
                                  "type": "string",
                                  "required": true
                                }
                              }
                            }
                          }
                        }
                      },
                      "max_items": 1
                    },
                    "location_preference": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "follow_gae_application": {
                            "type": "string",
                            "optional": true
                          },
                          "zone": {
                            "type": "string",
                            "optional": true
                          }
                        }
                      },
                      "max_items": 1
                    },
                    "maintenance_window": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "day": {
                            "type": "number",
                            "optional": true
                          },
                          "hour": {
                            "type": "number",
                            "optional": true
                          },
                          "update_track": {
                            "type": "string",
                            "optional": true
                          }
                        }
                      },
                      "max_items": 1
                    }
                  }
                },
                "min_items": 1,
                "max_items": 1
              },
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "google_sql_ssl_cert": {
          "version": 1,
          "block": {
            "attributes": {
              "cert": {
                "type": "string",
                "computed": true
              },
              "cert_serial_number": {
                "type": "string",
                "computed": true
              },
              "common_name": {
                "type": "string",
                "required": true
              },
              "create_time": {
                "type": "string",
                "computed": true
              },
              "expiration_time": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "instance": {
                "type": "string",
                "required": true
              },
              "private_key": {
                "type": "string",
                "computed": true,
                "sensitive": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "server_ca_cert": {
                "type": "string",
                "computed": true
              },
              "sha1_fingerprint": {
                "type": "string",
                "computed": true
              }
            }
          }
        },
        "google_sql_user": {
          "version": 1,
          "block": {
            "attributes": {
              "host": {
                "type": "string",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "instance": {
                "type": "string",
                "required": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "password": {
                "type": "string",
                "optional": true,
                "sensitive": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              }
            }
          }
        },
        "google_storage_bucket": {
          "version": 0,
          "block": {
            "attributes": {
              "bucket_policy_only": {
                "type": "bool",
                "optional": true,
                "computed": true
              },
              "default_event_based_hold": {
                "type": "bool",
                "optional": true
              },
              "force_destroy": {
                "type": "bool",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "labels": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              },
              "location": {
                "type": "string",
                "optional": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "requester_pays": {
                "type": "bool",
                "optional": true
              },
              "self_link": {
                "type": "string",
                "computed": true
              },
              "storage_class": {
                "type": "string",
                "optional": true
              },
              "url": {
                "type": "string",
                "computed": true
              }
            },
            "block_types": {
              "cors": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "max_age_seconds": {
                      "type": "number",
                      "optional": true
                    },
                    "method": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "optional": true
                    },
                    "origin": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "optional": true
                    },
                    "response_header": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "optional": true
                    }
                  }
                }
              },
              "encryption": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "default_kms_key_name": {
                      "type": "string",
                      "required": true
                    }
                  }
                },
                "max_items": 1
              },
              "lifecycle_rule": {
                "nesting_mode": "list",
                "block": {
                  "block_types": {
                    "action": {
                      "nesting_mode": "set",
                      "block": {
                        "attributes": {
                          "storage_class": {
                            "type": "string",
                            "optional": true
                          },
                          "type": {
                            "type": "string",
                            "required": true
                          }
                        }
                      },
                      "min_items": 1,
                      "max_items": 1
                    },
                    "condition": {
                      "nesting_mode": "set",
                      "block": {
                        "attributes": {
                          "age": {
                            "type": "number",
                            "optional": true
                          },
                          "created_before": {
                            "type": "string",
                            "optional": true
                          },
                          "is_live": {
                            "type": "bool",
                            "optional": true,
                            "computed": true
                          },
                          "matches_storage_class": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "optional": true
                          },
                          "num_newer_versions": {
                            "type": "number",
                            "optional": true
                          },
                          "with_state": {
                            "type": "string",
                            "optional": true,
                            "computed": true
                          }
                        }
                      },
                      "min_items": 1,
                      "max_items": 1
                    }
                  }
                },
                "max_items": 100
              },
              "logging": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "log_bucket": {
                      "type": "string",
                      "required": true
                    },
                    "log_object_prefix": {
                      "type": "string",
                      "optional": true,
                      "computed": true
                    }
                  }
                },
                "max_items": 1
              },
              "retention_policy": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "is_locked": {
                      "type": "bool",
                      "optional": true
                    },
                    "retention_period": {
                      "type": "number",
                      "required": true
                    }
                  }
                },
                "max_items": 1
              },
              "versioning": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "enabled": {
                      "type": "bool",
                      "required": true
                    }
                  }
                },
                "max_items": 1
              },
              "website": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "main_page_suffix": {
                      "type": "string",
                      "optional": true
                    },
                    "not_found_page": {
                      "type": "string",
                      "optional": true
                    }
                  }
                },
                "max_items": 1
              }
            }
          }
        },
        "google_storage_bucket_access_control": {
          "version": 0,
          "block": {
            "attributes": {
              "bucket": {
                "type": "string",
                "description": "The name of the bucket.",
                "required": true
              },
              "domain": {
                "type": "string",
                "description": "The domain associated with the entity.",
                "computed": true
              },
              "email": {
                "type": "string",
                "description": "The email address associated with the entity.",
                "computed": true
              },
              "entity": {
                "type": "string",
                "description": "The entity holding the permission, in one of the following forms:\n  user-userId\n  user-email\n  group-groupId\n  group-email\n  domain-domain\n  project-team-projectId\n  allUsers\n  allAuthenticatedUsers\nExamples:\n  The user liz@example.com would be user-liz@example.com.\n  The group example@googlegroups.com would be\n  group-example@googlegroups.com.\n  To refer to all members of the Google Apps for Business domain\n  example.com, the entity would be domain-example.com.",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "role": {
                "type": "string",
                "description": "The access permission for the entity.",
                "optional": true
              }
            },
            "block_types": {
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "google_storage_bucket_acl": {
          "version": 0,
          "block": {
            "attributes": {
              "bucket": {
                "type": "string",
                "required": true
              },
              "default_acl": {
                "type": "string",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "predefined_acl": {
                "type": "string",
                "optional": true
              },
              "role_entity": {
                "type": [
                  "list",
                  "string"
                ],
                "optional": true,
                "computed": true
              }
            }
          }
        },
        "google_storage_bucket_iam_binding": {
          "version": 0,
          "block": {
            "attributes": {
              "bucket": {
                "type": "string",
                "required": true
              },
              "etag": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "members": {
                "type": [
                  "set",
                  "string"
                ],
                "required": true
              },
              "role": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "google_storage_bucket_iam_member": {
          "version": 0,
          "block": {
            "attributes": {
              "bucket": {
                "type": "string",
                "required": true
              },
              "etag": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "member": {
                "type": "string",
                "required": true
              },
              "role": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "google_storage_bucket_iam_policy": {
          "version": 0,
          "block": {
            "attributes": {
              "bucket": {
                "type": "string",
                "required": true
              },
              "etag": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "policy_data": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "google_storage_bucket_object": {
          "version": 0,
          "block": {
            "attributes": {
              "bucket": {
                "type": "string",
                "required": true
              },
              "cache_control": {
                "type": "string",
                "optional": true
              },
              "content": {
                "type": "string",
                "optional": true,
                "sensitive": true
              },
              "content_disposition": {
                "type": "string",
                "optional": true
              },
              "content_encoding": {
                "type": "string",
                "optional": true
              },
              "content_language": {
                "type": "string",
                "optional": true
              },
              "content_type": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "crc32c": {
                "type": "string",
                "computed": true
              },
              "detect_md5hash": {
                "type": "string",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "md5hash": {
                "type": "string",
                "computed": true
              },
              "metadata": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "output_name": {
                "type": "string",
                "computed": true
              },
              "self_link": {
                "type": "string",
                "computed": true
              },
              "source": {
                "type": "string",
                "optional": true
              },
              "storage_class": {
                "type": "string",
                "optional": true,
                "computed": true
              }
            }
          }
        },
        "google_storage_default_object_access_control": {
          "version": 0,
          "block": {
            "attributes": {
              "bucket": {
                "type": "string",
                "description": "The name of the bucket.",
                "required": true
              },
              "domain": {
                "type": "string",
                "description": "The domain associated with the entity.",
                "computed": true
              },
              "email": {
                "type": "string",
                "description": "The email address associated with the entity.",
                "computed": true
              },
              "entity": {
                "type": "string",
                "description": "The entity holding the permission, in one of the following forms:\n  * user-{{userId}}\n  * user-{{email}} (such as \"user-liz@example.com\")\n  * group-{{groupId}}\n  * group-{{email}} (such as \"group-example@googlegroups.com\")\n  * domain-{{domain}} (such as \"domain-example.com\")\n  * project-team-{{projectId}}\n  * allUsers\n  * allAuthenticatedUsers",
                "required": true
              },
              "entity_id": {
                "type": "string",
                "description": "The ID for the entity",
                "computed": true
              },
              "generation": {
                "type": "number",
                "description": "The content generation of the object, if applied to an object.",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "object": {
                "type": "string",
                "description": "The name of the object, if applied to an object.",
                "optional": true
              },
              "project_team": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "project_number": "string",
                      "team": "string"
                    }
                  ]
                ],
                "description": "The project team associated with the entity",
                "computed": true
              },
              "role": {
                "type": "string",
                "description": "The access permission for the entity.",
                "required": true
              }
            },
            "block_types": {
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "google_storage_default_object_acl": {
          "version": 0,
          "block": {
            "attributes": {
              "bucket": {
                "type": "string",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "role_entity": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true,
                "computed": true
              }
            }
          }
        },
        "google_storage_hmac_key": {
          "version": 0,
          "block": {
            "attributes": {
              "access_id": {
                "type": "string",
                "description": "The access ID of the HMAC Key.",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "secret": {
                "type": "string",
                "description": "HMAC secret key material.",
                "computed": true,
                "sensitive": true
              },
              "service_account_email": {
                "type": "string",
                "description": "The email address of the key's associated service account.",
                "required": true
              },
              "state": {
                "type": "string",
                "description": "The state of the key. Can be set to one of ACTIVE, INACTIVE.",
                "optional": true
              },
              "time_created": {
                "type": "string",
                "description": "'The creation time of the HMAC key in RFC 3339 format. '",
                "computed": true
              },
              "updated": {
                "type": "string",
                "description": "'The last modification time of the HMAC key metadata in RFC 3339 format.'",
                "computed": true
              }
            },
            "block_types": {
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "google_storage_notification": {
          "version": 0,
          "block": {
            "attributes": {
              "bucket": {
                "type": "string",
                "required": true
              },
              "custom_attributes": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              },
              "event_types": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "notification_id": {
                "type": "string",
                "computed": true
              },
              "object_name_prefix": {
                "type": "string",
                "optional": true
              },
              "payload_format": {
                "type": "string",
                "required": true
              },
              "self_link": {
                "type": "string",
                "computed": true
              },
              "topic": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "google_storage_object_access_control": {
          "version": 0,
          "block": {
            "attributes": {
              "bucket": {
                "type": "string",
                "description": "The name of the bucket.",
                "required": true
              },
              "domain": {
                "type": "string",
                "description": "The domain associated with the entity.",
                "computed": true
              },
              "email": {
                "type": "string",
                "description": "The email address associated with the entity.",
                "computed": true
              },
              "entity": {
                "type": "string",
                "description": "The entity holding the permission, in one of the following forms:\n  * user-{{userId}}\n  * user-{{email}} (such as \"user-liz@example.com\")\n  * group-{{groupId}}\n  * group-{{email}} (such as \"group-example@googlegroups.com\")\n  * domain-{{domain}} (such as \"domain-example.com\")\n  * project-team-{{projectId}}\n  * allUsers\n  * allAuthenticatedUsers",
                "required": true
              },
              "entity_id": {
                "type": "string",
                "description": "The ID for the entity",
                "computed": true
              },
              "generation": {
                "type": "number",
                "description": "The content generation of the object, if applied to an object.",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "object": {
                "type": "string",
                "description": "The name of the object to apply the access control to.",
                "required": true
              },
              "project_team": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "project_number": "string",
                      "team": "string"
                    }
                  ]
                ],
                "description": "The project team associated with the entity",
                "computed": true
              },
              "role": {
                "type": "string",
                "description": "The access permission for the entity.",
                "required": true
              }
            },
            "block_types": {
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "google_storage_object_acl": {
          "version": 0,
          "block": {
            "attributes": {
              "bucket": {
                "type": "string",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "object": {
                "type": "string",
                "required": true
              },
              "predefined_acl": {
                "type": "string",
                "optional": true
              },
              "role_entity": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true,
                "computed": true
              }
            }
          }
        },
        "google_storage_transfer_job": {
          "version": 0,
          "block": {
            "attributes": {
              "creation_time": {
                "type": "string",
                "computed": true
              },
              "deletion_time": {
                "type": "string",
                "computed": true
              },
              "description": {
                "type": "string",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "last_modification_time": {
                "type": "string",
                "computed": true
              },
              "name": {
                "type": "string",
                "computed": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "status": {
                "type": "string",
                "optional": true
              }
            },
            "block_types": {
              "schedule": {
                "nesting_mode": "list",
                "block": {
                  "block_types": {
                    "schedule_end_date": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "day": {
                            "type": "number",
                            "required": true
                          },
                          "month": {
                            "type": "number",
                            "required": true
                          },
                          "year": {
                            "type": "number",
                            "required": true
                          }
                        }
                      },
                      "max_items": 1
                    },
                    "schedule_start_date": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "day": {
                            "type": "number",
                            "required": true
                          },
                          "month": {
                            "type": "number",
                            "required": true
                          },
                          "year": {
                            "type": "number",
                            "required": true
                          }
                        }
                      },
                      "min_items": 1,
                      "max_items": 1
                    },
                    "start_time_of_day": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "hours": {
                            "type": "number",
                            "required": true
                          },
                          "minutes": {
                            "type": "number",
                            "required": true
                          },
                          "nanos": {
                            "type": "number",
                            "required": true
                          },
                          "seconds": {
                            "type": "number",
                            "required": true
                          }
                        }
                      },
                      "max_items": 1
                    }
                  }
                },
                "min_items": 1,
                "max_items": 1
              },
              "transfer_spec": {
                "nesting_mode": "list",
                "block": {
                  "block_types": {
                    "aws_s3_data_source": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "bucket_name": {
                            "type": "string",
                            "required": true
                          }
                        },
                        "block_types": {
                          "aws_access_key": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "access_key_id": {
                                  "type": "string",
                                  "required": true,
                                  "sensitive": true
                                },
                                "secret_access_key": {
                                  "type": "string",
                                  "required": true,
                                  "sensitive": true
                                }
                              }
                            },
                            "min_items": 1,
                            "max_items": 1
                          }
                        }
                      },
                      "max_items": 1
                    },
                    "gcs_data_sink": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "bucket_name": {
                            "type": "string",
                            "required": true
                          }
                        }
                      },
                      "max_items": 1
                    },
                    "gcs_data_source": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "bucket_name": {
                            "type": "string",
                            "required": true
                          }
                        }
                      },
                      "max_items": 1
                    },
                    "http_data_source": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "list_url": {
                            "type": "string",
                            "required": true
                          }
                        }
                      },
                      "max_items": 1
                    },
                    "object_conditions": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "exclude_prefixes": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "optional": true
                          },
                          "include_prefixes": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "optional": true
                          },
                          "max_time_elapsed_since_last_modification": {
                            "type": "string",
                            "optional": true
                          },
                          "min_time_elapsed_since_last_modification": {
                            "type": "string",
                            "optional": true
                          }
                        }
                      },
                      "max_items": 1
                    },
                    "transfer_options": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "delete_objects_from_source_after_transfer": {
                            "type": "bool",
                            "optional": true
                          },
                          "delete_objects_unique_in_sink": {
                            "type": "bool",
                            "optional": true
                          },
                          "overwrite_objects_already_existing_in_sink": {
                            "type": "bool",
                            "optional": true
                          }
                        }
                      },
                      "max_items": 1
                    }
                  }
                },
                "min_items": 1,
                "max_items": 1
              }
            }
          }
        },
        "google_tpu_node": {
          "version": 0,
          "block": {
            "attributes": {
              "accelerator_type": {
                "type": "string",
                "description": "The type of hardware accelerators associated with this node.",
                "required": true
              },
              "cidr_block": {
                "type": "string",
                "description": "The CIDR block that the TPU node will use when selecting an IP\naddress. This CIDR block must be a /29 block; the Compute Engine\nnetworks API forbids a smaller block, and using a larger block would\nbe wasteful (a node can only consume one IP address).\n\nErrors will occur if the CIDR block has already been used for a\ncurrently existing TPU node, the CIDR block conflicts with any\nsubnetworks in the user's provided network, or the provided network\nis peered with another network that is using that CIDR block.",
                "required": true
              },
              "description": {
                "type": "string",
                "description": "The user-supplied description of the TPU. Maximum of 512 characters.",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "labels": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "Resource labels to represent user provided metadata.",
                "optional": true
              },
              "name": {
                "type": "string",
                "description": "The immutable name of the TPU.",
                "required": true
              },
              "network": {
                "type": "string",
                "description": "The name of a network to peer the TPU node to. It must be a\npreexisting Compute Engine network inside of the project on which\nthis API has been activated. If none is provided, \"default\" will be\nused.",
                "optional": true,
                "computed": true
              },
              "network_endpoints": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "ip_address": "string",
                      "port": "number"
                    }
                  ]
                ],
                "description": "The network endpoints where TPU workers can be accessed and sent work.\nIt is recommended that Tensorflow clients of the node first reach out\nto the first (index 0) entry.",
                "computed": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "service_account": {
                "type": "string",
                "description": "The service account used to run the tensor flow services within the\nnode. To share resources, including Google Cloud Storage data, with\nthe Tensorflow job running in the Node, this account must have\npermissions to that data.",
                "computed": true
              },
              "tensorflow_version": {
                "type": "string",
                "description": "The version of Tensorflow running in the Node.",
                "required": true
              },
              "zone": {
                "type": "string",
                "description": "The GCP location for the TPU.",
                "required": true
              }
            },
            "block_types": {
              "scheduling_config": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "preemptible": {
                      "type": "bool",
                      "description": "Defines whether the TPU instance is preemptible.",
                      "required": true
                    }
                  }
                },
                "max_items": 1
              },
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "google_vpc_access_connector": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "ip_cidr_range": {
                "type": "string",
                "description": "The range of internal addresses that follows RFC 4632 notation. Example: '10.132.0.0/28'.",
                "required": true
              },
              "max_throughput": {
                "type": "number",
                "description": "Maximum throughput of the connector in Mbps, must be greater than 'min_throughput'. Default is 1000.",
                "optional": true
              },
              "min_throughput": {
                "type": "number",
                "description": "Minimum throughput of the connector in Mbps. Default and min is 200.",
                "optional": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource (Max 25 characters).",
                "required": true
              },
              "network": {
                "type": "string",
                "description": "Name of a VPC network.",
                "required": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "region": {
                "type": "string",
                "description": "Region where the VPC Access connector resides",
                "required": true
              },
              "self_link": {
                "type": "string",
                "description": "The fully qualified name of this VPC connector",
                "computed": true
              },
              "state": {
                "type": "string",
                "description": "State of the VPC access connector.",
                "computed": true
              }
            },
            "block_types": {
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        }
      },
      "data_source_schemas": {
        "google_active_folder": {
          "version": 0,
          "block": {
            "attributes": {
              "display_name": {
                "type": "string",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "computed": true
              },
              "parent": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "google_bigquery_default_service_account": {
          "version": 0,
          "block": {
            "attributes": {
              "email": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              }
            }
          }
        },
        "google_billing_account": {
          "version": 0,
          "block": {
            "attributes": {
              "billing_account": {
                "type": "string",
                "optional": true
              },
              "display_name": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "computed": true
              },
              "open": {
                "type": "bool",
                "optional": true,
                "computed": true
              },
              "project_ids": {
                "type": [
                  "set",
                  "string"
                ],
                "computed": true
              }
            }
          }
        },
        "google_client_config": {
          "version": 0,
          "block": {
            "attributes": {
              "access_token": {
                "type": "string",
                "computed": true,
                "sensitive": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "project": {
                "type": "string",
                "computed": true
              },
              "region": {
                "type": "string",
                "computed": true
              },
              "zone": {
                "type": "string",
                "computed": true
              }
            }
          }
        },
        "google_client_openid_userinfo": {
          "version": 0,
          "block": {
            "attributes": {
              "email": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              }
            }
          }
        },
        "google_cloudfunctions_function": {
          "version": 0,
          "block": {
            "attributes": {
              "available_memory_mb": {
                "type": "number",
                "computed": true
              },
              "description": {
                "type": "string",
                "computed": true
              },
              "entry_point": {
                "type": "string",
                "computed": true
              },
              "environment_variables": {
                "type": [
                  "map",
                  "string"
                ],
                "computed": true
              },
              "event_trigger": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "event_type": "string",
                      "failure_policy": [
                        "list",
                        [
                          "object",
                          {
                            "retry": "bool"
                          }
                        ]
                      ],
                      "resource": "string"
                    }
                  ]
                ],
                "computed": true
              },
              "https_trigger_url": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "labels": {
                "type": [
                  "map",
                  "string"
                ],
                "computed": true
              },
              "max_instances": {
                "type": "number",
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "project": {
                "type": "string",
                "optional": true
              },
              "region": {
                "type": "string",
                "optional": true
              },
              "runtime": {
                "type": "string",
                "computed": true
              },
              "service_account_email": {
                "type": "string",
                "computed": true
              },
              "source_archive_bucket": {
                "type": "string",
                "computed": true
              },
              "source_archive_object": {
                "type": "string",
                "computed": true
              },
              "source_repository": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "deployed_url": "string",
                      "url": "string"
                    }
                  ]
                ],
                "computed": true
              },
              "timeout": {
                "type": "number",
                "computed": true
              },
              "trigger_http": {
                "type": "bool",
                "computed": true
              },
              "vpc_connector": {
                "type": "string",
                "computed": true
              }
            }
          }
        },
        "google_composer_image_versions": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "image_versions": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "image_version_id": "string",
                      "supported_python_versions": [
                        "list",
                        "string"
                      ]
                    }
                  ]
                ],
                "computed": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "region": {
                "type": "string",
                "optional": true,
                "computed": true
              }
            }
          }
        },
        "google_compute_address": {
          "version": 0,
          "block": {
            "attributes": {
              "address": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "region": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "self_link": {
                "type": "string",
                "computed": true
              },
              "status": {
                "type": "string",
                "computed": true
              }
            }
          }
        },
        "google_compute_backend_bucket": {
          "version": 0,
          "block": {
            "attributes": {
              "bucket_name": {
                "type": "string",
                "description": "Cloud Storage bucket name.",
                "computed": true
              },
              "cdn_policy": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "signed_url_cache_max_age_sec": "number"
                    }
                  ]
                ],
                "description": "Cloud CDN configuration for this Backend Bucket.",
                "computed": true
              },
              "creation_timestamp": {
                "type": "string",
                "description": "Creation timestamp in RFC3339 text format.",
                "computed": true
              },
              "description": {
                "type": "string",
                "description": "An optional textual description of the resource; provided by the\nclient when the resource is created.",
                "computed": true
              },
              "enable_cdn": {
                "type": "bool",
                "description": "If true, enable Cloud CDN for this BackendBucket.",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "Name of the resource. Provided by the client when the resource is\ncreated. The name must be 1-63 characters long, and comply with\nRFC1035.  Specifically, the name must be 1-63 characters long and\nmatch the regular expression '[a-z]([-a-z0-9]*[a-z0-9])?' which means\nthe first character must be a lowercase letter, and all following\ncharacters must be a dash, lowercase letter, or digit, except the\nlast character, which cannot be a dash.",
                "required": true
              },
              "project": {
                "type": "string",
                "optional": true
              },
              "self_link": {
                "type": "string",
                "computed": true
              }
            }
          }
        },
        "google_compute_backend_service": {
          "version": 1,
          "block": {
            "attributes": {
              "affinity_cookie_ttl_sec": {
                "type": "number",
                "description": "Lifetime of cookies in seconds if session_affinity is\nGENERATED_COOKIE. If set to 0, the cookie is non-persistent and lasts\nonly until the end of the browser session (or equivalent). The\nmaximum allowed value for TTL is one day.\n\nWhen the load balancing scheme is INTERNAL, this field is not used.",
                "computed": true
              },
              "backend": {
                "type": [
                  "set",
                  [
                    "object",
                    {
                      "balancing_mode": "string",
                      "capacity_scaler": "number",
                      "description": "string",
                      "group": "string",
                      "max_connections": "number",
                      "max_connections_per_endpoint": "number",
                      "max_connections_per_instance": "number",
                      "max_rate": "number",
                      "max_rate_per_endpoint": "number",
                      "max_rate_per_instance": "number",
                      "max_utilization": "number"
                    }
                  ]
                ],
                "description": "The set of backends that serve this BackendService.",
                "computed": true
              },
              "cdn_policy": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "cache_key_policy": [
                        "list",
                        [
                          "object",
                          {
                            "include_host": "bool",
                            "include_protocol": "bool",
                            "include_query_string": "bool",
                            "query_string_blacklist": [
                              "set",
                              "string"
                            ],
                            "query_string_whitelist": [
                              "set",
                              "string"
                            ]
                          }
                        ]
                      ],
                      "signed_url_cache_max_age_sec": "number"
                    }
                  ]
                ],
                "description": "Cloud CDN configuration for this BackendService.",
                "computed": true
              },
              "connection_draining_timeout_sec": {
                "type": "number",
                "description": "Time for which instance will be drained (not accept new\nconnections, but still work to finish started).",
                "computed": true
              },
              "creation_timestamp": {
                "type": "string",
                "description": "Creation timestamp in RFC3339 text format.",
                "computed": true
              },
              "description": {
                "type": "string",
                "description": "An optional description of this resource.",
                "computed": true
              },
              "enable_cdn": {
                "type": "bool",
                "description": "If true, enable Cloud CDN for this BackendService.",
                "computed": true
              },
              "fingerprint": {
                "type": "string",
                "description": "Fingerprint of this resource. A hash of the contents stored in this\nobject. This field is used in optimistic locking.",
                "computed": true
              },
              "health_checks": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "The set of URLs to the HttpHealthCheck or HttpsHealthCheck resource\nfor health checking this BackendService. Currently at most one health\ncheck can be specified, and a health check is required.\n\nFor internal load balancing, a URL to a HealthCheck resource must be specified instead.",
                "computed": true
              },
              "iap": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "oauth2_client_id": "string",
                      "oauth2_client_secret": "string",
                      "oauth2_client_secret_sha256": "string"
                    }
                  ]
                ],
                "description": "Settings for enabling Cloud Identity Aware Proxy",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "load_balancing_scheme": {
                "type": "string",
                "description": "Indicates whether the backend service will be used with internal or\nexternal load balancing. A backend service created for one type of\nload balancing cannot be used with the other. Must be 'EXTERNAL' or\n'INTERNAL_SELF_MANAGED' for a global backend service. Defaults to 'EXTERNAL'.",
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "Name of the resource. Provided by the client when the resource is\ncreated. The name must be 1-63 characters long, and comply with\nRFC1035. Specifically, the name must be 1-63 characters long and match\nthe regular expression '[a-z]([-a-z0-9]*[a-z0-9])?' which means the\nfirst character must be a lowercase letter, and all following\ncharacters must be a dash, lowercase letter, or digit, except the last\ncharacter, which cannot be a dash.",
                "required": true
              },
              "port_name": {
                "type": "string",
                "description": "Name of backend port. The same name should appear in the instance\ngroups referenced by this service. Required when the load balancing\nscheme is EXTERNAL.",
                "computed": true
              },
              "project": {
                "type": "string",
                "optional": true
              },
              "protocol": {
                "type": "string",
                "description": "The protocol this BackendService uses to communicate with backends.\nPossible values are HTTP, HTTPS, HTTP2, TCP, and SSL. The default is\nHTTP. **NOTE**: HTTP2 is only valid for beta HTTP/2 load balancer\ntypes and may result in errors if used with the GA API.",
                "computed": true
              },
              "security_policy": {
                "type": "string",
                "description": "The security policy associated with this backend service.",
                "computed": true
              },
              "self_link": {
                "type": "string",
                "computed": true
              },
              "session_affinity": {
                "type": "string",
                "description": "Type of session affinity to use. The default is NONE. Session affinity is\nnot applicable if the protocol is UDP.",
                "computed": true
              },
              "timeout_sec": {
                "type": "number",
                "description": "How many seconds to wait for the backend before considering it a\nfailed request. Default is 30 seconds. Valid range is [1, 86400].",
                "computed": true
              }
            }
          }
        },
        "google_compute_default_service_account": {
          "version": 0,
          "block": {
            "attributes": {
              "display_name": {
                "type": "string",
                "computed": true
              },
              "email": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "computed": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "unique_id": {
                "type": "string",
                "computed": true
              }
            }
          }
        },
        "google_compute_forwarding_rule": {
          "version": 0,
          "block": {
            "attributes": {
              "backend_service": {
                "type": "string",
                "computed": true
              },
              "description": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "ip_address": {
                "type": "string",
                "computed": true
              },
              "ip_protocol": {
                "type": "string",
                "computed": true
              },
              "load_balancing_scheme": {
                "type": "string",
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "network": {
                "type": "string",
                "computed": true
              },
              "port_range": {
                "type": "string",
                "computed": true
              },
              "ports": {
                "type": [
                  "set",
                  "string"
                ],
                "computed": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "region": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "self_link": {
                "type": "string",
                "computed": true
              },
              "subnetwork": {
                "type": "string",
                "computed": true
              },
              "target": {
                "type": "string",
                "computed": true
              }
            }
          }
        },
        "google_compute_global_address": {
          "version": 0,
          "block": {
            "attributes": {
              "address": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "self_link": {
                "type": "string",
                "computed": true
              },
              "status": {
                "type": "string",
                "computed": true
              }
            }
          }
        },
        "google_compute_image": {
          "version": 0,
          "block": {
            "attributes": {
              "archive_size_bytes": {
                "type": "number",
                "computed": true
              },
              "creation_timestamp": {
                "type": "string",
                "computed": true
              },
              "description": {
                "type": "string",
                "computed": true
              },
              "disk_size_gb": {
                "type": "number",
                "computed": true
              },
              "family": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "image_encryption_key_sha256": {
                "type": "string",
                "computed": true
              },
              "image_id": {
                "type": "string",
                "computed": true
              },
              "label_fingerprint": {
                "type": "string",
                "computed": true
              },
              "labels": {
                "type": [
                  "map",
                  "string"
                ],
                "computed": true
              },
              "licenses": {
                "type": [
                  "list",
                  "string"
                ],
                "computed": true
              },
              "name": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "self_link": {
                "type": "string",
                "computed": true
              },
              "source_disk": {
                "type": "string",
                "computed": true
              },
              "source_disk_encryption_key_sha256": {
                "type": "string",
                "computed": true
              },
              "source_disk_id": {
                "type": "string",
                "computed": true
              },
              "source_image_id": {
                "type": "string",
                "computed": true
              },
              "status": {
                "type": "string",
                "computed": true
              }
            }
          }
        },
        "google_compute_instance": {
          "version": 6,
          "block": {
            "attributes": {
              "allow_stopping_for_update": {
                "type": "bool",
                "computed": true
              },
              "attached_disk": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "device_name": "string",
                      "disk_encryption_key_raw": "string",
                      "disk_encryption_key_sha256": "string",
                      "kms_key_self_link": "string",
                      "mode": "string",
                      "source": "string"
                    }
                  ]
                ],
                "computed": true
              },
              "boot_disk": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "auto_delete": "bool",
                      "device_name": "string",
                      "disk_encryption_key_raw": "string",
                      "disk_encryption_key_sha256": "string",
                      "initialize_params": [
                        "list",
                        [
                          "object",
                          {
                            "image": "string",
                            "labels": [
                              "map",
                              "string"
                            ],
                            "size": "number",
                            "type": "string"
                          }
                        ]
                      ],
                      "kms_key_self_link": "string",
                      "mode": "string",
                      "source": "string"
                    }
                  ]
                ],
                "computed": true
              },
              "can_ip_forward": {
                "type": "bool",
                "computed": true
              },
              "cpu_platform": {
                "type": "string",
                "computed": true
              },
              "deletion_protection": {
                "type": "bool",
                "computed": true
              },
              "description": {
                "type": "string",
                "computed": true
              },
              "desired_status": {
                "type": "string",
                "computed": true
              },
              "enable_display": {
                "type": "bool",
                "computed": true
              },
              "guest_accelerator": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "count": "number",
                      "type": "string"
                    }
                  ]
                ],
                "computed": true
              },
              "hostname": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "instance_id": {
                "type": "string",
                "computed": true
              },
              "label_fingerprint": {
                "type": "string",
                "computed": true
              },
              "labels": {
                "type": [
                  "map",
                  "string"
                ],
                "computed": true
              },
              "machine_type": {
                "type": "string",
                "computed": true
              },
              "metadata": {
                "type": [
                  "map",
                  "string"
                ],
                "computed": true
              },
              "metadata_fingerprint": {
                "type": "string",
                "computed": true
              },
              "metadata_startup_script": {
                "type": "string",
                "computed": true
              },
              "min_cpu_platform": {
                "type": "string",
                "computed": true
              },
              "name": {
                "type": "string",
                "optional": true
              },
              "network_interface": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "access_config": [
                        "list",
                        [
                          "object",
                          {
                            "nat_ip": "string",
                            "network_tier": "string",
                            "public_ptr_domain_name": "string"
                          }
                        ]
                      ],
                      "alias_ip_range": [
                        "list",
                        [
                          "object",
                          {
                            "ip_cidr_range": "string",
                            "subnetwork_range_name": "string"
                          }
                        ]
                      ],
                      "name": "string",
                      "network": "string",
                      "network_ip": "string",
                      "subnetwork": "string",
                      "subnetwork_project": "string"
                    }
                  ]
                ],
                "computed": true
              },
              "project": {
                "type": "string",
                "optional": true
              },
              "scheduling": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "automatic_restart": "bool",
                      "node_affinities": [
                        "set",
                        [
                          "object",
                          {
                            "key": "string",
                            "operator": "string",
                            "values": [
                              "set",
                              "string"
                            ]
                          }
                        ]
                      ],
                      "on_host_maintenance": "string",
                      "preemptible": "bool"
                    }
                  ]
                ],
                "computed": true
              },
              "scratch_disk": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "interface": "string"
                    }
                  ]
                ],
                "computed": true
              },
              "self_link": {
                "type": "string",
                "optional": true
              },
              "service_account": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "email": "string",
                      "scopes": [
                        "set",
                        "string"
                      ]
                    }
                  ]
                ],
                "computed": true
              },
              "shielded_instance_config": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "enable_integrity_monitoring": "bool",
                      "enable_secure_boot": "bool",
                      "enable_vtpm": "bool"
                    }
                  ]
                ],
                "computed": true
              },
              "tags": {
                "type": [
                  "set",
                  "string"
                ],
                "computed": true
              },
              "tags_fingerprint": {
                "type": "string",
                "computed": true
              },
              "zone": {
                "type": "string",
                "optional": true
              }
            }
          }
        },
        "google_compute_instance_group": {
          "version": 2,
          "block": {
            "attributes": {
              "description": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "instances": {
                "type": [
                  "set",
                  "string"
                ],
                "computed": true
              },
              "name": {
                "type": "string",
                "optional": true
              },
              "named_port": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "name": "string",
                      "port": "number"
                    }
                  ]
                ],
                "computed": true
              },
              "network": {
                "type": "string",
                "computed": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "self_link": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "size": {
                "type": "number",
                "computed": true
              },
              "zone": {
                "type": "string",
                "optional": true,
                "computed": true
              }
            }
          }
        },
        "google_compute_lb_ip_ranges": {
          "version": 0,
          "block": {
            "attributes": {
              "http_ssl_tcp_internal": {
                "type": [
                  "list",
                  "string"
                ],
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "network": {
                "type": [
                  "list",
                  "string"
                ],
                "computed": true
              }
            }
          }
        },
        "google_compute_network": {
          "version": 0,
          "block": {
            "attributes": {
              "description": {
                "type": "string",
                "computed": true
              },
              "gateway_ipv4": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "project": {
                "type": "string",
                "optional": true
              },
              "self_link": {
                "type": "string",
                "computed": true
              },
              "subnetworks_self_links": {
                "type": [
                  "list",
                  "string"
                ],
                "computed": true
              }
            }
          }
        },
        "google_compute_network_endpoint_group": {
          "version": 0,
          "block": {
            "attributes": {
              "default_port": {
                "type": "number",
                "description": "The default port used if the port number is not specified in the\nnetwork endpoint.",
                "computed": true
              },
              "description": {
                "type": "string",
                "description": "An optional description of this resource. Provide this property when\nyou create the resource.",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "Name of the resource; provided by the client when the resource is\ncreated. The name must be 1-63 characters long, and comply with\nRFC1035. Specifically, the name must be 1-63 characters long and match\nthe regular expression '[a-z]([-a-z0-9]*[a-z0-9])?' which means the\nfirst character must be a lowercase letter, and all following\ncharacters must be a dash, lowercase letter, or digit, except the last\ncharacter, which cannot be a dash.",
                "optional": true
              },
              "network": {
                "type": "string",
                "description": "The network to which all network endpoints in the NEG belong.\nUses \"default\" project network if unspecified.",
                "computed": true
              },
              "network_endpoint_type": {
                "type": "string",
                "description": "Type of network endpoints in this network endpoint group. Currently\nthe only supported value is GCE_VM_IP_PORT.",
                "computed": true
              },
              "project": {
                "type": "string",
                "computed": true
              },
              "self_link": {
                "type": "string",
                "optional": true
              },
              "size": {
                "type": "number",
                "description": "Number of network endpoints in the network endpoint group.",
                "computed": true
              },
              "subnetwork": {
                "type": "string",
                "description": "Optional subnetwork to which all network endpoints in the NEG belong.",
                "computed": true
              },
              "zone": {
                "type": "string",
                "description": "Zone where the network endpoint group is located.",
                "optional": true
              }
            }
          }
        },
        "google_compute_node_types": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "names": {
                "type": [
                  "list",
                  "string"
                ],
                "computed": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "zone": {
                "type": "string",
                "optional": true,
                "computed": true
              }
            }
          }
        },
        "google_compute_region_instance_group": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "instances": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "instance": "string",
                      "named_ports": [
                        "list",
                        [
                          "object",
                          {
                            "name": "string",
                            "port": "number"
                          }
                        ]
                      ],
                      "status": "string"
                    }
                  ]
                ],
                "computed": true
              },
              "name": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "region": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "self_link": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "size": {
                "type": "number",
                "computed": true
              }
            }
          }
        },
        "google_compute_regions": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "names": {
                "type": [
                  "list",
                  "string"
                ],
                "computed": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "status": {
                "type": "string",
                "optional": true
              }
            }
          }
        },
        "google_compute_router": {
          "version": 0,
          "block": {
            "attributes": {
              "bgp": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "advertise_mode": "string",
                      "advertised_groups": [
                        "list",
                        "string"
                      ],
                      "advertised_ip_ranges": [
                        "list",
                        [
                          "object",
                          {
                            "description": "string",
                            "range": "string"
                          }
                        ]
                      ],
                      "asn": "number"
                    }
                  ]
                ],
                "description": "BGP information specific to this router.",
                "computed": true
              },
              "creation_timestamp": {
                "type": "string",
                "description": "Creation timestamp in RFC3339 text format.",
                "computed": true
              },
              "description": {
                "type": "string",
                "description": "An optional description of this resource.",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "Name of the resource. The name must be 1-63 characters long, and\ncomply with RFC1035. Specifically, the name must be 1-63 characters\nlong and match the regular expression '[a-z]([-a-z0-9]*[a-z0-9])?'\nwhich means the first character must be a lowercase letter, and all\nfollowing characters must be a dash, lowercase letter, or digit,\nexcept the last character, which cannot be a dash.",
                "required": true
              },
              "network": {
                "type": "string",
                "description": "A reference to the network to which this router belongs.",
                "required": true
              },
              "project": {
                "type": "string",
                "optional": true
              },
              "region": {
                "type": "string",
                "description": "Region where the router resides.",
                "optional": true
              },
              "self_link": {
                "type": "string",
                "computed": true
              }
            }
          }
        },
        "google_compute_ssl_certificate": {
          "version": 0,
          "block": {
            "attributes": {
              "certificate": {
                "type": "string",
                "description": "The certificate in PEM format.\nThe certificate chain must be no greater than 5 certs long.\nThe chain must include at least one intermediate cert.",
                "computed": true
              },
              "certificate_id": {
                "type": "number",
                "description": "The unique identifier for the resource.",
                "computed": true
              },
              "creation_timestamp": {
                "type": "string",
                "description": "Creation timestamp in RFC3339 text format.",
                "computed": true
              },
              "description": {
                "type": "string",
                "description": "An optional description of this resource.",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "Name of the resource. Provided by the client when the resource is\ncreated. The name must be 1-63 characters long, and comply with\nRFC1035. Specifically, the name must be 1-63 characters long and match\nthe regular expression '[a-z]([-a-z0-9]*[a-z0-9])?' which means the\nfirst character must be a lowercase letter, and all following\ncharacters must be a dash, lowercase letter, or digit, except the last\ncharacter, which cannot be a dash.\n\n\nThese are in the same namespace as the managed SSL certificates.",
                "required": true
              },
              "name_prefix": {
                "type": "string",
                "computed": true
              },
              "private_key": {
                "type": "string",
                "description": "The write-only private key in PEM format.",
                "computed": true
              },
              "project": {
                "type": "string",
                "optional": true
              },
              "self_link": {
                "type": "string",
                "computed": true
              }
            }
          }
        },
        "google_compute_ssl_policy": {
          "version": 0,
          "block": {
            "attributes": {
              "creation_timestamp": {
                "type": "string",
                "description": "Creation timestamp in RFC3339 text format.",
                "computed": true
              },
              "custom_features": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "Profile specifies the set of SSL features that can be used by the\nload balancer when negotiating SSL with clients. This can be one of\n'COMPATIBLE', 'MODERN', 'RESTRICTED', or 'CUSTOM'. If using 'CUSTOM',\nthe set of SSL features to enable must be specified in the\n'customFeatures' field.\n\nSee the [official documentation](https://cloud.google.com/compute/docs/load-balancing/ssl-policies#profilefeaturesupport)\nfor which ciphers are available to use. **Note**: this argument\n*must* be present when using the 'CUSTOM' profile. This argument\n*must not* be present when using any other profile.",
                "computed": true
              },
              "description": {
                "type": "string",
                "description": "An optional description of this resource.",
                "computed": true
              },
              "enabled_features": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "The list of features enabled in the SSL policy.",
                "computed": true
              },
              "fingerprint": {
                "type": "string",
                "description": "Fingerprint of this resource. A hash of the contents stored in this\nobject. This field is used in optimistic locking.",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "min_tls_version": {
                "type": "string",
                "description": "The minimum version of SSL protocol that can be used by the clients\nto establish a connection with the load balancer. This can be one of\n'TLS_1_0', 'TLS_1_1', 'TLS_1_2'.\n Default is 'TLS_1_0'.",
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "Name of the resource. Provided by the client when the resource is\ncreated. The name must be 1-63 characters long, and comply with\nRFC1035. Specifically, the name must be 1-63 characters long and match\nthe regular expression '[a-z]([-a-z0-9]*[a-z0-9])?' which means the\nfirst character must be a lowercase letter, and all following\ncharacters must be a dash, lowercase letter, or digit, except the last\ncharacter, which cannot be a dash.",
                "required": true
              },
              "profile": {
                "type": "string",
                "description": "Profile specifies the set of SSL features that can be used by the\nload balancer when negotiating SSL with clients. This can be one of\n'COMPATIBLE', 'MODERN', 'RESTRICTED', or 'CUSTOM'. If using 'CUSTOM',\nthe set of SSL features to enable must be specified in the\n'customFeatures' field.\n\nSee the [official documentation](https://cloud.google.com/compute/docs/load-balancing/ssl-policies#profilefeaturesupport)\nfor information on what cipher suites each profile provides. If\n'CUSTOM' is used, the 'custom_features' attribute **must be set**.\nDefault is 'COMPATIBLE'.",
                "computed": true
              },
              "project": {
                "type": "string",
                "optional": true
              },
              "self_link": {
                "type": "string",
                "computed": true
              }
            }
          }
        },
        "google_compute_subnetwork": {
          "version": 0,
          "block": {
            "attributes": {
              "description": {
                "type": "string",
                "computed": true
              },
              "gateway_address": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "ip_cidr_range": {
                "type": "string",
                "computed": true
              },
              "name": {
                "type": "string",
                "optional": true
              },
              "network": {
                "type": "string",
                "computed": true
              },
              "private_ip_google_access": {
                "type": "bool",
                "computed": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "region": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "secondary_ip_range": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "ip_cidr_range": "string",
                      "range_name": "string"
                    }
                  ]
                ],
                "computed": true
              },
              "self_link": {
                "type": "string",
                "optional": true,
                "computed": true
              }
            }
          }
        },
        "google_compute_vpn_gateway": {
          "version": 0,
          "block": {
            "attributes": {
              "description": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "network": {
                "type": "string",
                "computed": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "region": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "self_link": {
                "type": "string",
                "computed": true
              }
            }
          }
        },
        "google_compute_zones": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "names": {
                "type": [
                  "list",
                  "string"
                ],
                "computed": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "region": {
                "type": "string",
                "optional": true
              },
              "status": {
                "type": "string",
                "optional": true
              }
            }
          }
        },
        "google_container_cluster": {
          "version": 1,
          "block": {
            "attributes": {
              "additional_zones": {
                "type": [
                  "set",
                  "string"
                ],
                "computed": true
              },
              "addons_config": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "horizontal_pod_autoscaling": [
                        "list",
                        [
                          "object",
                          {
                            "disabled": "bool"
                          }
                        ]
                      ],
                      "http_load_balancing": [
                        "list",
                        [
                          "object",
                          {
                            "disabled": "bool"
                          }
                        ]
                      ],
                      "kubernetes_dashboard": [
                        "list",
                        [
                          "object",
                          {
                            "disabled": "bool"
                          }
                        ]
                      ],
                      "network_policy_config": [
                        "list",
                        [
                          "object",
                          {
                            "disabled": "bool"
                          }
                        ]
                      ]
                    }
                  ]
                ],
                "computed": true
              },
              "authenticator_groups_config": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "security_group": "string"
                    }
                  ]
                ],
                "computed": true
              },
              "cluster_autoscaling": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "auto_provisioning_defaults": [
                        "list",
                        [
                          "object",
                          {
                            "oauth_scopes": [
                              "list",
                              "string"
                            ],
                            "service_account": "string"
                          }
                        ]
                      ],
                      "enabled": "bool",
                      "resource_limits": [
                        "list",
                        [
                          "object",
                          {
                            "maximum": "number",
                            "minimum": "number",
                            "resource_type": "string"
                          }
                        ]
                      ]
                    }
                  ]
                ],
                "computed": true
              },
              "cluster_ipv4_cidr": {
                "type": "string",
                "computed": true
              },
              "default_max_pods_per_node": {
                "type": "number",
                "computed": true
              },
              "description": {
                "type": "string",
                "computed": true
              },
              "enable_binary_authorization": {
                "type": "bool",
                "computed": true
              },
              "enable_intranode_visibility": {
                "type": "bool",
                "computed": true
              },
              "enable_kubernetes_alpha": {
                "type": "bool",
                "computed": true
              },
              "enable_legacy_abac": {
                "type": "bool",
                "computed": true
              },
              "enable_tpu": {
                "type": "bool",
                "computed": true
              },
              "endpoint": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "initial_node_count": {
                "type": "number",
                "computed": true
              },
              "instance_group_urls": {
                "type": [
                  "list",
                  "string"
                ],
                "computed": true
              },
              "ip_allocation_policy": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "cluster_ipv4_cidr_block": "string",
                      "cluster_secondary_range_name": "string",
                      "node_ipv4_cidr_block": "string",
                      "services_ipv4_cidr_block": "string",
                      "services_secondary_range_name": "string",
                      "subnetwork_name": "string"
                    }
                  ]
                ],
                "computed": true
              },
              "label_fingerprint": {
                "type": "string",
                "computed": true
              },
              "location": {
                "type": "string",
                "optional": true
              },
              "logging_service": {
                "type": "string",
                "computed": true
              },
              "maintenance_policy": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "daily_maintenance_window": [
                        "list",
                        [
                          "object",
                          {
                            "duration": "string",
                            "start_time": "string"
                          }
                        ]
                      ]
                    }
                  ]
                ],
                "computed": true
              },
              "master_auth": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "client_certificate": "string",
                      "client_certificate_config": [
                        "list",
                        [
                          "object",
                          {
                            "issue_client_certificate": "bool"
                          }
                        ]
                      ],
                      "client_key": "string",
                      "cluster_ca_certificate": "string",
                      "password": "string",
                      "username": "string"
                    }
                  ]
                ],
                "computed": true
              },
              "master_authorized_networks_config": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "cidr_blocks": [
                        "set",
                        [
                          "object",
                          {
                            "cidr_block": "string",
                            "display_name": "string"
                          }
                        ]
                      ]
                    }
                  ]
                ],
                "computed": true
              },
              "master_version": {
                "type": "string",
                "computed": true
              },
              "min_master_version": {
                "type": "string",
                "computed": true
              },
              "monitoring_service": {
                "type": "string",
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "network": {
                "type": "string",
                "computed": true
              },
              "network_policy": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "enabled": "bool",
                      "provider": "string"
                    }
                  ]
                ],
                "computed": true
              },
              "node_config": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "disk_size_gb": "number",
                      "disk_type": "string",
                      "guest_accelerator": [
                        "list",
                        [
                          "object",
                          {
                            "count": "number",
                            "type": "string"
                          }
                        ]
                      ],
                      "image_type": "string",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "local_ssd_count": "number",
                      "machine_type": "string",
                      "metadata": [
                        "map",
                        "string"
                      ],
                      "min_cpu_platform": "string",
                      "oauth_scopes": [
                        "set",
                        "string"
                      ],
                      "preemptible": "bool",
                      "sandbox_config": [
                        "list",
                        [
                          "object",
                          {
                            "sandbox_type": "string"
                          }
                        ]
                      ],
                      "service_account": "string",
                      "shielded_instance_config": [
                        "list",
                        [
                          "object",
                          {
                            "enable_integrity_monitoring": "bool",
                            "enable_secure_boot": "bool"
                          }
                        ]
                      ],
                      "tags": [
                        "list",
                        "string"
                      ],
                      "taint": [
                        "list",
                        [
                          "object",
                          {
                            "effect": "string",
                            "key": "string",
                            "value": "string"
                          }
                        ]
                      ],
                      "workload_metadata_config": [
                        "list",
                        [
                          "object",
                          {
                            "node_metadata": "string"
                          }
                        ]
                      ]
                    }
                  ]
                ],
                "computed": true
              },
              "node_locations": {
                "type": [
                  "set",
                  "string"
                ],
                "computed": true
              },
              "node_pool": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "autoscaling": [
                        "list",
                        [
                          "object",
                          {
                            "max_node_count": "number",
                            "min_node_count": "number"
                          }
                        ]
                      ],
                      "initial_node_count": "number",
                      "instance_group_urls": [
                        "list",
                        "string"
                      ],
                      "management": [
                        "list",
                        [
                          "object",
                          {
                            "auto_repair": "bool",
                            "auto_upgrade": "bool"
                          }
                        ]
                      ],
                      "max_pods_per_node": "number",
                      "name": "string",
                      "name_prefix": "string",
                      "node_config": [
                        "list",
                        [
                          "object",
                          {
                            "disk_size_gb": "number",
                            "disk_type": "string",
                            "guest_accelerator": [
                              "list",
                              [
                                "object",
                                {
                                  "count": "number",
                                  "type": "string"
                                }
                              ]
                            ],
                            "image_type": "string",
                            "labels": [
                              "map",
                              "string"
                            ],
                            "local_ssd_count": "number",
                            "machine_type": "string",
                            "metadata": [
                              "map",
                              "string"
                            ],
                            "min_cpu_platform": "string",
                            "oauth_scopes": [
                              "set",
                              "string"
                            ],
                            "preemptible": "bool",
                            "sandbox_config": [
                              "list",
                              [
                                "object",
                                {
                                  "sandbox_type": "string"
                                }
                              ]
                            ],
                            "service_account": "string",
                            "shielded_instance_config": [
                              "list",
                              [
                                "object",
                                {
                                  "enable_integrity_monitoring": "bool",
                                  "enable_secure_boot": "bool"
                                }
                              ]
                            ],
                            "tags": [
                              "list",
                              "string"
                            ],
                            "taint": [
                              "list",
                              [
                                "object",
                                {
                                  "effect": "string",
                                  "key": "string",
                                  "value": "string"
                                }
                              ]
                            ],
                            "workload_metadata_config": [
                              "list",
                              [
                                "object",
                                {
                                  "node_metadata": "string"
                                }
                              ]
                            ]
                          }
                        ]
                      ],
                      "node_count": "number",
                      "version": "string"
                    }
                  ]
                ],
                "computed": true
              },
              "node_version": {
                "type": "string",
                "computed": true
              },
              "operation": {
                "type": "string",
                "computed": true
              },
              "pod_security_policy_config": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "enabled": "bool"
                    }
                  ]
                ],
                "computed": true
              },
              "private_cluster_config": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "enable_private_endpoint": "bool",
                      "enable_private_nodes": "bool",
                      "master_ipv4_cidr_block": "string",
                      "peering_name": "string",
                      "private_endpoint": "string",
                      "public_endpoint": "string"
                    }
                  ]
                ],
                "computed": true
              },
              "project": {
                "type": "string",
                "optional": true
              },
              "region": {
                "type": "string",
                "optional": true
              },
              "remove_default_node_pool": {
                "type": "bool",
                "computed": true
              },
              "resource_labels": {
                "type": [
                  "map",
                  "string"
                ],
                "computed": true
              },
              "services_ipv4_cidr": {
                "type": "string",
                "computed": true
              },
              "subnetwork": {
                "type": "string",
                "computed": true
              },
              "vertical_pod_autoscaling": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "enabled": "bool"
                    }
                  ]
                ],
                "computed": true
              },
              "zone": {
                "type": "string",
                "optional": true
              }
            }
          }
        },
        "google_container_engine_versions": {
          "version": 0,
          "block": {
            "attributes": {
              "default_cluster_version": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "latest_master_version": {
                "type": "string",
                "computed": true
              },
              "latest_node_version": {
                "type": "string",
                "computed": true
              },
              "location": {
                "type": "string",
                "optional": true
              },
              "project": {
                "type": "string",
                "optional": true
              },
              "region": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "valid_master_versions": {
                "type": [
                  "list",
                  "string"
                ],
                "computed": true
              },
              "valid_node_versions": {
                "type": [
                  "list",
                  "string"
                ],
                "computed": true
              },
              "version_prefix": {
                "type": "string",
                "optional": true
              },
              "zone": {
                "type": "string",
                "optional": true,
                "computed": true
              }
            }
          }
        },
        "google_container_registry_image": {
          "version": 0,
          "block": {
            "attributes": {
              "digest": {
                "type": "string",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "image_url": {
                "type": "string",
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "region": {
                "type": "string",
                "optional": true
              },
              "tag": {
                "type": "string",
                "optional": true
              }
            }
          }
        },
        "google_container_registry_repository": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "region": {
                "type": "string",
                "optional": true
              },
              "repository_url": {
                "type": "string",
                "computed": true
              }
            }
          }
        },
        "google_dns_keys": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "key_signing_keys": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "algorithm": "string",
                      "creation_time": "string",
                      "description": "string",
                      "digests": [
                        "list",
                        [
                          "object",
                          {
                            "digest": "string",
                            "type": "string"
                          }
                        ]
                      ],
                      "ds_record": "string",
                      "id": "string",
                      "is_active": "bool",
                      "key_length": "number",
                      "key_tag": "number",
                      "public_key": "string"
                    }
                  ]
                ],
                "computed": true
              },
              "managed_zone": {
                "type": "string",
                "required": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "zone_signing_keys": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "algorithm": "string",
                      "creation_time": "string",
                      "description": "string",
                      "digests": [
                        "list",
                        [
                          "object",
                          {
                            "digest": "string",
                            "type": "string"
                          }
                        ]
                      ],
                      "id": "string",
                      "is_active": "bool",
                      "key_length": "number",
                      "key_tag": "number",
                      "public_key": "string"
                    }
                  ]
                ],
                "computed": true
              }
            }
          }
        },
        "google_dns_managed_zone": {
          "version": 0,
          "block": {
            "attributes": {
              "description": {
                "type": "string",
                "computed": true
              },
              "dns_name": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "name_servers": {
                "type": [
                  "list",
                  "string"
                ],
                "computed": true
              },
              "project": {
                "type": "string",
                "optional": true
              },
              "visibility": {
                "type": "string",
                "computed": true
              }
            }
          }
        },
        "google_folder": {
          "version": 0,
          "block": {
            "attributes": {
              "create_time": {
                "type": "string",
                "computed": true
              },
              "display_name": {
                "type": "string",
                "computed": true
              },
              "folder": {
                "type": "string",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "lifecycle_state": {
                "type": "string",
                "computed": true
              },
              "lookup_organization": {
                "type": "bool",
                "optional": true
              },
              "name": {
                "type": "string",
                "computed": true
              },
              "organization": {
                "type": "string",
                "computed": true
              },
              "parent": {
                "type": "string",
                "computed": true
              }
            }
          }
        },
        "google_folder_organization_policy": {
          "version": 0,
          "block": {
            "attributes": {
              "boolean_policy": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "enforced": "bool"
                    }
                  ]
                ],
                "computed": true
              },
              "constraint": {
                "type": "string",
                "required": true
              },
              "etag": {
                "type": "string",
                "computed": true
              },
              "folder": {
                "type": "string",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "list_policy": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "allow": [
                        "list",
                        [
                          "object",
                          {
                            "all": "bool",
                            "values": [
                              "set",
                              "string"
                            ]
                          }
                        ]
                      ],
                      "deny": [
                        "list",
                        [
                          "object",
                          {
                            "all": "bool",
                            "values": [
                              "set",
                              "string"
                            ]
                          }
                        ]
                      ],
                      "inherit_from_parent": "bool",
                      "suggested_value": "string"
                    }
                  ]
                ],
                "computed": true
              },
              "restore_policy": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "default": "bool"
                    }
                  ]
                ],
                "computed": true
              },
              "update_time": {
                "type": "string",
                "computed": true
              },
              "version": {
                "type": "number",
                "computed": true
              }
            }
          }
        },
        "google_iam_policy": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "policy_data": {
                "type": "string",
                "computed": true
              }
            },
            "block_types": {
              "audit_config": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "service": {
                      "type": "string",
                      "required": true
                    }
                  },
                  "block_types": {
                    "audit_log_configs": {
                      "nesting_mode": "set",
                      "block": {
                        "attributes": {
                          "exempted_members": {
                            "type": [
                              "set",
                              "string"
                            ],
                            "optional": true
                          },
                          "log_type": {
                            "type": "string",
                            "required": true
                          }
                        }
                      },
                      "min_items": 1
                    }
                  }
                }
              },
              "binding": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "members": {
                      "type": [
                        "set",
                        "string"
                      ],
                      "required": true
                    },
                    "role": {
                      "type": "string",
                      "required": true
                    }
                  }
                }
              }
            }
          }
        },
        "google_iam_role": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "included_permissions": {
                "type": [
                  "list",
                  "string"
                ],
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "stage": {
                "type": "string",
                "computed": true
              },
              "title": {
                "type": "string",
                "computed": true
              }
            }
          }
        },
        "google_kms_crypto_key": {
          "version": 1,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "key_ring": {
                "type": "string",
                "description": "The KeyRing that this key belongs to.\nFormat: ''projects/{{project}}/locations/{{location}}/keyRings/{{keyRing}}''.",
                "required": true
              },
              "labels": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "Labels with user-defined metadata to apply to this resource.",
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "The resource name for the CryptoKey.",
                "required": true
              },
              "purpose": {
                "type": "string",
                "description": "The immutable purpose of this CryptoKey. See the\n[purpose reference](https://cloud.google.com/kms/docs/reference/rest/v1/projects.locations.keyRings.cryptoKeys#CryptoKeyPurpose)\nfor possible inputs.",
                "computed": true
              },
              "rotation_period": {
                "type": "string",
                "description": "Every time this period passes, generate a new CryptoKeyVersion and set it as the primary.\nThe first rotation will take place after the specified period. The rotation period has\nthe format of a decimal number with up to 9 fractional digits, followed by the\nletter 's' (seconds). It must be greater than a day (ie, 86400).",
                "computed": true
              },
              "self_link": {
                "type": "string",
                "computed": true
              },
              "version_template": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "algorithm": "string",
                      "protection_level": "string"
                    }
                  ]
                ],
                "description": "A template describing settings for new crypto key versions.",
                "computed": true
              }
            }
          }
        },
        "google_kms_crypto_key_version": {
          "version": 0,
          "block": {
            "attributes": {
              "algorithm": {
                "type": "string",
                "computed": true
              },
              "crypto_key": {
                "type": "string",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "protection_level": {
                "type": "string",
                "computed": true
              },
              "public_key": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "algorithm": "string",
                      "pem": "string"
                    }
                  ]
                ],
                "computed": true
              },
              "state": {
                "type": "string",
                "computed": true
              },
              "version": {
                "type": "number",
                "optional": true
              }
            }
          }
        },
        "google_kms_key_ring": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "location": {
                "type": "string",
                "description": "The location for the KeyRing.\nA full list of valid locations can be found by running 'gcloud kms locations list'.",
                "required": true
              },
              "name": {
                "type": "string",
                "description": "The resource name for the KeyRing.",
                "required": true
              },
              "project": {
                "type": "string",
                "optional": true
              },
              "self_link": {
                "type": "string",
                "computed": true
              }
            }
          }
        },
        "google_kms_secret": {
          "version": 0,
          "block": {
            "attributes": {
              "ciphertext": {
                "type": "string",
                "required": true
              },
              "crypto_key": {
                "type": "string",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "plaintext": {
                "type": "string",
                "computed": true,
                "sensitive": true
              }
            }
          }
        },
        "google_kms_secret_ciphertext": {
          "version": 0,
          "block": {
            "attributes": {
              "ciphertext": {
                "type": "string",
                "computed": true
              },
              "crypto_key": {
                "type": "string",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "plaintext": {
                "type": "string",
                "required": true,
                "sensitive": true
              }
            }
          }
        },
        "google_monitoring_notification_channel": {
          "version": 0,
          "block": {
            "attributes": {
              "description": {
                "type": "string",
                "description": "An optional human-readable description of this notification channel. This description may provide additional details, beyond the display name, for the channel. This may not exceed 1024 Unicode characters.",
                "computed": true
              },
              "display_name": {
                "type": "string",
                "description": "An optional human-readable name for this notification channel. It is recommended that you specify a non-empty and unique name in order to make it easier to identify the channels in your project, though this is not enforced. The display name is limited to 512 Unicode characters.",
                "optional": true
              },
              "enabled": {
                "type": "bool",
                "description": "Whether notifications are forwarded to the described channel. This makes it possible to disable delivery of notifications to a particular channel without removing the channel from all alerting policies that reference the channel. This is a more convenient approach when the change is temporary and you want to receive notifications from the same set of alerting policies on the channel at some point in the future.",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "labels": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "Configuration fields that define the channel and its behavior. The\npermissible and required labels are specified in the\nNotificationChannelDescriptor corresponding to the type field.\n\n**Note**: Some NotificationChannelDescriptor labels are\nsensitive and the API will return an partially-obfuscated value.\nFor example, for '\"type\": \"slack\"' channels, an 'auth_token'\nlabel with value \"SECRET\" will be obfuscated as \"**CRET\". In order\nto avoid a diff, Terraform will use the state value if it appears\nthat the obfuscated value matches the state value in\nlength/unobfuscated characters. However, Terraform will not detect a\ndiff if the obfuscated portion of the value was changed outside of\nTerraform.",
                "optional": true
              },
              "name": {
                "type": "string",
                "description": "The full REST resource name for this channel. The syntax is:\nprojects/[PROJECT_ID]/notificationChannels/[CHANNEL_ID]\nThe [CHANNEL_ID] is automatically assigned by the server on creation.",
                "computed": true
              },
              "project": {
                "type": "string",
                "optional": true
              },
              "type": {
                "type": "string",
                "description": "The type of the notification channel. This field matches the value of the NotificationChannelDescriptor.type field. See https://cloud.google.com/monitoring/api/ref_v3/rest/v3/projects.notificationChannelDescriptors/list to get the list of valid values such as \"email\", \"slack\", etc...",
                "optional": true
              },
              "user_labels": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "User-supplied key/value data that does not need to conform to the corresponding NotificationChannelDescriptor's schema, unlike the labels field. This field is intended to be used for organizing and identifying the NotificationChannel objects.The field can contain up to 64 entries. Each key and value is limited to 63 Unicode characters or 128 bytes, whichever is smaller. Labels and values can contain only lowercase letters, numerals, underscores, and dashes. Keys must begin with a letter.",
                "optional": true
              },
              "verification_status": {
                "type": "string",
                "description": "Indicates whether this channel has been verified or not. On a ListNotificationChannels or GetNotificationChannel operation, this field is expected to be populated.If the value is UNVERIFIED, then it indicates that the channel is non-functioning (it both requires verification and lacks verification); otherwise, it is assumed that the channel works.If the channel is neither VERIFIED nor UNVERIFIED, it implies that the channel is of a type that does not require verification or that this specific channel has been exempted from verification because it was created prior to verification being required for channels of this type.This field cannot be modified using a standard UpdateNotificationChannel operation. To change the value of this field, you must call VerifyNotificationChannel.",
                "computed": true
              }
            }
          }
        },
        "google_netblock_ip_ranges": {
          "version": 0,
          "block": {
            "attributes": {
              "cidr_blocks": {
                "type": [
                  "list",
                  "string"
                ],
                "computed": true
              },
              "cidr_blocks_ipv4": {
                "type": [
                  "list",
                  "string"
                ],
                "computed": true
              },
              "cidr_blocks_ipv6": {
                "type": [
                  "list",
                  "string"
                ],
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "range_type": {
                "type": "string",
                "optional": true
              }
            }
          }
        },
        "google_organization": {
          "version": 0,
          "block": {
            "attributes": {
              "create_time": {
                "type": "string",
                "computed": true
              },
              "directory_customer_id": {
                "type": "string",
                "computed": true
              },
              "domain": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "lifecycle_state": {
                "type": "string",
                "computed": true
              },
              "name": {
                "type": "string",
                "computed": true
              },
              "org_id": {
                "type": "string",
                "computed": true
              },
              "organization": {
                "type": "string",
                "optional": true
              }
            }
          }
        },
        "google_project": {
          "version": 1,
          "block": {
            "attributes": {
              "auto_create_network": {
                "type": "bool",
                "computed": true
              },
              "billing_account": {
                "type": "string",
                "computed": true
              },
              "folder_id": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "labels": {
                "type": [
                  "map",
                  "string"
                ],
                "computed": true
              },
              "name": {
                "type": "string",
                "computed": true
              },
              "number": {
                "type": "string",
                "computed": true
              },
              "org_id": {
                "type": "string",
                "computed": true
              },
              "project_id": {
                "type": "string",
                "optional": true
              },
              "skip_delete": {
                "type": "bool",
                "computed": true
              }
            }
          }
        },
        "google_project_organization_policy": {
          "version": 0,
          "block": {
            "attributes": {
              "boolean_policy": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "enforced": "bool"
                    }
                  ]
                ],
                "computed": true
              },
              "constraint": {
                "type": "string",
                "required": true
              },
              "etag": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "list_policy": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "allow": [
                        "list",
                        [
                          "object",
                          {
                            "all": "bool",
                            "values": [
                              "set",
                              "string"
                            ]
                          }
                        ]
                      ],
                      "deny": [
                        "list",
                        [
                          "object",
                          {
                            "all": "bool",
                            "values": [
                              "set",
                              "string"
                            ]
                          }
                        ]
                      ],
                      "inherit_from_parent": "bool",
                      "suggested_value": "string"
                    }
                  ]
                ],
                "computed": true
              },
              "project": {
                "type": "string",
                "required": true
              },
              "restore_policy": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "default": "bool"
                    }
                  ]
                ],
                "computed": true
              },
              "update_time": {
                "type": "string",
                "computed": true
              },
              "version": {
                "type": "number",
                "computed": true
              }
            }
          }
        },
        "google_projects": {
          "version": 0,
          "block": {
            "attributes": {
              "filter": {
                "type": "string",
                "required": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "projects": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "project_id": "string"
                    }
                  ]
                ],
                "computed": true
              }
            }
          }
        },
        "google_service_account": {
          "version": 0,
          "block": {
            "attributes": {
              "account_id": {
                "type": "string",
                "required": true
              },
              "display_name": {
                "type": "string",
                "computed": true
              },
              "email": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "computed": true
              },
              "project": {
                "type": "string",
                "optional": true
              },
              "unique_id": {
                "type": "string",
                "computed": true
              }
            }
          }
        },
        "google_service_account_access_token": {
          "version": 0,
          "block": {
            "attributes": {
              "access_token": {
                "type": "string",
                "computed": true,
                "sensitive": true
              },
              "delegates": {
                "type": [
                  "set",
                  "string"
                ],
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "lifetime": {
                "type": "string",
                "optional": true
              },
              "scopes": {
                "type": [
                  "set",
                  "string"
                ],
                "required": true
              },
              "target_service_account": {
                "type": "string",
                "required": true
              }
            }
          }
        },
        "google_service_account_key": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "key_algorithm": {
                "type": "string",
                "computed": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "project": {
                "type": "string",
                "optional": true
              },
              "public_key": {
                "type": "string",
                "computed": true
              },
              "public_key_type": {
                "type": "string",
                "optional": true
              }
            }
          }
        },
        "google_sql_ca_certs": {
          "version": 0,
          "block": {
            "attributes": {
              "active_version": {
                "type": "string",
                "computed": true
              },
              "certs": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "cert": "string",
                      "common_name": "string",
                      "create_time": "string",
                      "expiration_time": "string",
                      "sha1_fingerprint": "string"
                    }
                  ]
                ],
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "instance": {
                "type": "string",
                "required": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              }
            }
          }
        },
        "google_storage_bucket_object": {
          "version": 0,
          "block": {
            "attributes": {
              "bucket": {
                "type": "string",
                "optional": true
              },
              "cache_control": {
                "type": "string",
                "computed": true
              },
              "content": {
                "type": "string",
                "computed": true
              },
              "content_disposition": {
                "type": "string",
                "computed": true
              },
              "content_encoding": {
                "type": "string",
                "computed": true
              },
              "content_language": {
                "type": "string",
                "computed": true
              },
              "content_type": {
                "type": "string",
                "computed": true
              },
              "crc32c": {
                "type": "string",
                "computed": true
              },
              "detect_md5hash": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "md5hash": {
                "type": "string",
                "computed": true
              },
              "metadata": {
                "type": [
                  "map",
                  "string"
                ],
                "computed": true
              },
              "name": {
                "type": "string",
                "optional": true
              },
              "output_name": {
                "type": "string",
                "computed": true
              },
              "self_link": {
                "type": "string",
                "computed": true
              },
              "source": {
                "type": "string",
                "computed": true
              },
              "storage_class": {
                "type": "string",
                "computed": true
              }
            }
          }
        },
        "google_storage_object_signed_url": {
          "version": 0,
          "block": {
            "attributes": {
              "bucket": {
                "type": "string",
                "required": true
              },
              "content_md5": {
                "type": "string",
                "optional": true
              },
              "content_type": {
                "type": "string",
                "optional": true
              },
              "credentials": {
                "type": "string",
                "optional": true
              },
              "duration": {
                "type": "string",
                "optional": true
              },
              "extension_headers": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              },
              "http_method": {
                "type": "string",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "path": {
                "type": "string",
                "required": true
              },
              "signed_url": {
                "type": "string",
                "computed": true
              }
            }
          }
        },
        "google_storage_project_service_account": {
          "version": 0,
          "block": {
            "attributes": {
              "email_address": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "user_project": {
                "type": "string",
                "optional": true
              }
            }
          }
        },
        "google_storage_transfer_project_service_account": {
          "version": 0,
          "block": {
            "attributes": {
              "email": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              }
            }
          }
        },
        "google_tpu_tensorflow_versions": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "project": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "versions": {
                "type": [
                  "list",
                  "string"
                ],
                "computed": true
              },
              "zone": {
                "type": "string",
                "optional": true,
                "computed": true
              }
            }
          }
        }
      }
    }
  }
}
